{"id":29317,"name":"testing-ActiveCampaignValidate","userId":27893,"accountId":24428,"createdDate":"2019-09-03T05:34:01Z","steps":[{"id":264154,"onSuccess":["gotTpIntegConf"],"onFailure":[],"name":"ChargebeeGetTpIntegConf","type":"formula","properties":{"args":"${steps.ChargebeeParam}","formulaId":"31257"}},{"id":214289,"onSuccess":["ChargebeeGetTpIntegConf"],"onFailure":[],"name":"ChargebeeParam","type":"script","properties":{"body":"let body=steps.setupUploadCsv;\nlet password =\"\";\nlet siteName = steps.ConfigParams.ChargebeeConfigParams.site_name;\nlet siteDomain = steps.ConfigParams.ChargebeeConfigParams.siteDomain;\n\nlet input = {\n  // url : \"https://\"+body.query.site_name+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_configurations/tpmeta\",\n  headers:{\n        Authorization: \"Basic \" + CE.b64(body.query.api_key + \":\" + password),\n        api_key: body.query.api_key\n  },\n  query:{\n    integration_name:body.query.integ_name\n  },\n  apiKey: body.query.api_key,\n  siteName: steps.ConfigParams.ChargebeeConfigParams.siteName,\n  siteDomain: steps.ConfigParams.ChargebeeConfigParams.siteDomain,\n  type: body.query.integ_name\n};\n \ndone(input);"}},{"id":264155,"onSuccess":["tpIntegConfUpdated"],"onFailure":[],"name":"ChargebeePostUpdateS3Link","type":"formula","properties":{"args":"${steps.modifyConfig}","formulaId":"31258"}},{"id":264156,"onSuccess":["csvUploadSuccess"],"onFailure":[],"name":"ChargebeePostUploadCsv","type":"formula","properties":{"args":"${steps.setupUploadCsv}","formulaId":"31258"}},{"id":214290,"onSuccess":["NoSubscriptionFound"],"onFailure":[],"name":"checkSubscriptionExist","type":"elementRequest","properties":{"query":"${steps.SetSubscriptionParam}","elementInstanceId":"${config.chargebee}","method":"GET","api":"/subscriptions"}},{"id":214291,"onSuccess":["SETCustomerParams"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let configuration = {\n  noEmail:0,\n  noSubscription:0,\n  noEmailArray :[],\n  noSubscriptionArray:[],\n  ChargebeeConfigParams:{\n    api_key:trigger.args['apiKey'],\n    site_name:trigger.args['siteName'],\n    siteDomain:trigger.args['siteDomain'],\n    integ_name:trigger.args['type']\n  }\n};\ndone(configuration);"}},{"id":264157,"onSuccess":["ChargebeeParam"],"onFailure":["throwError"],"name":"csvUploadSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUploadCsv.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":214292,"onSuccess":["modifyConfig"],"onFailure":[],"name":"getConfig","type":"httpRequest","properties":{"query":"${steps.ChargebeeParam.query}","method":"GET","headers":"${steps.ChargebeeParam.auth}","url":"${steps.ChargebeeParam.url}"}},{"id":214293,"onSuccess":["hasCustomers"],"onFailure":[],"name":"getCustomerList","type":"elementRequest","properties":{"query":"${steps.SETCustomerParams.query}","retryAttempts":"5","elementInstanceId":"${config.chargebee}","method":"GET","retryStatusCodes":"429,500","retry":"true","api":"/customers","retryDelay":"200"}},{"id":264159,"onSuccess":["modifyConfig"],"onFailure":["throwError"],"name":"gotTpIntegConf","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":260139,"onSuccess":["loopOverCustomers"],"onFailure":["noCustomersFound"],"name":"hasCustomers","type":"filter","properties":{"body":"done(steps.getCustomerList.response.body.list.length > 0);"}},{"id":214294,"onSuccess":["setOffset"],"onFailure":["setupUploadCsv"],"name":"HasNextOffset","type":"filter","properties":{"body":"if(steps.getCustomerList.response.body.next_offset) {\n  done(true);\n} else {\n  done(false);\n}"}},{"id":214295,"onSuccess":["SetParams"],"onFailure":["HasNextOffset"],"name":"loopOverCustomers","type":"loop","properties":{"list":"${steps.getCustomerList.response.body.list}"}},{"id":214296,"onSuccess":["ChargebeePostUpdateS3Link"],"onFailure":[],"name":"modifyConfig","type":"script","properties":{"body":"let apiKey=steps.ConfigParams.ChargebeeConfigParams.api_key;\nlet siteName=steps.ConfigParams.ChargebeeConfigParams.site_name;\nlet siteDomain=steps.ConfigParams.ChargebeeConfigParams.siteDomain;\nlet type=steps.ConfigParams.ChargebeeConfigParams.integ_name;\n\nlet configuration=steps.ChargebeeGetTpIntegConf.data.config_json;\nconfiguration.cloudElements.formula.validate.logs=steps.ChargebeePostUploadCsv.data.s3_link;\nconfiguration.cloudElements.formula.validate.execution.status = \"DONE\";\n\n\nif(steps.validateEmailForCustomer.errorCSV.length > 0){\n  configuration.cloudElements.formula.validate.execution.result = {\n    error: true,\n    message: [\"Email address is unavailable for \" + steps.validateEmailForCustomer.errorCSV.length + \" customers in Chargebee\"]\n  };\n}else{\n  configuration.cloudElements.formula.validate.execution.result = {\n    error: false,\n    message: ['No Error found  during data validation']\n  };\n}\n\nlet tpConfigUpdateParams = {\n url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n headers: {\n   \"Content-Type\": \"application/json\",\n   \"cache-control\": \"no-cache\"\n },\n body:{\n     integration_name :type,\n     site_name :siteName,\n     api_key :apiKey,\n     config_json : configuration\n  },\n apiKey: apiKey,\n siteName: siteName,\n siteDomain: siteDomain,\n type: type\n};\n\ndone(tpConfigUpdateParams);\n"}},{"id":260140,"onSuccess":[],"onFailure":[],"name":"noCustomersFound","type":"script","properties":{"body":"throw \"No Customer Found\";"}},{"id":214297,"onSuccess":["loopOverCustomers"],"onFailure":[],"name":"NoSubscriptionFound","type":"script","properties":{"body":"\nlet out = {\n  eid :steps.validateEmailForCustomer.eid,\n  noEmail : steps.validateEmailForCustomer.noEmail,\n  noSubscription: steps.SetParams.noSubscription,\n   noEmailArray :steps.validateEmailForCustomer.noEmailArray,\n   noSubscriptionArray:steps.SetParams.noSubscriptionArray,\n   errorCSV: steps.validateEmailForCustomer.errorCSV\n};\n\nif(steps.checkSubscriptionExist.response.body.list === undefined){\n  out.sid = steps.loopOverCustomers.entry.customer.id;\n  out.noSubscription  =  out.noSubscription +1;\n  out.noSubscriptionArray.push(steps.loopOverCustomers.entry.customer.id);\n  out.errorCSV.push(steps.loopOverCustomers.entry.customer.id + \",Customer does not  have any subscriptions\\n\");\n}\n\nif(steps.checkSubscriptionExist.response.body.list !== undefined){\n  if(steps.checkSubscriptionExist.response.body.list.length === 0){\n  out.sid = steps.loopOverCustomers.entry.customer.id;\n  out.noSubscription  =  out.noSubscription +1;\n  out.noSubscriptionArray.push(steps.loopOverCustomers.entry.customer.id);\n  out.errorCSV.push(steps.loopOverCustomers.entry.customer.id + \",Customer does not have any subscriptions\\n\");\n  }\n}\n\n\ndone(out);\n"}},{"id":214298,"onSuccess":["getCustomerList"],"onFailure":[],"name":"SETCustomerParams","type":"script","properties":{"body":"let params = {\n  query: {\n \t   limit: 20\n  }\n};\n\nif(steps.setOffset !== undefined) {\n  params.query.offset = steps.getCustomerList.response.body.next_offset;\n}\n\n\ndone(params);"}},{"id":214299,"onSuccess":["SETCustomerParams"],"onFailure":[],"name":"setOffset","type":"script","properties":{"body":"done({\n  offset: steps.getCustomerList.response.body.next_offset\n});"}},{"id":214300,"onSuccess":["validateEmailForCustomer"],"onFailure":[],"name":"SetParams","type":"script","properties":{"body":"let configuration = {\n  noEmail:0,\n  noEmailArray :[],\n  errorCSV: []\n};\nif(steps.validateEmailForCustomer !== undefined) {\n\n    configuration.noEmail = steps.validateEmailForCustomer.noEmail;\n    configuration.noEmailArray =  steps.validateEmailForCustomer.noEmailArray;\n    configuration.errorCSV = steps.validateEmailForCustomer.errorCSV;\n  \n}\ndone(configuration);"}},{"id":214301,"onSuccess":["checkSubscriptionExist"],"onFailure":[],"name":"SetSubscriptionParam","type":"script","properties":{"body":"let subscriptionParam = {\n  customer_id : steps.loopOverCustomers.entry.customer.id,\n  status_is_not: \"cancelled\"\n}\n\ndone(subscriptionParam);"}},{"id":214302,"onSuccess":["ChargebeePostUploadCsv"],"onFailure":[],"name":"setupUploadCsv","type":"script","properties":{"body":"let api_key=steps.ConfigParams.ChargebeeConfigParams.api_key;\nlet site_name=steps.ConfigParams.ChargebeeConfigParams.site_name;\nlet siteDomain=steps.ConfigParams.ChargebeeConfigParams.siteDomain;\nlet integ_name=steps.ConfigParams.ChargebeeConfigParams.integ_name;\n\nlet file_type=\"csv\";\nlet password = \"\";\nlet errcsv=steps.validateEmailForCustomer.errorCSV;\n\n\n//******\n\nlet id;\nlet validationErrCsv=\"Id\"+\",\"+\"Error Description\\n\";\nlet msg;\n\nfor(let i=0;i<errcsv.length;++i){\n   id = errcsv[i].split(',')[0];\n  msg = errcsv[i].split(',')[1];\n  \n  validationErrCsv=validationErrCsv+id+\",\"+msg;\n  \n}\n//*******\n\nlet body={\n  \"url\":\"https://\"+site_name+\".integrations.\"+siteDomain+\"/integrations/api/file_upload\",\n  headers:{\n        Authorization: \"Basic \" + CE.b64(api_key + \":\" + password)\n      },\n  query:{\n    \"api_key\":api_key,\n    \"site_name\":site_name,\n    \"integ_name\":integ_name,\n    \"file_type\":file_type,\n    \"log_type\" : \"Validation\"\n    \n  },\n  body:{\n    \"file_content\":validationErrCsv\n  },\n  errcsv:errcsv,\n  apiKey: api_key,\n  siteName: site_name,\n  siteDomain: siteDomain,\n  type: integ_name\n};\n done(body);\n"}},{"id":264158,"onSuccess":[],"onFailure":[],"name":"throwError","type":"script","properties":{"body":"throw \"Validation Error\";"}},{"id":264160,"onSuccess":["validation"],"onFailure":["throwError"],"name":"tpIntegConfUpdated","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateS3Link.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":214303,"onSuccess":["validation"],"onFailure":[],"name":"updateS3linkInConfig","type":"httpRequest","properties":{"query":"","body":"${steps.modifyConfig.body}","method":"POST","headers":"${steps.modifyConfig.headers}","url":"${steps.modifyConfig.url}"}},{"id":214304,"onSuccess":["ChargebeeParam"],"onFailure":[],"name":"upload_csv","type":"httpRequest","properties":{"query":"${steps.setupUploadCsv.query}","body":"${steps.setupUploadCsv.body}","method":"POST","headers":"${steps.setupUploadCsv.auth}","url":"${steps.setupUploadCsv.url}"}},{"id":214305,"onSuccess":["loopOverCustomers"],"onFailure":[],"name":"validateEmailForCustomer","type":"script","properties":{"body":"let out = {\n  noEmail : steps.SetParams.noEmail,\n  noEmailArray :steps.SetParams.noEmailArray,\n  errorCSV: steps.SetParams.errorCSV\n};\nif(steps.loopOverCustomers.entry.customer.email === undefined){\n  out.eid = steps.loopOverCustomers.entry.customer.id;\n  out.noEmailArray.push(steps.loopOverCustomers.entry.customer.id);\n  out.noEmail  =  out.noEmail +1;\n  out.errorCSV.push(steps.loopOverCustomers.entry.customer.id + \",Email Address not available\\n\");\n}\n\ndone(out);"}},{"id":214306,"onSuccess":[],"onFailure":[],"name":"validation","type":"script","properties":{"body":"let update_card_json;\n\nlet errorCSV = steps.validateEmailForCustomer.errorCSV;\nlet noEmailCount = steps.validateEmailForCustomer.noEmail;\n\nif(noEmailCount > 0){\n  \n  update_card_json =  {\n      \"cardStatus\" : \"VALIDATION-FAILED\",\n      \"cardResult\": {\n        \"id\": \"check2\",\n        \"card\": {\n          \"type\": \"ACTION\",\n          \"heading\": \"We found the following errors during data validation\",\n          \"listContent\": [],\n          \"icon\": \"WARNING\"\n        },\n        \"csv\": errorCSV\n      }\n    }\n    \n  \n    update_card_json.cardResult.card.listContent.push(\"Email address is unavailable for \" + noEmailCount + \" customers in Chargebee\");\n  \n}else{\n  update_card_json =  {\n    \"cardStatus\" : \"VALIDATION-SUCCEEDED\",\n    \"cardResult\" : {\n      \"cards\": [\n        {\n         \"id\" : \"check2\",\n         \"card\": {\n            \"type\" : \"ACTION\",\n            \"heading\" : \"No Error found  during data validation\",\n            \"icon\" : \"SUCCESS\"\n          },\n         \"isCardDone\":\"true\"\n        }\n      ]\n    }\n  }\n}\n\n\ndone({\n  updateCardJson : update_card_json\n});"}}],"triggers":[{"id":25952,"onSuccess":["ConfigParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31257,"name":"ChargebeeGet","userId":27893,"accountId":24428,"createdDate":"2019-11-12T11:30:28Z","steps":[{"id":245638,"onSuccess":["ChargebeeGetCBDelay2"],"onFailure":["ChargebeeGetResult"],"name":"ChargebeeGetCallAgainCB","type":"filter","properties":{"body":"//done(false); //Since delay causing 30 second limit issues\n\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetCBData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245636,"onSuccess":["ChargebeeGetCBDelay"],"onFailure":["ChargebeeGetResult2"],"name":"ChargebeeGetCallAgainHttp","type":"filter","properties":{"body":"done(false); //Since delay causing 30 second limit issues\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetHttpData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245637,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":[],"name":"ChargebeeGetCBDelay","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","headers":"${steps.ChargebeeGetInputParams.delay.headers}","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":245639,"onSuccess":["ChargebeeGetGetCBData"],"onFailure":[],"name":"ChargebeeGetCBDelay2","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","headers":"${steps.ChargebeeGetInputParams.delay.headers}","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":244768,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244769,"onSuccess":["ChargebeeGetCallAgainCB"],"onFailure":["ChargebeeGetCallAgainCB"],"name":"ChargebeeGetGetCBData","type":"elementRequest","properties":{"query":"${steps.ChargebeeGetInputParams.query}","body":"","elementInstanceId":"${config.chargebee}","method":"GET","headers":"${steps.ChargebeeGetInputParams.headers}","acceptableStatusCodes":"200-600","api":"${steps.ChargebeeGetInputParams.url}"}},{"id":244774,"onSuccess":["ChargebeeGetCallAgainHttp"],"onFailure":["ChargebeeGetCallAgainHttp"],"name":"ChargebeeGetGetHttpData","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.query}","body":"","method":"GET","headers":"${steps.ChargebeeGetInputParams.headers}","acceptableStatusCodes":"200-600","url":"${steps.ChargebeeGetInputParams.url}"}},{"id":244764,"onSuccess":["ChargebeeGetIsValidUrl"],"onFailure":[],"name":"ChargebeeGetInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244771,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":["ChargebeeGetGetCBData"],"name":"ChargebeeGetIsHttp","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url.startsWith(\"https://\"));"}},{"id":244767,"onSuccess":["ChargebeeGetIsHttp"],"onFailure":["ChargebeeGetError"],"name":"ChargebeeGetIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url !== undefined && steps.ChargebeeGetInputParams.url!== \"\");"}},{"id":244770,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult","type":"script","properties":{"body":"if(steps.ChargebeeGetGetCBData.response.code < 300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetCBData.response.code,\n    data:steps.ChargebeeGetGetCBData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetCBData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetCBData.response!== undefined && steps.ChargebeeGetGetCBData.response.body!== undefined && steps.ChargebeeGetGetCBData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetCBData.response.body.error_code;\n    let cbcode = steps.ChargebeeGetGetCBData.response.code || 404;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_code: cbcode,\n    cb_exit:hardstop\n  });\n}\n\n"}},{"id":244775,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult2","type":"script","properties":{"body":"if(steps.ChargebeeGetGetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetHttpData.response.code,\n    data:steps.ChargebeeGetGetHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetHttpData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetHttpData.response.body!== undefined && steps.ChargebeeGetGetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_code: steps.ChargebeeGetGetHttpData.response.code\n  });\n}\n\n"}}],"triggers":[{"id":27722,"onSuccess":["ChargebeeGetInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59935,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]},{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"query":"${steps.ChargebeePostInputParams.delay.query}","method":"GET","headers":"${steps.ChargebeePostInputParams.delay.headers}","url":"${steps.ChargebeePostInputParams.delay.url}"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"query":"${steps.ChargebeePostInputParams.query}","body":"${steps.ChargebeePostInputParams.body}","method":"POST","headers":"${steps.ChargebeePostInputParams.headers}","acceptableStatusCodes":"200-600","url":"${steps.ChargebeePostInputParams.url}"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"uri":"","engine":"v3","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"configuration":[{"id":53177,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]}