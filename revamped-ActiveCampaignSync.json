{"id":32284,"name":"revamped-ActiveCampaignSync","debugLoggingExpires":"2020-01-10T17:03:23Z","userId":27893,"accountId":24428,"createdDate":"2020-01-10T09:03:23Z","steps":[{"id":260487,"onSuccess":["GetActiveCamapaignConfiguration"],"onFailure":[],"name":"ActiveCamapaignConfiguration","type":"script","properties":{"body":"let instance = steps.getListFromActiveCampaign.response.headers['elements-element-instance-id'];\n\ndone({\n  instanceId: instance\n});"}},{"id":260489,"onSuccess":["isContactAlreadySyncedParam"],"onFailure":[],"name":"ActiveCampaignInput","type":"script","properties":{"body":"let inputs = {};\nlet entry = steps.SetSubscription.data;\ninputs.stopSync=\"false\";\nlet isdeleted=false;\n\nlet chargebeeCustomFields = JSON.parse(steps.ChargebeeGetCbFields.data.response);\nlet mapperForChargebeeCustomer = chargebeeCustomFields.customer_custom_fields;\nlet mapperForChargebeeSubscription = chargebeeCustomFields.subscription_custom_fields;\n\nlet mapperForSubscription={\n   auto_collection: \"Cb_subscriptionAutoCollection\",\n   billing_period: \"Cb_billingPeriod\",\n   billing_period_unit: \"Cb_billingPeriodUnit\",\n   current_term_end : \"Cb_currentTermEnd\",\n   current_term_start : \"Cb_currentTermStart\",\n   customer_id : \"Cb_customerId\",\n   plan_free_quantity : \"Cb_planFreeQuantity\",\n   has_scheduled_changes : \"Cb_hasScheduledChanges\",\n   due_invoices_count : \"Cb_dueInvoicesCount\",\n   plan_quantity: \"Cb_planQuantity\",\n   resource_version : \"Cb_ResourceVersion\",\n   plan_unit_price : \"Cb_planUnitPrice\",\n   updated_on : \"Cb_updatedOn\",\n   deleted : \"Cb_SubscriptionDeleted\",\n   object : \"Cb_object\",\n   total_dues : \"Cb_totalDues\",\n   due_since : \"Cb_dueSince\"\n};\n\nlet mapperForcustomer={\n   allow_direct_debit : \"Cb_allowDirectDebit\",\n   auto_collection: \"Cb_autoCollection\",\n   card_status: \"Cb_cardStatus\",\n   created_on: \"Cb_createdOn\",\n   email : \"Cb_email\",\n   excess_payments : \"Cb_excessPayments\",\n   id: \"Cb_id\",\n   net_term_days: \"Cb_netTermDays\",\n   object: \"Cb_customerObject\",\n   pii_cleared : \"Cb_piiCleared\",\n   preferred_currency_code : \"Cb_preferredCurrencyCode\",\n   promotional_credits : \"Cb_promotionalCredits\",\n   refundable_credits: \"Cb_refundableCredits\",\n   updated_at : \"Cb_CustomerUpdatedOn\",\n   taxability : \"Cb_taxability\",\n   unbilled_charges : \"Cb_unbilledCharges\",\n   billing_address_city: \"Cb_billingAddressCity\",\n   billing_address_country : \"Cb_billingAddressCountry\",\n   billing_address_first_name : \"Cb_billingAddressFirstName\",\n   billing_address_last_name : \"Cb_billingAddressLastName\",\n   billing_address_object : \"Cb_billingAddressObject\",\n   billing_address_state : \"Cb_billingAddressState\",\n   billing_address_state_code : \"Cb_billingAddressStateCode\",\n   billing_address_validation_status : \"Cb_billingAddressValidationStatus\",\n   billing_address_zip : \"Cb_billingAddressZip\",\n   locale : \"Cb_locale\"\n};\n\n\n\ninputs.contact = {\n    \"contact\": {\n        \"email\": entry.customer.email,\n        \"firstName\": entry.customer.first_name || '',\n        \"lastName\": entry.customer.last_name || '',\n        \"phone\": entry.customer.phone || ''\n    }\n};\n\ninputs.query = {\n  \"email\": entry.customer.email\n};\n\nlet check = steps.getSelectedCustomFieldsFromUi.check;\nlet selectedFields = [\"Cb_chargebeeCustomerStatus\",\"Cb_orgName\",\"Cb_subscriptionID\",\"Cb_subscriptionPlanName\",\"Cb_subscriptionPlanValue\",\"Cb_subscriptionStatus\",\"Cb_subscriptionTrialStartDate\",\"Cb_subscriptionTrialEndDate\",\"Cb_subscriptionNextBillingDate\",\"Cb_subscriptionCreatedOn\",\"Cb_subscriptionStartsOn\",\"Cb_subscriptionCancelledOn\",\"Cb_currency\",\"Cb_subscriptionCancellationReason\",\"Cb_subscriptionMRR\"];\n\n//Above are default fields which is mandatory\n\nlet fieldNames_customer;\nlet fieldNames_subscription;\nif(check !== undefined && check.subscriptionFields !== undefined){\n  fieldNames_customer = Object.keys(check.subscriptionFields.search)\n}\n\nif(check !== undefined && check.customerFields !== undefined){\n  fieldNames_subscription = Object.keys(check.customerFields.search2);\n}\n\nif(fieldNames_customer !== undefined){\nfor( let i = 0; i<fieldNames_customer.length; ++i){\n    if(mapperForcustomer[fieldNames_customer[i]] !== undefined){\n        selectedFields.push(mapperForcustomer[fieldNames_customer[i]]);\n    }else if (mapperForChargebeeCustomer[fieldNames_customer[i]] !== undefined){\n        selectedFields.push(\"Cb_\"+mapperForChargebeeCustomer[fieldNames_customer[i]]);\n    }\n}}\n\nif(fieldNames_subscription !== undefined){\n  for( let i = 0; i<fieldNames_subscription.length; ++i){\n    if(mapperForSubscription[fieldNames_subscription[i]] !== undefined){ \n        selectedFields.push(mapperForSubscription[fieldNames_subscription[i]]);\n    }else if(mapperForChargebeeSubscription[fieldNames_subscription[i]] !== undefined){\n        selectedFields.push(\"Cb_\"+mapperForChargebeeSubscription[fieldNames_subscription[i]]);\n    }\n  }\n}\n\nlet fields = steps.ListOfCustomFields.response.body;\nlet customFields = {};\n\ncustomFields = steps.CBthirdPartyConfiguration.config_json.cloudElements.customFieldMap;\n\nlet fieldValues = [];\nlet contactId = 0;\n\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_chargebeeCustomerStatus,\n        \"value\": (entry.customer.deleted ? \"Inactive\" : \"Active\")\n    }\n  };\n  fieldValues.push(deleted);\n \n\n\nlet field_id = { \n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionID,\n        \"value\": entry.subscription.id || \"-\"\n    }\n};\n\nfieldValues.push(field_id);\n\nlet plan_id = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionPlanName,\n        \"value\": entry.subscription.plan_id || \"-\"\n    }\n};\n\nfieldValues.push(plan_id);\n\nlet plan_amount = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionPlanValue,\n        \"value\": entry.subscription.plan_amount !== undefined ? (entry.subscription.plan_amount / 100).toFixed(2) : \"-\"\n    }\n};\nfieldValues.push(plan_amount);\n\nlet subscription_status = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionStatus,\n        \"value\": entry.subscription.status || \"-\"\n    }\n}\n\nfieldValues.push(subscription_status);\n\n\n    let organization = {\n        \"fieldValue\": {\n            \"contact\": contactId,\n            \"field\": customFields.Cb_orgName,\n            \"value\": entry.customer.company || \"-\"\n        }\n    };\n    fieldValues.push(organization);\n\n\n\n    let trial_start = {\n        \"fieldValue\": {\n            \"contact\": contactId,\n            \"field\": customFields.Cb_subscriptionTrialStartDate,\n            \"value\": entry.subscription.trial_start !== undefined ? unixTime(entry.subscription.trial_start) : \"-\"\n        }\n    }\n\n    fieldValues.push(trial_start);\n\n\n\n\n    let trial_end = {\n        \"fieldValue\": {\n            \"contact\": contactId,\n            \"field\": customFields.Cb_subscriptionTrialEndDate,\n            \"value\":  entry.subscription.trial_end !== undefined ? unixTime(entry.subscription.trial_end) : \"-\"\n        }\n    }\n\n    fieldValues.push(trial_end);\n\n\n    let next_billing = {\n        \"fieldValue\": {\n            \"contact\": contactId,\n            \"field\": customFields.Cb_subscriptionNextBillingDate,\n            \"value\": entry.subscription.next_billing_at !== undefined ?  unixTime(entry.subscription.next_billing_at) : \"-\"\n        }\n    }\n\n    fieldValues.push(next_billing);\n\n\nlet created_at = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionCreatedOn,\n        \"value\": entry.subscription.created_at !== undefined \n        ? unixTime(entry.subscription.created_at) : \"-\"\n    }\n}\n\nfieldValues.push(created_at);\n\nlet start_at = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionStartsOn,\n        \"value\": entry.subscription.started_at !== undefined ? unixTime(entry.subscription.started_at) : \"-\"\n    }\n}\n\nfieldValues.push(start_at);\n\n    let cancelled_at = {\n        \"fieldValue\": {\n            \"contact\": contactId,\n            \"field\": customFields.Cb_subscriptionCancelledOn,\n            \"value\": entry.subscription.cancelled_at !== undefined ? unixTime(entry.subscription.cancelled_at) : \"-\"\n        }\n    }\n    fieldValues.push(cancelled_at);\n\n\n\n\nlet currency_code = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_currency,\n        \"value\": entry.subscription.currency_code || \"-\"\n    }\n}\n\nfieldValues.push(currency_code);\n\n\n    let cancel_reason = {\n        \"fieldValue\": {\n            \"contact\": contactId,\n            \"field\": customFields.Cb_subscriptionCancellationReason,\n            \"value\": entry.subscription.cancel_reason || \"-\"\n        }\n    }\n\n    fieldValues.push(cancel_reason);\n\n\nlet subscription_mrr = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionMRR,\n        \"value\": entry.subscription.mrr !== undefined ? (entry.subscription.mrr / 100).toFixed(2) : \"-\"\n    }\n}\n\nfieldValues.push(subscription_mrr);\n\n\n//newly creted custom fieldValues\n\nif(customFields.Cb_subscriptionAutoCollection!==undefined){\n  let auto_collection = {\n   \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_subscriptionAutoCollection,\n        \"value\": entry.subscription.auto_collection || \"-\"\n    }\n  };\n  fieldValues.push(auto_collection);\n \n}\n\nif(customFields.Cb_billingPeriod!==undefined){\n  let billing_period = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingPeriod,\n        \"value\": entry.subscription.billing_period || \"-\"\n    }\n  };\n  fieldValues.push(billing_period);\n  \n}\n\nif(customFields.Cb_currentTermEnd!==undefined){\n  let current_term_end = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_currentTermEnd,\n        \"value\": entry.subscription.current_term_end !== undefined ? unixTime(entry.subscription.current_term_end) : \"-\"\n    }\n  };\n  fieldValues.push(current_term_end);\n \n}\n\nif(customFields.Cb_currentTermStart!==undefined){\n  let current_term_start = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_currentTermStart,\n        \"value\":  entry.subscription.current_term_start !==undefined ? unixTime(entry.subscription.current_term_start): \"-\"\n    }\n  };\n  fieldValues.push(current_term_start);\n \n}\n\nif(customFields.Cb_customerId!==undefined){\n  let customer_id = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_customerId,\n        \"value\": entry.subscription.customer_id || \"-\"\n    }\n  };\n  fieldValues.push(customer_id);\n \n}\nif(customFields.Cb_planFreeQuantity!==undefined){\n  let plan_free_quantity = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_planFreeQuantity,\n        \"value\": entry.subscription.plan_free_quantity || \"-\"\n    }\n  };\n  fieldValues.push(plan_free_quantity);\n  \n}\nif(customFields.Cb_hasScheduledChanges!==undefined){\n  let has_scheduled_changes = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_hasScheduledChanges,\n        \"value\": entry.subscription.has_scheduled_changes || \"-\"\n    }\n  };\n  fieldValues.push(has_scheduled_changes);\n \n}\nif(customFields.Cb_dueInvoicesCount!==undefined){\n  let due_invoices_count = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_dueInvoicesCount,\n        \"value\": entry.subscription.due_invoices_count || \"-\"\n    }\n  };\n  fieldValues.push(due_invoices_count);\n  \n}if(customFields.Cb_planQuantity!==undefined){\n  let plan_quantity = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_planQuantity,\n        \"value\": entry.subscription.plan_quantity || \"-\"\n    }\n  };\n  fieldValues.push(plan_quantity);\n  \n}\n\nif(customFields.Cb_ResourceVersion!==undefined){\n  let resource_version = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_ResourceVersion,\n        \"value\": entry.subscription.resource_version || \"-\"\n    }\n  };\n  fieldValues.push(resource_version);\n  \n}\n\nif(customFields.Cb_planUnitPrice!==undefined){\n  let plan_unit_price = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_planUnitPrice,\n        \"value\": entry.subscription.plan_unit_price !== undefined ? (entry.subscription.plan_unit_price / 100).toFixed(2) : \"-\"\n    }\n  };\n  fieldValues.push(plan_unit_price);\n  \n}\nif(customFields.Cb_updatedOn!==undefined){\n  let updated_on = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_updatedOn,\n        \"value\": entry.subscription.updated_at !== undefined ? unixTime(entry.subscription.updated_at) : \"-\"\n    }\n  };\n  fieldValues.push(updated_on);\n \n}\n\nif(customFields.Cb_SubscriptionDeleted!==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_SubscriptionDeleted,\n        \"value\": (entry.subscription.deleted ) ? \"True\" : \"False\"\n    }\n  };\n  fieldValues.push(deleted);\n\n}\n\nif(customFields.Cb_dueSince!==undefined){\n  let due_since = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_dueSince,\n        \"value\": entry.subscription.due_since !==undefined ? unixTime(entry.subscription.due_since) : \"-\" \n    }\n  };\n  fieldValues.push(due_since);\n\n}\nif(customFields.Cb_totalDues !== undefined){\nlet total_dues = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_totalDues,\n        \"value\": entry.subscription.total_dues !==undefined ?  (entry.subscription.total_dues / 100).toFixed(2) : \"-\"\n    }\n };\n  fieldValues.push(total_dues);\n}\n\nif(customFields.Cb_billingPeriodUnit !== undefined){\nlet billing_period_unit = {\n    \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingPeriodUnit,\n        \"value\": entry.subscription.billing_period_unit || \"-\"\n    }\n};\n\n fieldValues.push(billing_period_unit);\n}\n\nlet chargebeeFields=JSON.parse(steps.ChargebeeGetCbFields.data.response);\nlet CbCustomerfieldsKeys=Object.keys(chargebeeFields.customer_custom_fields);\nlet CbSubscriptionfieldsKeys=Object.keys(chargebeeFields.subscription_custom_fields);\nlet Cb_Customerfields=chargebeeFields.customer_custom_fields;\nlet Cb_Subscriptionfields=chargebeeFields.subscription_custom_fields;\n\n//for CB subscription\nfor(var i=0;i<CbSubscriptionfieldsKeys.length;++i){\n  if(customFields[\"Cb_\"+Cb_Subscriptionfields[CbSubscriptionfieldsKeys[i]]]!==undefined){\n  fieldValues.push({\n     \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields[\"Cb_\"+Cb_Subscriptionfields[CbSubscriptionfieldsKeys[i]]],\n        \"value\": entry.subscription[CbSubscriptionfieldsKeys[i]] || \"-\"\n    }});\n  }\n}\n//for CB customer\n\nfor(var i=0;i<CbCustomerfieldsKeys.length;++i){\n  if(customFields[\"Cb_\"+Cb_Customerfields[CbCustomerfieldsKeys[i]]]!==undefined){\n  fieldValues.push({\n     \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields[\"Cb_\"+Cb_Customerfields[CbCustomerfieldsKeys[i]]],\n        \"value\": entry.customer[CbCustomerfieldsKeys[i]] || \"-\"\n    }});\n  }\n}\n\n//customer fieldValues\nif(customFields.Cb_allowDirectDebit!==undefined){\n  let allow_direct_debit = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_allowDirectDebit,\n        \"value\": entry.customer.allow_direct_debit || \"-\"\n    }\n  };\n  fieldValues.push(allow_direct_debit);\n\n}\n\nif(customFields.Cb_autoCollection!==undefined){\n  let auto_collection = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_autoCollection,\n        \"value\": entry.customer.auto_collection || \"-\"\n    }\n  };\n  fieldValues.push(auto_collection);\n\n}\n\nif(customFields.Cb_cardStatus!==undefined){\n  let card_status = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_cardStatus,\n        \"value\": entry.customer.card_status || \"-\"\n    }\n  };\n  fieldValues.push(card_status);\n\n}\n\nif(customFields.Cb_createdOn!==undefined){\n  let created_on = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_createdOn,\n        \"value\": entry.customer.created_at !== undefined ? unixTime(entry.customer.created_at) : \"-\"\n    }\n  };\n  fieldValues.push(created_on);\n\n}\n\n\nif(customFields.Cb_email!==undefined){\n  let email = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_email,\n        \"value\": entry.customer.email || \"-\"\n    }\n  };\n  fieldValues.push(email);\n \n}\n\nif(customFields.Cb_excessPayments!==undefined){\n  let excess_payments = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_excessPayments,\n        \"value\": entry.customer.excess_payments !== undefined ? (entry.customer.excess_payments / 100).toFixed(2) : \"-\"\n    }\n  };\n  fieldValues.push(excess_payments);\n\n}\n\nif(customFields.Cb_id!==undefined){\n  let id = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_id,\n        \"value\": entry.customer.id || \"-\"\n    }\n  };\n  fieldValues.push(id);\n\n}\n\nif(customFields.Cb_locale!==undefined){\n  let locale = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_locale,\n        \"value\": entry.customer.locale || \"-\"\n    }\n  };\n  fieldValues.push(locale);\n\n}\n\nif(customFields.Cb_netTermDays!==undefined){\n  let net_term_days = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_netTermDays,\n        \"value\": entry.customer.net_term_days || \"-\"\n    }\n  };\n  fieldValues.push(net_term_days);\n \n}\n\nif(customFields.object!==undefined){\n  let object = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.object,\n        \"value\": entry.customer.object || \"-\"\n    }\n  };\n  fieldValues.push(object);\n}//available in both subscrption and customer \n\nif(customFields.Cb_piiCleared!==undefined){\n  let pii_cleared = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_piiCleared,\n        \"value\": entry.customer.pii_cleared || \"-\"\n    }\n  };\n  fieldValues.push(pii_cleared);\n\n}\n\nif(customFields.Cb_preferredCurrencyCode!==undefined){\n  let preferred_currency_code = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_preferredCurrencyCode,\n        \"value\": entry.customer.preferred_currency_code || \"-\"\n    }\n  };\n  fieldValues.push(preferred_currency_code);\n \n}\n\n\nif(customFields.Cb_promotionalCredits!==undefined){\n  let promotional_credits = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_promotionalCredits,\n        \"value\": entry.customer.promotional_credits || \"-\"\n    }\n  };\n  fieldValues.push(promotional_credits);\n\n}\n\nif(customFields.Cb_refundableCredits!==undefined){\n  let refundable_credits = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_refundableCredits,\n        \"value\": entry.customer.refundable_credits || \"-\"\n    }\n  };\n  fieldValues.push(refundable_credits);\n\n}\n\nif(customFields.Cb_taxability!==undefined){\n  let taxability = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_taxability,\n        \"value\": entry.customer.taxability || \"-\"\n    }\n  };\n  fieldValues.push(taxability);\n \n}\n\nif(customFields.Cb_unbilledCharges!==undefined){\n  let unbilled_charges = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_unbilledCharges,\n        \"value\": entry.customer.unbilled_charges !== undefined ? (entry.customer.unbilled_charges / 100).toFixed(2) : \"-\"\n    }\n  };\n  fieldValues.push(unbilled_charges);\n \n}\n\nif(customFields.Cb_updatedAt!==undefined){\n  let updated_at = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_updatedAt,\n        \"value\": entry.customer.updated_at !==undefined ? unixTime(entry.customer.updated_at) : \"-\"\n    }\n  };\n  fieldValues.push(updated_at);\n\n}\n\n\nif(customFields.Cb_CustomerUpdatedOn !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_CustomerUpdatedOn,\n        \"value\": entry.customer.updated_at !== undefined ? unixTime(entry.customer.updated_at) : \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n \n}\n\nif(customFields.Cb_billingAddressCity !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressCity,\n        \"value\": entry.customer.billing_address.city || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\nif(customFields.Cb_billingAddressCountry !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressCountry,\n        \"value\": entry.customer.billing_address.country || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nif(customFields.Cb_billingAddressFirstName !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressFirstName,\n        \"value\": entry.customer.billing_address.first_name || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nif(customFields.Cb_billingAddressLastName !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressLastName,\n        \"value\": entry.customer.billing_address.last_name || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nif(customFields.Cb_billingAddressState !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressState,\n        \"value\": entry.customer.billing_address.state || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nif(customFields.Cb_billingAddressStateCode !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressStateCode,\n        \"value\": entry.customer.billing_address.state_code || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nif(customFields.Cb_billingAddressValidationStatus !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressValidationStatus,\n        \"value\": entry.customer.billing_address.validation_status || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nif(customFields.Cb_billingAddressZip !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressZip,\n        \"value\": entry.customer.billing_address.zip || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\nif(customFields.Cb_billingAddressCountry !==undefined){\n  if(entry.customer.billing_address !==undefined){\n  let deleted = {\n  \"fieldValue\": {\n        \"contact\": contactId,\n        \"field\": customFields.Cb_billingAddressCountry,\n        \"value\": entry.customer.billing_address.country || \"-\"\n    }\n  };\n  fieldValues.push(deleted);\n  }\n}\n\n\nfunction unixTime(unixtime) {\n\n    var u = new Date(unixtime*1000);\n    \n      return u.getUTCFullYear() +\n        '-' + ((( Number(u.getUTCMonth()) + 1)/10) < 1 ? '0' + ( Number(u.getUTCMonth()) + 1) : '' + ( Number(u.getUTCMonth()) + 1))  +\n        '-' + ('0' + u.getUTCDate()).slice(-2) + \n        ' ' + ('0' + u.getUTCHours()).slice(-2) +\n        ':' + ('0' + u.getUTCMinutes()).slice(-2) +\n        ':' + ('0' + u.getUTCSeconds()).slice(-2);\n    }\n\n\ninputs.fieldValues = fieldValues;\ndone(inputs);"}},{"id":260491,"onSuccess":["ChargebeeDelayApi"],"onFailure":[],"name":"BatchExecutionParams","type":"script","properties":{"body":"let input = steps.ConfigParams.triggerParams;\ninput.batching = true;\nlet batchCount = (steps.ConfigParams.triggerParams.batchCount !== undefined) ? steps.ConfigParams.triggerParams.batchCount+1 : 1;\ninput.batchCount = batchCount;\n\ninput.debugLoggingEnabled = true;\n\ndone({body: input})\n\n"}},{"id":260492,"onSuccess":["ChargebeeGetCbFields"],"onFailure":[],"name":"CbCustomFieldParams","type":"script","properties":{"body":"let apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet integ_name=steps.ConfigParams.getTpConfigParams.type;\n\nlet body = {\n  input: {\n    url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/api/get_custom_field_list\",\n    headers:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n    },\n    query:{\n      site_name: siteName,\n      api_key: apiKey\n    },\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain: siteDomain,\n    type: integ_name\n  }\n};\ndone(body);"}},{"id":260493,"onSuccess":["CustomersFound"],"onFailure":[],"name":"CBList","type":"script","properties":{"body":"let customerList = steps.CustomerChangeList.list;\nlet errorList;\n\nif(steps.ErrorList !== undefined && steps.ErrorList.contactList.length > 0){\n errorList = steps.ErrorList.contactList;\n customerList = (customerList !== undefined) ? customerList.concat(errorList) : errorList;\n}\n\n\nfunction removeDuplicates(myArr, prop) {\n    return myArr.filter((obj, pos, arr) => {\n        return arr.map(mapObj => mapObj.customer[prop]).indexOf(obj.customer[prop]) === pos;\n    });\n}\n\ncustomerList = customerList !== undefined ? removeDuplicates(customerList,\"id\"): [];\n\n\nlet bulkApiPayload = {\n  apiKey: steps.ConfigParams.getTpConfigParams.apiKey,\n  siteName: steps.ConfigParams.getTpConfigParams.siteName,\n  siteDomain: steps.ConfigParams.getTpConfigParams.siteDomain,\n  type: steps.ConfigParams.getTpConfigParams.type,\n  customers:customerList\n};\n\ndone({\n  count: customerList.length,\n  list: customerList,\n  bulkApiPayload: bulkApiPayload\n});\n\n"}},{"id":260494,"onSuccess":["notFirstCall"],"onFailure":[],"name":"CBthirdPartyConfiguration","type":"script","properties":{"body":"let configJson = steps.ChargebeeGetTpIntegConf.data;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\n\nif(steps.ConfigParams.triggerParams.batching === undefined ){\n  configJson.config_json.batch = { \"batch_size\": 100};\n}\n\nif(configJson.config_json.cloudElements.customFieldMap === undefined){\n  configJson.config_json.cloudElements.customFieldMap = {};\n}\n\nconfigJson.body = configJson.config_json.cloudElements.formula.mapping.inputs;\ndone(configJson);\n\n"}},{"id":261382,"onSuccess":["isDelayApiSuccess"],"onFailure":[],"name":"ChargebeeDelayApi","type":"formula","properties":{"args":"${steps.ConfigParams.delay}","formulaId":"31257"}},{"id":261478,"onSuccess":["isDelayApiSuccess_2"],"onFailure":[],"name":"ChargebeeDelayApi_2","type":"formula","properties":{"args":"${steps.ConfigParams.delay}","formulaId":"31257"}},{"id":261480,"onSuccess":["isDelayApiSuccess_3"],"onFailure":[],"name":"ChargebeeDelayApi_3","type":"formula","properties":{"args":"${steps.ConfigParams.delay}","formulaId":"31257"}},{"id":261482,"onSuccess":["isDelayApiSuccess_4"],"onFailure":[],"name":"ChargebeeDelayApi_4","type":"formula","properties":{"args":"${steps.ConfigParams.delay}","formulaId":"31257"}},{"id":261875,"onSuccess":["isDelayApiSuccess_5"],"onFailure":[],"name":"ChargebeeDelayApi_5","type":"formula","properties":{"args":"${steps.ConfigParams.delay}","formulaId":"31257"}},{"id":262757,"onSuccess":["gotBulkData"],"onFailure":[],"name":"ChargebeeGetBulkData","type":"formula","properties":{"args":"${steps.CBList.bulkApiPayload}","formulaId":"32480"}},{"id":260656,"onSuccess":["gotCbFields"],"onFailure":[],"name":"ChargebeeGetCbFields","type":"formula","properties":{"args":"${steps.CbCustomFieldParams.input}","formulaId":"31257"}},{"id":260771,"onSuccess":["gotConfig"],"onFailure":[],"name":"ChargebeeGetConfig","type":"formula","properties":{"args":"${steps.ChargebeeParam.params}","formulaId":"31257"}},{"id":260705,"onSuccess":["gotError"],"onFailure":[],"name":"ChargebeeGetError","type":"formula","properties":{"args":"${steps.GetErrorParams.params}","formulaId":"31257"}},{"id":260654,"onSuccess":["IsTpIntegSyncFetched"],"onFailure":[],"name":"ChargebeeGetLastSyncDetails","type":"formula","properties":{"args":"${steps.ConfigParams.retrieveLatestSyncConfig}","formulaId":"31257"}},{"id":260767,"onSuccess":["gotTpEntityParams"],"onFailure":[],"name":"ChargebeeGetTpEntityParams","type":"formula","properties":{"args":"${steps.TPEntityParams.params}","formulaId":"31257"}},{"id":260703,"onSuccess":["gotTpError"],"onFailure":[],"name":"ChargebeeGetTpError","type":"formula","properties":{"args":"${steps.GetTPErrorParams.params}","formulaId":"31257"}},{"id":260652,"onSuccess":["IsTpIntegConfFetched"],"onFailure":[],"name":"ChargebeeGetTpIntegConf","type":"formula","properties":{"args":"${steps.ConfigParams.getTpConfigParams}","formulaId":"31257"}},{"id":260496,"onSuccess":["ChargebeeGetConfig"],"onFailure":[],"name":"ChargebeeParam","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type =  steps.ConfigParams.getTpConfigParams.type;\n\nlet password =\"\";\n\nlet params = {\n  url : \"https://\"+ siteName +\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n  headers:{\n        Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n      },\n  query:{\n    integration_name : type\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n \ndone({\n  params: params\n});"}},{"id":260688,"onSuccess":["isRelationshipUpdateFailed"],"onFailure":[],"name":"ChargebeePostCreateFailedRelationship","type":"formula","properties":{"args":"${steps.createFailedRelationshipParams.payload}","formulaId":"31258"}},{"id":260696,"onSuccess":["Error"],"onFailure":["Error"],"name":"ChargebeePostUpdateFailedRelationship","type":"formula","properties":{"args":"${steps.UpdateFailedRelationshipParams.tpConfigUpdateParams}","formulaId":"31258"}},{"id":260777,"onSuccess":["offsetUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateOffset","type":"formula","properties":{"args":"${steps.UpdateOffsetParams.tpConfigUpdateParams}","formulaId":"31258"}},{"id":260892,"onSuccess":["isUpdateSyncDetailsSuccess"],"onFailure":[],"name":"ChargebeePostUpdateSyncDetailsBatching","type":"formula","properties":{"args":"${steps.UpdateSyncDetails.payload}","formulaId":"31258"}},{"id":261080,"onSuccess":["isUpdateSyncFailedSuccess"],"onFailure":[],"name":"ChargebeePostUpdateSyncFailed","type":"formula","properties":{"args":"${steps.UpdateSyncFailedParams.config}","formulaId":"31258"}},{"id":260775,"onSuccess":["isUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateSyncSuccess","type":"formula","properties":{"args":"${steps.UpdateSyncParams.payload}","formulaId":"31258"}},{"id":261386,"onSuccess":["isUpdateSuccess_4"],"onFailure":[],"name":"ChargebeePostUpdateTpConfig","type":"formula","properties":{"args":"${steps.configUpdateParams.tpConfigUpdateParams}","formulaId":"31258"}},{"id":260896,"onSuccess":["isTpEntityUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateTpEntity","type":"formula","properties":{"args":"${steps.UpdateTPEnityMapping}","formulaId":"31258"}},{"id":261076,"onSuccess":["isTpEntityUpdateSuccess_2"],"onFailure":[],"name":"ChargebeePostUpdateTpEntity_2","type":"formula","properties":{"args":"${steps.UpdateThirdPartyEntityParams.input}","formulaId":"31258"}},{"id":261086,"onSuccess":["isUpdateSuccess_3"],"onFailure":[],"name":"ChargebeePostUpdateTpEntity_3","type":"formula","properties":{"args":"${steps.UpdateTPEntityMapping.config}","formulaId":"31258"}},{"id":261082,"onSuccess":["isTpUpdateSubscriptionSuccess"],"onFailure":[],"name":"ChargebeePostUpdateTpEntitySubscription","type":"formula","properties":{"args":"${steps.UpdateTPEntityForSubscription.input}","formulaId":"31258"}},{"id":260772,"onSuccess":["updatedTpIntegConf"],"onFailure":[],"name":"ChargebeePostUpdateTpIntegConf","type":"formula","properties":{"args":"${steps.modifyConfig.tpConfigUpdateParams}","formulaId":"31258"}},{"id":260769,"onSuccess":["isUploadCsvDone"],"onFailure":[],"name":"ChargebeePostUploadCsv","type":"formula","properties":{"args":"${steps.setupUploadCsv}","formulaId":"31258"}},{"id":260497,"onSuccess":["getCustomersParam"],"onFailure":["customerList"],"name":"checkChangeCustomer","type":"filter","properties":{"body":"let contactLength = (steps.subscriptionList !== undefined ) ? steps.subscriptionList.customerList.list.length : 0;\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\nlet batch_size = configuration.batch.batch_size;\n\nif(steps.ConfigParams.initialSync){\n  done(true);\n}\nelse if(contactLength >= batch_size || configuration.batch.get_customer === null){\n  done(false);\n}\n  done(true);\n"}},{"id":260498,"onSuccess":["ChargebeeDelayApi_2"],"onFailure":["getSubscriptionParams"],"name":"checkChangeInSubscription","type":"filter","properties":{"body":"let configuration = steps.CBthirdPartyConfiguration.config_json;\nlet isListChanged = configuration.cloudElements.formula.mapping.isListChanged;\nlet customFiledsTobeCreated=Object.keys(steps.CreateCustomFieldsParam.customFields).length;\n\nif((steps.CBthirdPartyConfiguration.config_json.cloudElements.lastSyncTime !== undefined) && (!steps.ConfigParams.initialSync)){\n  \n  if(configuration.cloudElements.formula.sync.firstFullSync === false){\n      if((isListChanged === true || customFiledsTobeCreated !== 0 || configuration.batch.change_subscription === null)){\n       done(true);\n      }else{\n       done(false);\n      }\n  }else{\n    done(true);\n  }\n}\n\ndone(true);"}},{"id":260499,"onSuccess":["isContactDeleted"],"onFailure":["UpdateTPEnityMapping"],"name":"checkEmailExist","type":"filter","properties":{"body":"done(steps.UpdateConfigParams.hasEmail);"}},{"id":260500,"onSuccess":["CBList"],"onFailure":["GetErrorParams"],"name":"CheckErrorRecords","type":"filter","properties":{"body":"let contactList = steps.CustomerChangeList.list !== undefined ? steps.CustomerChangeList.list : [];\nlet configuration = steps.CBthirdPartyConfiguration.config_json;\nlet isListChanged = configuration.cloudElements.formula.mapping.isListChanged;\nlet customFiledsTobeCreated = Object.keys(steps.CreateCustomFieldsParam.customFields).length;\n\n\nif (steps.ConfigParams.initialSync === true || steps.ChargebeeGetTpError.data.list.length === 0 || configuration.cloudElements.formula.sync.firstFullSync === true || isListChanged === true || customFiledsTobeCreated !== 0) {\n    done(true);\n}\nelse if (contactList.length >= configuration.batch.batch_size) {\n    done(true);\n} else {\n    done(false);\n}"}},{"id":260501,"onSuccess":["CustomFieldParamsForErrorRecords"],"onFailure":["CBList"],"name":"CheckOffset","type":"filter","properties":{"body":"done(steps.GetFailedCustomer.response.body.next_offset !== undefined && steps.CustomFieldParamsForErrorRecords.params.query.offset !== steps.GetFailedCustomer.response.body.next_offset);"}},{"id":260502,"onSuccess":["TransformCustomerIds"],"onFailure":["GetErrorParams"],"name":"CheckOffsetValue","type":"filter","properties":{"body":"let contactList = steps.CustomerChangeList.list !== undefined ? steps.CustomerChangeList.list.length : 0;\nlet ids = steps.FailedToSync.customerIds.length || 0;\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\n\nif(steps.ChargebeeGetError.data.next_offset === undefined || configuration.batch.batch_size <= (contactList + ids)){\n  done(true)\n}\ndone(false);"}},{"id":260506,"onSuccess":["SyncContact"],"onFailure":["loopOverCustomers"],"name":"compareSubscripion-Status","type":"filter","properties":{"body":"let fieldValues = steps.getTheSubscriptionStatus.response.body.fieldValues;\nlet subscriptionFieldId = steps.ListOfCustomFields.response.body.Cb_subscriptionID;\nlet subscriptionStatusId = steps.ListOfCustomFields.response.body.Cb_subscriptionStatus;\nlet subscriptionCreatedOnId = steps.ListOfCustomFields.response.body.Cb_subscriptionCreatedOn;\nlet syncedSubscripionStatus, nonSyncedSubscripionStatus, syncedSubsipionCreatedOn,nonSyncedSubscriptionCreatedOn,syncedSubscriptionId,nonSyncedSubscriptionId;\n \n\nlet priority = {\n   \"cancelled\": 1,\n   \"paused\": 2,\n   \"future\": 3,\n   \"in_trial\": 4,\n   \"non_renewing\": 5,\n   \"active\": 6\n };\n\nif(fieldValues !== undefined){\n  for(var i = 0 ; i < fieldValues.length ; ++i){\n    if(fieldValues[i].field === subscriptionStatusId){\n      syncedSubscripionStatus = fieldValues[i].value;\n    }\n    if(fieldValues[i].field === subscriptionCreatedOnId){\n      syncedSubsipionCreatedOn = fieldValues[i].value;\n    }\n     if(fieldValues[i].field === subscriptionFieldId){\n      syncedSubscriptionId = fieldValues[i].value;\n    }\n  }\n}else{\n  done(true);\n}\n\n\nif(steps.SetSubscription.data.subscription !== undefined){\n  nonSyncedSubscripionStatus = steps.SetSubscription.data.subscription.status;\n  nonSyncedSubscriptionCreatedOn = steps.SetSubscription.data.subscription.created_at;\n  nonSyncedSubscriptionCreatedOn = unixTime(nonSyncedSubscriptionCreatedOn);\n  nonSyncedSubscriptionId = steps.SetSubscription.data.subscription.id;\n  \n  if(nonSyncedSubscriptionId === syncedSubscriptionId){\n      \n  done(true);\n  }else if(priority[syncedSubscripionStatus] < priority[nonSyncedSubscripionStatus]){\n     \n    done(true);\n  }else if(priority[syncedSubscripionStatus] > priority[nonSyncedSubscripionStatus]){\n    done(false);\n  }\n  else if(priority['syncedSubscripionStatus'] === priority['nonSyncedSubscripionStatus']){\n\n    if(new Date(syncedSubsipionCreatedOn) > new Date(nonSyncedSubscriptionCreatedOn)){\n    \n      done(false);\n    }else{\n     \n      done(true);\n    }\n  }else{\n     \n    done(true);\n  }\n}else{\n  done(false);\n}\n\n//unixTimestamp to date time format\nfunction unixTime(unixtime) {\n\n    var u = new Date(unixtime*1000);\n\n      return u.getUTCFullYear() +\n        '-' +  ('0' + ( Number(u.getUTCMonth()) + 1))+\n        '-' + ('0' + u.getUTCDate()).slice(-2) + \n        ' ' + ('0' + u.getUTCHours()).slice(-2) +\n        ':' + ('0' + u.getUTCMinutes()).slice(-2) +\n        ':' + ('0' + u.getUTCSeconds()).slice(-2) ;\n    }"}},{"id":260507,"onSuccess":["ChargebeeGetTpIntegConf"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let list;\nlet deleteops;\nlet syncGift;\nlet initialSync;\nlet oldList;\nlet apiKey;\nlet siteName;\nlet type;\nlet siteDomain ;\n\nif(trigger.args.request === undefined){\n  deleteops = trigger.args['deleteops'];\n  list = trigger.args['list'];\n  syncGift = trigger.args['syncGift'];\n  initialSync = trigger.args['initialSync'];\n  autoSync = trigger.args['autoSync'];\n   \n  apiKey = trigger.args['apiKey'];\n  siteName = trigger.args['siteName'];\n  type = trigger.args['type'];\n  siteDomain = trigger.args['siteDomain'];\n}\nelse\n{\n  list = trigger.args.request.query['list'];\n  deleteops = trigger.args.request.query['deleteops'];\n  syncGift = trigger.args.request.query['syncGift'];\n  initialSync = trigger.args.request.query['initialSync'];\n  autoSync = trigger.args.request.query['autoSync'];\n    \n  apiKey = trigger.args.request.query['apiKey'];\n  siteName = trigger.args.request.query['siteName'];\n  type = trigger.args.request.query['type'];\n  siteDomain = trigger.args.request.query['siteDomain'];\n}\n\nlet password = \"\";\n\nlet configuration ={\n  list:list,\n  deleteops:deleteops,\n  syncGift:syncGift,\n  initialSync:initialSync,\n  syncStart : Math.round((new Date().getTime())/1000),\n  temp:null\n};\n\n\nconfiguration.triggerParams = trigger.args;\n\n\nconfiguration.retrieveLatestSyncConfig = {\n  // url:\"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_sync_details/retrieve_latest_sync\",\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_sync_details/tpmeta?integration_name=activecampaign\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password),\n    api_key: apiKey\n  },\n  query:{\n    'third_party_configuration[integration_name]': type\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain:siteDomain,\n  type: type\n};\n\nconfiguration.getTpConfigParams = {\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain:siteDomain,\n  type: type,\n  autoSync:autoSync,\n  // url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_configurations/tpmeta\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password),\n    api_key: apiKey\n  },\n  query:{\n    integration_name: type\n  }\n};\n\nconfiguration.updateTpEntityParams = {\n      url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n      headers:{\n        Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n      },\n      apiKey: apiKey,\n      siteName: siteName,\n      siteDomain: siteDomain,\n      type: type\n};\n\n\nconfiguration.delay = {\n  url : \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay?delay=5000\",\n  headers: {\n    \"api_key\":apiKey\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\n\nconfiguration.limitQuery={\n    limit:500\n  };\n  \ndone(configuration);\n"}},{"id":261387,"onSuccess":["ChargebeePostUpdateTpConfig"],"onFailure":[],"name":"configUpdateParams","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet configuration = steps.ChargebeeGetTpIntegConf.data.config_json;\n\nconfiguration.batch = { \"batch_size\": 100};\n\nlet tpConfigUpdateParams = {\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n    integration_name: type,\n    site_name: siteName,\n    api_key: apiKey,\n    config_json: configuration\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});"}},{"id":269036,"onSuccess":["getContactToDeleteParams"],"onFailure":["loopOverCustomers"],"name":"confirmDelete","type":"filter","properties":{"body":"done(false); //Keeping this Remove Customer Functionality On Hold. Remove this JS Filter if not required."}},{"id":267260,"onSuccess":["gotContactData"],"onFailure":["loopOverCustomers"],"name":"contactExistInActiveCampaign","type":"filter","properties":{"body":"if(steps.getContact.response.code === 404){\n  done(false);\n}\n\ndone(true);"}},{"id":260508,"onSuccess":["UpdateActiveCampaignInput"],"onFailure":[],"name":"ContactListBody","type":"script","properties":{"body":"let list = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.list;\n\nlet newList = {\n    contactList: {\n        list: parseInt(list),\n        contact: parseInt(steps.SyncContact.response.body.contact.id),\n        status: 1\n    }\n};\n\nlet body = {};\n\nbody.newList = newList;\ndone(body);"}},{"id":260509,"onSuccess":["deleteContactParams"],"onFailure":["loopOverCustomers"],"name":"contactToDeleteFound","type":"filter","properties":{"body":"// let id;\n// let thirdPartId;\n\n// if(steps.getContactToDelete.response.body.meta.total !== \"0\" && steps.ChargebeeGetTpDetails.data.third_party_entity_mapping !==undefined){\n//   thirdPartId = steps.ChargebeeGetTpDetails.data.third_party_entity_mapping.third_party_entity_id;\n//   id = steps.getContactToDelete.response.body.contacts[0].id;\n\n//   if(thirdPartId === id ){\n//     done(true);\n//   }\n// }\n\n// done(false);\n\n\nif(steps.getContactToDelete.response.code === 200){\n  if(steps.getContactToDelete.response.body.contact !== undefined){\n    done(true);\n  }\n}else{\n  done(false);\n}"}},{"id":260510,"onSuccess":["CreateRelationshipParams"],"onFailure":["Error"],"name":"CreateCustomField","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","body":"${steps.LoopOverCustomFields.entry}","method":"POST","api":"/fields"}},{"id":260511,"onSuccess":["isRelationshipMissing"],"onFailure":[],"name":"CreateCustomFieldsParam","type":"script","properties":{"body":"let configuration = steps.CBthirdPartyConfiguration.config_json;\nlet customFields = [];\nlet customFieldMap = (configuration.cloudElements.customFieldMap !== undefined) ? configuration.cloudElements.customFieldMap : {};\n\nif (customFieldMap.Cb_chargebeeCustomerStatus === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_chargebeeCustomerStatus\",\n            \"descript\": \"Chargebee Customer Status  (Default is Active, if deleted or cancelled, becomes Deleted)\",\n            \"defval\": \"Active\"\n        }\n    });\n\n}\n\nif (customFieldMap.Cb_orgName === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_orgName\",\n            \"descript\": \"Name of Organization\",\n        }\n    });\n\n}\n\nif (customFieldMap.Cb_subscriptionID === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionID\",\n            \"descript\": \"Subscription ID\"\n        }\n    });\n}\n\nif (customFieldMap.Cb_subscriptionPlanName === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionPlanName\",\n            \"descript\": \"Subscription Plan Name\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionPlanValue === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionPlanValue\",\n            \"descript\": \"Subscription Plan Value\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionStatus === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionStatus\",\n            \"descript\": \"Subscription Status of the Customer\",\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionTrialStartDate === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionTrialStartDate\",\n            \"descript\": \"Subscription Trial Start Date\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionTrialEndDate === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionTrialEndDate\",\n            \"descript\": \"Subscription Trial End Date\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionNextBillingDate === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionNextBillingDate\",\n            \"descript\": \"Subscription Next Billing Date\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionCreatedOn === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionCreatedOn\",\n            \"descript\": \"Subscription Created On\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionStartsOn === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionStartsOn\",\n            \"descript\": \"Subscription Starts On\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionCancelledOn === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionCancelledOn\",\n            \"descript\": \"Subscription Cancelled On\",\n            \"defval\": \"\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_currency === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_currency\",\n            \"descript\": \"Currency\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionCancellationReason === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionCancellationReason\",\n            \"descript\": \"Subscription Cancellation Reason\"\n        }\n    });\n\n}\nif (customFieldMap.Cb_subscriptionMRR === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionMRR\",\n            \"descript\": \"Subscription MRR\"\n        }\n    });\n\n}\n\nlet subscriptionFields;\nlet customerFields;\nif(steps.getSelectedCustomFieldsFromUi.check !==undefined){\n   subscriptionFields=steps.getSelectedCustomFieldsFromUi.check.subscriptionFields;\n   customerFields=steps.getSelectedCustomFieldsFromUi.check.customerFields;\n}\n\n//CB fields\nlet chargebeeFields=JSON.parse(steps.ChargebeeGetCbFields.data.response);\nlet CbCustomerfieldsKeys=Object.keys(chargebeeFields.customer_custom_fields);\nlet CbSubscriptionfieldsKeys=Object.keys(chargebeeFields.subscription_custom_fields);\n\nif (subscriptionFields!==undefined){\n  \n\nif (subscriptionFields.search.auto_collection!==undefined && customFieldMap.Cb_subscriptionAutoCollection === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_subscriptionAutoCollection\",\n            \"descript\": \"AutoCollection\"\n        }\n    });}\n    \n    if(subscriptionFields.search.billing_period!==undefined && customFieldMap.Cb_billingPeriod === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingPeriod\",\n            \"descript\": \"BillingPeriod\"\n        }\n    });}\n    \n    if (subscriptionFields.search.billing_period_unit!==undefined && customFieldMap.Cb_billingPeriodUnit === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingPeriodUnit\",\n            \"descript\": \"billing_period_unit\"\n        }\n    });}\n    \n    if (subscriptionFields.search.current_term_end!==undefined && customFieldMap.Cb_currentTermEnd === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_currentTermEnd\",\n            \"descript\": \"current_term_end\"\n        }\n    });}\n    \n    if (subscriptionFields.search.current_term_start!==undefined && customFieldMap.Cb_currentTermStart === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_currentTermStart\",\n            \"descript\": \"current_term_start\"\n        }\n    });}\n    \n    if (subscriptionFields.search.customer_id!==undefined && customFieldMap.Cb_customerId === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_customerId\",\n            \"descript\": \"customer_id\"\n        }\n    });}\n    \n   if (subscriptionFields.search.plan_free_quantity!==undefined && customFieldMap.Cb_planFreeQuantity === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_planFreeQuantity\",\n            \"descript\": \"plan_free_quantity\"\n        }\n    });}\n    \n  if(subscriptionFields.search.has_scheduled_changes!==undefined && customFieldMap.Cb_hasScheduledChanges === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_hasScheduledChanges\",\n            \"descript\": \"has_scheduled_changes\"\n        }\n    });}\n    \n    if (subscriptionFields.search.due_invoices_count!==undefined && customFieldMap.Cb_dueInvoicesCount === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_dueInvoicesCount\",\n            \"descript\": \"due_invoices_count\"\n        }\n    });}\n    \n    if (subscriptionFields.search.plan_quantity!==undefined && customFieldMap.Cb_planQuantity === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_planQuantity\",\n            \"descript\": \"plan_quantity\"\n        }\n    });}\n    \n    if (subscriptionFields.search.resource_version!==undefined && customFieldMap.Cb_ResourceVersion === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_ResourceVersion\",\n            \"descript\": \"resource_version\"\n        }\n    });}\n    \n    if (subscriptionFields.search.plan_unit_price!==undefined && customFieldMap.Cb_planUnitPrice === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_planUnitPrice\",\n            \"descript\": \"plan_unit_price\"\n        }\n    });}\n    \n    \n    if (subscriptionFields.search.updated_on!==undefined && customFieldMap.Cb_updatedOn === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_updatedOn\",\n            \"descript\": \"updated_on\"\n        }\n    });}\n    \n    if(subscriptionFields.search.deleted!==undefined && customFieldMap.Cb_SubscriptionDeleted === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_SubscriptionDeleted\",\n            \"descript\": \"deleted\"\n        }\n    });}\n    \n    \n    if (subscriptionFields.search.object!==undefined && customFieldMap.Cb_object === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_object\",\n            \"descript\": \"object\"\n        }\n    });}\n    \n    if (subscriptionFields.search.total_dues!==undefined && customFieldMap.Cb_totalDues === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_totalDues\",\n            \"descript\": \"total_dues\"\n        }\n    });}\n    \n         if (subscriptionFields.search.due_since!==undefined && customFieldMap.Cb_dueSince === undefined)  {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_dueSince\",\n            \"descript\": \"due_since\"\n        }\n    });}\n    \n    for(var i=0;i<CbSubscriptionfieldsKeys.length;++i){\n      if(subscriptionFields.search[CbSubscriptionfieldsKeys[i]]!==undefined && customFieldMap[\"Cb_\"+chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i]]] === undefined){\n          customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\":\"Cb_\"+chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i]],\n            \"descript\": \"No description\"\n        }\n    })\n        \n      }\n    }\n    \n    \n}\n    \n    //customer fields\n    \n    if(customerFields!==undefined){\n    \n    if (customerFields.search2.allow_direct_debit!==undefined && customFieldMap.Cb_allowDirectDebit === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_allowDirectDebit\",\n            \"descript\": \"allow_direct_debit\"\n        }\n    });}\n    \n     if (customerFields.search2.auto_collection!==undefined && customFieldMap.Cb_autoCollection === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_autoCollection\",\n            \"descript\": \"auto_collection\"\n        }\n    });}\n    \n     if (customerFields.search2.card_status!==undefined && customFieldMap.Cb_cardStatus === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_cardStatus\",\n            \"descript\": \"card_status\"\n        }\n    });}\n    \n     if (customerFields.search2.created_on!==undefined && customFieldMap.Cb_createdOn === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_createdOn\",\n            \"descript\": \"created_on\"\n        }\n    });}\n    \n     if (customerFields.search2.email!==undefined && customFieldMap.Cb_email === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_email\",\n            \"descript\": \"email\"\n        }\n    });}\n    \n     if (customerFields.search2.excess_payments!==undefined && customFieldMap.Cb_excessPayments === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_excessPayments\",\n            \"descript\": \"excess_payments\"\n        }\n    });}\n    \n     if (customerFields.search2.id!==undefined && customFieldMap.Cb_id === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_id\",\n            \"descript\": \"id\"\n        }\n    });}\n    \n       if (customerFields.search2.net_term_days!==undefined && customFieldMap.Cb_netTermDays === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_netTermDays\",\n            \"descript\": \"net_term_days\"\n        }\n    });}\n    \n     if (customerFields.search2.object!==undefined && customFieldMap.Cb_customerObject === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_customerObject\",\n            \"descript\": \"object\"\n        }\n    });}\n    \n     if (customerFields.search2.pii_cleared!==undefined && customFieldMap.Cb_piiCleared === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_piiCleared\",\n            \"descript\": \"pii_cleared\"\n        }\n    });}\n    \n     if (customerFields.search2.preferred_currency_code!==undefined && customFieldMap.Cb_preferredCurrencyCode === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_preferredCurrencyCode\",\n            \"descript\": \"preferred_currency_code\"\n        }\n    });}\n    \n     if (customerFields.search2.promotional_credits!==undefined && customFieldMap.Cb_promotionalCredits === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_promotionalCredits\",\n            \"descript\": \"promotional_credits\"\n        }\n    });}\n    \n     if (customerFields.search2.refundable_credits!==undefined && customFieldMap.Cb_refundableCredits === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_refundableCredits\",\n            \"descript\": \"refundable_credits\"\n        }\n    });}\n    \n       if (customerFields.search2.updated_at !==undefined && customFieldMap.Cb_CustomerUpdatedOn === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_CustomerUpdatedOn\",\n            \"descript\": \"Customer Updated On\"\n        }\n    });}\n    \n    \n    \n    if (customerFields.search2.taxability!==undefined && customFieldMap.Cb_taxability === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_taxability\",\n            \"descript\": \"taxability\"\n        }\n    });}\n    \n    if (customerFields.search2.unbilled_charges!==undefined && customFieldMap.Cb_unbilledCharges === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_unbilledCharges\",\n            \"descript\": \"unbilled_charges\"\n        }\n    });}\n   \n    if (customerFields.search2.billing_address_city!==undefined && customFieldMap.Cb_billingAddressCity === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressCity\",\n            \"descript\": \"billing_address_city\"\n        }\n    });}\n    if (customerFields.search2.billing_address_country!==undefined && customFieldMap.Cb_billingAddressCountry === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressCountry\",\n            \"descript\": \"billing_address_country\"\n        }\n    });}\n    if (customerFields.search2.billing_address_first_name!==undefined && customFieldMap.Cb_billingAddressFirstName === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressFirstName\",\n            \"descript\": \"billing_address_first_name\"\n        }\n    });}\n    if (customerFields.search2.billing_address_last_name!==undefined && customFieldMap.Cb_billingAddressLastName === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressLastName\",\n            \"descript\": \"billingAddressLastName_last_name\"\n        }\n    });}\n    \n    \n    \n      if (customerFields.search2.billing_address_object!==undefined && customFieldMap.Cb_billingAddressObject === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressObject\",\n            \"descript\": \"billing_address_object\"\n        }\n    });}\n    if (customerFields.search2.billing_address_state!==undefined && customFieldMap.Cb_billingAddressState === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressState\",\n            \"descript\": \"billing_address_state\"\n        }\n    });}\n    \n        if (customerFields.search2.billing_address_state_code!==undefined && customFieldMap.Cb_billingAddressStateCode === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressStateCode\",\n            \"descript\": \"billing_address_state_code\"\n        }\n    });}\n    if (customerFields.search2.billing_address_validation_status!==undefined && customFieldMap.Cb_billingAddressValidationStatus === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressValidationStatus\",\n            \"descript\": \"billing_address_validation_status\"\n        }\n    });}\n      if (customerFields.search2.billing_address_zip!==undefined && customFieldMap.Cb_billingAddressZip === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_billingAddressZip\",\n            \"descript\": \"billing_address_zip\"\n        }\n    });}\n\n\n      if (customerFields.search2.locale!==undefined && customFieldMap.Cb_locale === undefined) {\n    customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\": \"Cb_locale\",\n            \"descript\": \"locale\"\n        }\n    });}\n    \n    \n    \n  for(var i=0;i<CbCustomerfieldsKeys.length;++i){\n      if(customerFields.search2[CbCustomerfieldsKeys[i]]!==undefined && customFieldMap[\"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i]]] === undefined){\n          customFields.push({\n        \"field\": {\n            \"type\": \"text\",\n            \"title\":\"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i]],\n            \"descript\": \"No description\"\n        }\n    })\n        \n      }\n    }\n   \n    \n    }\n    \n    //Field which failed to create relationship in activecampaign\n    if(configuration.cloudElements.formula.sync.failedRelationships !== undefined){\n    \n    customFields.push({\n         \"field\": {\n            \"type\": \"text\",\n            \"title\":configuration.cloudElements.formula.sync.failedRelationships.title,\n            \"descript\": configuration.cloudElements.formula.sync.failedRelationships.title.descript,\n            \"defval\": configuration.cloudElements.formula.sync.failedRelationships.title.defval\n        }\n    });\n    }\n\n    \ndone({customFields:customFields,\n  subscriptionFields:subscriptionFields,\n  customerFields:customerFields\n});"}},{"id":260513,"onSuccess":["ChargebeePostCreateFailedRelationship"],"onFailure":[],"name":"createFailedRelationshipParams","type":"script","properties":{"body":"let fieldId = steps.CBthirdPartyConfiguration.config_json.cloudElements.formula.sync.failedRelationships.fieldId;\n\nlet account = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.accountName;\nlet apikey = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.api_token;\n\nlet cbapiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type=steps.ConfigParams.getTpConfigParams.type;\n\nlet input = {\n  apiKey: cbapiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n  url: \"https://\"+ account +\".api-us1.com/api/3/fieldRels\",\n  body: {\n\t\"fieldRel\": {\n\t\t\"field\": fieldId,\n\t\t\"relid\": \"0\"\n    }},\n    headers:{\n      \"Api-Token\": apikey\n    }\n  };\n\ndone({\n  payload: input,\n  fieldId: fieldId\n});\n\n\n"}},{"id":260514,"onSuccess":["LoopOverCustomFields"],"onFailure":["UpdateFailedRelationshipParams"],"name":"CreateRelationship","type":"httpRequest","properties":{"headers":"${steps.CreateRelationshipParams.headers}","body":"${steps.CreateRelationshipParams.body}","url":"${steps.CreateRelationshipParams.url}","method":"POST"}},{"id":260515,"onSuccess":["CreateRelationship"],"onFailure":[],"name":"CreateRelationshipParams","type":"script","properties":{"body":"let fieldId = steps.CreateCustomField.response.body.field.id;\n\nlet title = steps.CreateCustomField.response.body.field.title;\n\nlet account = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.accountName;\nlet apikey = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.api_token;\n\nlet fieldMap = steps.CBthirdPartyConfiguration.config_json.cloudElements.customFieldMap;\n\nlet cbapiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type=steps.ConfigParams.getTpConfigParams.type;\n\nif(steps.CreateCustomField.response.code === 200){\n  fieldMap[title] = fieldId;\n}\n\nsteps.CBthirdPartyConfiguration.config_json.cloudElements.customFieldMap = fieldMap;\n\nlet input = {\n  apiKey: cbapiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n  url: \"https://\"+ account +\".api-us1.com/api/3/fieldRels\",\n  body: {\n\t\"fieldRel\": {\n\t\t\"field\": fieldId,\n\t\t\"relid\": \"0\"\n    }},\n  headers:{\n    \"Api-Token\": apikey\n  }\n};\n\ndone(input);\n\n\n\n\n"}},{"id":260517,"onSuccess":["IsGetTpError"],"onFailure":[],"name":"CustomerChangeList","type":"script","properties":{"body":"if(steps.ConfigParams.initialSync){\n  let contactList = steps.getCustomers.response.body.list;\n  done({\n    list: contactList\n  });\n}\n\nlet getSubscriptionList = [];\nlet getCustomerList = steps.customerList.contactList || [];\nlet getDeletedList = [];\n\nif(steps.deletedCustomersList !== undefined){\n  getCustomerList = steps.deletedCustomersList.deletedList;\n}\n\ndone({\n  list: getCustomerList\n});\n\n"}},{"id":260560,"onSuccess":["gotSubscriptionData"],"onFailure":[],"name":"customerData","type":"script","properties":{"body":"// let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\n// let siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\n// let siteName = steps.ConfigParams.getTpConfigParams.siteName;\n// let type = steps.ConfigParams.getTpConfigParams.type;\n// let password = \"\";\n\n\n// let input = {\n//   url : \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/retrieve\",\n//   headers:{\n//         Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n//       },\n//   query:{\n//       integration_name :  type,\n//       entity_id : entity_id,\n//       entity_type : \"customer\"\n//   },\n//   apiKey: apiKey,\n//   siteName: siteName,\n//   siteDomain: siteDomain,\n//   type: type\n// };\n\n// done(input);\n\nlet entity_id = steps.loopOverCustomers.entry.customer.id;\nlet cbTpDetails = null;\nlet cbData = (steps.ChargebeeGetBulkData.data[entity_id] !== undefined) ? steps.ChargebeeGetBulkData.data[entity_id] : null;\n\ndone({\n  data: cbData\n});\n\n"}},{"id":260518,"onSuccess":["ChargebeeDelayApi_3"],"onFailure":[],"name":"customerList","type":"script","properties":{"body":"let contactList = [];\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\n\nif(steps.ConfigParams.initialSync){\n  contactList = steps.getCustomers.response.body.list;\n  done({\n    contactList: contactList\n  });\n}\n\nif(steps.customerList !== undefined){\n  contactList = steps.customerList.contactList;\n}else{\n  contactList = (steps.subscriptionList !== undefined ) ? steps.subscriptionList.customerList.list : [];\n}\n\nif((steps.getCustomers !== undefined && steps.getCustomers.response.body.list !== undefined) && (steps.getCustomers.response.body.list.length > 0) && configuration.batch.get_customer !== null){\n  if(contactList.length === 0){\n    contactList = steps.getCustomers.response.body.list;\n  }else if(contactList.length < configuration.batch.batch_size){\n    contactList = contactList.concat(steps.getCustomers.response.body.list);\n  }\n  else{\n    done({\n        contactList: contactList\n     });\n  }\n}\n\ndone({\n  count: contactList.length,\n  contactList: contactList\n});\n"}},{"id":260519,"onSuccess":["ChargebeeGetBulkData"],"onFailure":["hasBatchingFinished"],"name":"CustomersFound","type":"filter","properties":{"body":"if(steps.CBList.list.length === 0){\n  done(false);\n}\n\ndone(true);"}},{"id":260520,"onSuccess":["updateFields"],"onFailure":[],"name":"CustomFieldParams","type":"script","properties":{"body":"let list = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.list || null;\nlet file_content = steps.ActiveCampaignInput.fieldValues;\nlet email = steps.loopOverCustomers.entry.customer.email;\nlet accountName = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.accountName;\nlet activeCampaignApiKey = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.api_token;\n\nlet i, str=\"\";\n\n for(i = 0; i < file_content.length - 1; i++){\n   str = str + \"field[\" + file_content[i].fieldValue.field + \",0]=\" + file_content[i].fieldValue.value + \"&\";\n }\n str = str + \"field[\" + file_content[i].fieldValue.field + \",0]=\" + file_content[i].fieldValue.value;\n\nlet input = {\n  url: \"https://\" + accountName + \".api-us1.com/admin/api.php?api_action=contact_sync&api_key=\" + activeCampaignApiKey,\n  headers : {\n    \"Content-Type\" : \"application/x-www-form-urlencoded\"\n  },\n  body : \"email=\"+encodeURIComponent(email)+\"&p[\"+list+\"]=\"+list+\"&status[1]=1&\"+ str\n};\n\ndone(input);"}},{"id":260521,"onSuccess":["GetFailedCustomer"],"onFailure":[],"name":"CustomFieldParamsForErrorRecords","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\n\n\nlet params = {\n  url: \"/customers\",\n  query: {\n \t   limit: 10,\n \t   sort_by_asc : \"updated_at\",\n \t   include_deleted: true,\n \t   id_in: steps.TransformCustomerIds.ids\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\nif(steps.GetFailedCustomer !== undefined){\n  params.query.offset = steps.GetFailedCustomer.response.body.next_offset;\n}\n\ndone({\n  params: params\n});\n"}},{"id":260522,"onSuccess":["loopOverCustomers"],"onFailure":["UpdateSyncFailedParams"],"name":"deleteContactActiveCampaign","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","method":"DELETE","api":"${steps.deleteContactParams.params.url}"}},{"id":260523,"onSuccess":["deleteContactActiveCampaign"],"onFailure":[],"name":"deleteContactParams","type":"script","properties":{"body":"let contact_id = steps.getContactToDelete.response.body.contact.id;\n// let contact_id = steps.getContactToDelete.response.body.contacts[0]['id'] || null;\n\nlet params = {\n  url: \"/contacts/\" + contact_id\n};\n\n\ndone({\n  params: params\n});"}},{"id":260524,"onSuccess":["hasNextOffsetForDeletedCustomer"],"onFailure":[],"name":"deletedCustomersList","type":"script","properties":{"body":"let deletedCustomersList = [];\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\n\nif(steps.deletedCustomersList !== undefined){\n  deletedCustomersList = steps.deletedCustomersList.deletedList;\n}else{\n  deletedCustomersList = steps.customerList.contactList || [];\n}\n\n\nif((steps.getCustomersDeleted.response.body.list !== undefined) && (steps.getCustomersDeleted.response.body.list.length > 0)){\n  \n  let data = steps.getCustomersDeleted.response.body.list;\n  let filteredList = {\n    list:[]\n  };\n  \n  for(var i=0; i < steps.getCustomersDeleted.response.body.list.length; i++){\n    if(data[i]['customer']['deleted'] === true){\n      filteredList.list.push(data[i]); \n    }\n  }\n  \n\n  if((deletedCustomersList.length === 0) && (filteredList.list.length === 0)){\n    done({\n      deletedList : []\n    });\n  }\n  \n  if(deletedCustomersList.length === 0){\n    deletedCustomersList = filteredList.list;\n   \n  }else if (deletedCustomersList.length < configuration.batch.batch_size){\n   \n    deletedCustomersList = deletedCustomersList.concat(filteredList.list);\n  }else{\n   \n    done({\n      deletedList: deletedCustomersList\n   });\n  }\n}\n\ndone({\n  deletedList: deletedCustomersList\n});\n"}},{"id":260525,"onSuccess":[],"onFailure":[],"name":"Error","type":"script","properties":{"body":"let statusCode=steps.getListFromActiveCampaign.response.code;\n let error;\nif(statusCode===404){\n error = {\n  \"cardResult\" : {\n    text:\"Looks like ActiveCampaign list has been deleted. Resolve it and Sync Again\",\n    statusCode:statusCode\n  }\n  \n}\n}\n\nif(statusCode===403){\n error = {\n  \"cardResult\" : {\n    text:\"Looks like ActiveCampaign key has been expired\",\n    statusCode:statusCode\n  }\n  \n}\n}\n\n\nif(statusCode!==404 && statusCode !== 403 && steps.ConfigParams.triggerParams.initialSync === false){\n  throw \"Sync Formula Failed\";\n}\n\ndone(error);"}},{"id":260526,"onSuccess":["CheckOffset"],"onFailure":[],"name":"ErrorList","type":"script","properties":{"body":"let contactList = [];\n\nif(steps.ErrorList !== undefined){\n  contactList = steps.ErrorList.contactList;\n}\n\nif((steps.GetFailedCustomer.response.body.list !== undefined) && (steps.GetFailedCustomer.response.body.list.length > 0)){\n  if(contactList.length === 0){\n    contactList = steps.GetFailedCustomer.response.body.list;\n  }else{\n    contactList = contactList.concat(steps.GetFailedCustomer.response.body.list);\n  }\n}\n\ndone({\n  contactList: contactList\n});\n"}},{"id":261391,"onSuccess":[],"onFailure":[],"name":"Failed","type":"script","properties":{"body":"throw \"Error\";"}},{"id":260527,"onSuccess":["CheckOffsetValue"],"onFailure":[],"name":"FailedToSync","type":"script","properties":{"body":"let details = steps.ChargebeeGetError.data.list;\nlet customerIds = [];\nif(steps.FailedToSync !== undefined){\n  customerIds = steps.FailedToSync.customerIds;\n}\n\nif(details.length !== 0){\n  \n    details.forEach(item => {\n    customerIds.push(item.third_party_entity_mapping.entity_id);\n  });\n  \n}\n\ndone({customerIds : customerIds});\n\n"}},{"id":260528,"onSuccess":["isStopExecution"],"onFailure":[],"name":"fetchActiveCampaignInstance","type":"request","properties":{"method":"GET","api":"${steps.fetchActiveCampaignInstanceDetails_params.payload.url}"}},{"id":260529,"onSuccess":["fetchActiveCampaignInstance"],"onFailure":[],"name":"fetchActiveCampaignInstanceDetails_params","type":"script","properties":{"body":"let instanceId = steps.CBthirdPartyConfiguration.config_json.cloudElements.thirdParty.instance || null;\n\nlet payload = {\n  url: \"/instances/\"+instanceId\n};\n\n\ndone({\n  payload: payload\n});"}},{"id":260531,"onSuccess":["GetListOfCustomFields"],"onFailure":[],"name":"GetActiveCamapaignConfiguration","type":"request","properties":{"method":"GET","api":"/instances/${steps.ActiveCamapaignConfiguration.instanceId}/configuration"}},{"id":260535,"onSuccess":["contactExistInActiveCampaign"],"onFailure":["contactExistInActiveCampaign"],"name":"getContact","type":"elementRequest","properties":{"acceptableStatusCodes":"200,404,422,500","elementInstanceId":"${config.activecampaign}","query":"${steps.getQueryParam.query}","method":"GET","api":"/contactsById"}},{"id":260536,"onSuccess":["isContactPresentInActivecampaign"],"onFailure":["UpdateSyncFailedParams"],"name":"getContactFromActivecampaign","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","query":"${steps.isContactAlreadySyncedParam.query}","method":"GET","api":"/contacts/email"}},{"id":260537,"onSuccess":["MarkAsInactive"],"onFailure":[],"name":"getContactParam","type":"script","properties":{"body":"\n// let body={\n//   \"fieldValue\": {\n//     \"contact\": steps.getContact.response.body.contacts[0].id,\n//     \"field\": steps.ListOfCustomFields.response.body.Cb_chargebeeCustomerStatus,\n//     \"value\": \"Deleted\"\n//   }\n// };\n// done(body);\n\nlet body={\n  \"fieldValue\": {\n    \"contact\": steps.getContact.response.body.contact.id,\n    \"field\": steps.ListOfCustomFields.response.body.Cb_chargebeeCustomerStatus,\n    \"value\": \"Deleted\"\n  }\n};\ndone(body);"}},{"id":260538,"onSuccess":["contactToDeleteFound"],"onFailure":["UpdateSyncFailedParams"],"name":"getContactToDelete","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","query":"${steps.getContactToDeleteParams.params.query}","method":"GET","api":"${steps.getContactToDeleteParams.params.url}"}},{"id":260539,"onSuccess":["getContactToDelete"],"onFailure":[],"name":"getContactToDeleteParams","type":"script","properties":{"body":"// let email = steps.loopOverCustomers.entry.customer.email;\n\n// let params = {\n//   url : \"/contacts/email\",\n//   query : {\n//     email: email\n//   }\n// };\n\n\nlet params = {\n  url : \"/contactsById\",\n  query:{\n    \"id\": steps.customerData.data.tpmapping.third_party_entity_id\n  }\n}\n\ndone({\n  params: params\n});\n"}},{"id":260540,"onSuccess":["customerList"],"onFailure":[],"name":"getCustomers","type":"elementRequest","properties":{"elementInstanceId":"${config.chargebee}","query":"${steps.getCustomersParam.params.query}","method":"GET","retryDelay":"200","retryStatusCodes":"429","retryAttempts":"5","api":"/customers","retry":"true"}},{"id":260541,"onSuccess":["deletedCustomersList"],"onFailure":[],"name":"getCustomersDeleted","type":"elementRequest","properties":{"elementInstanceId":"${config.chargebee}","query":"${steps.getDeletedCustomersParam.params.query}","method":"GET","api":"/customers"}},{"id":260542,"onSuccess":["getCustomers"],"onFailure":[],"name":"getCustomersParam","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type =  steps.ConfigParams.getTpConfigParams.type;\n\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\nlet isListChanged=configuration.cloudElements.formula.mapping.isListChanged;\nlet customFiledsTobeCreated=Object.keys(steps.CreateCustomFieldsParam.customFields).length;\nlet customFiledsTobeDeleted=0;\n\nlet params = {\n  url: \"/customers\",\n  query: {\n \t   limit: 100,\n \t   include_deleted: false,\n \t   sort_by_asc : \"updated_at\"\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n};\n\nif(steps.ConfigParams.initialSync === true){\n  params.query.limit = 10;\n}\n\nif((steps.CBthirdPartyConfiguration.config_json.cloudElements.lastSyncTime !== undefined) && (!steps.ConfigParams.initialSync)){\n  if(configuration.cloudElements.formula.sync.firstFullSync === false){\n  params.query.updated_at_after = steps.CBthirdPartyConfiguration.config_json.cloudElements.lastSyncTime;\n   if(isListChanged===true || customFiledsTobeCreated !== 0 || customFiledsTobeDeleted!==0){\n     delete params.query[\"updated_at_after\"];\n   }\n  \n  }else{\n     params.query.include_deleted = false;\n  }\n}else{\n  params.query.include_deleted = false;\n}\n\nif(steps.getCustomers !== undefined){\n  params.query.offset = steps.getCustomers.response.body.next_offset;\n}\nelse{\n   params.query.offset = configuration.batch.get_customer || undefined\n}\n\ndone({params:params});"}},{"id":260543,"onSuccess":["getCustomersDeleted"],"onFailure":[],"name":"getDeletedCustomersParam","type":"script","properties":{"body":"let configuration=steps.CBthirdPartyConfiguration.config_json;\n\nlet apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type =  steps.ConfigParams.getTpConfigParams.type;\n\n\nlet params = {\n  url: \"/customers\",\n  query: {\n \t   limit: 10,\n \t   include_deleted: true,\n \t   sort_by_asc : \"updated_at\",\n \t   updated_at_after: steps.CBthirdPartyConfiguration.config_json.cloudElements.lastSyncTime\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\nif(steps.setOffsetDeleted !== undefined){\n  params.query.offset = steps.setOffsetDeleted.offset;\n}else{\n  params.query.offset = configuration.batch.include_deleted;\n}\n\ndone({params:params});"}},{"id":260546,"onSuccess":["ChargebeeGetError"],"onFailure":[],"name":"GetErrorParams","type":"script","properties":{"body":"let configuration=steps.CBthirdPartyConfiguration.config_json;\nlet params = steps.GetTPErrorParams.params;\n\nif(steps.ChargebeeGetTpError !== undefined){\n  params.query.offset = steps.ChargebeeGetTpError.data.next_offset;\n}else{\n  params.query.offset = configuration.batch.get_error;\n}\n\ndone({params: params});"}},{"id":260548,"onSuccess":["ErrorList"],"onFailure":["Error"],"name":"GetFailedCustomer","type":"elementRequest","properties":{"elementInstanceId":"${config.chargebee}","query":"${steps.CustomFieldParamsForErrorRecords.params.query}","method":"GET","api":"/customers"}},{"id":260551,"onSuccess":["ActiveCamapaignConfiguration"],"onFailure":["noListFoundError"],"name":"getListFromActiveCampaign","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","method":"GET","api":"/lists/${steps.getListFromActiveCampaignParam.list}"}},{"id":260552,"onSuccess":["getListFromActiveCampaign"],"onFailure":[],"name":"getListFromActiveCampaignParam","type":"script","properties":{"body":"let listIdFromTrigger = steps.ConfigParams.list;\nlet listIdFromTpConfig = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.list;\nlet list;\nif(listIdFromTrigger === undefined){\n  list = listIdFromTpConfig;\n}else{\n  list = listIdFromTrigger;\n}\n\ndone({list: list});\n"}},{"id":260553,"onSuccess":["CbCustomFieldParams"],"onFailure":["Error"],"name":"GetListOfCustomFields","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","query":"${steps.ConfigParams.limitQuery}","method":"GET","api":"/fields"}},{"id":260544,"onSuccess":["getContact"],"onFailure":[],"name":"getQueryParam","type":"script","properties":{"body":"// let body={\n//   query:{\n//     \"email\":steps.loopOverCustomers.entry.customer.email\n//   }\n// };\n// done(body);\n\n\nlet body = {\n  query:{\n    \"id\": steps.customerData.data.tpmapping.third_party_entity_id\n  }\n}\ndone(body);"}},{"id":260554,"onSuccess":["getListFromActiveCampaignParam"],"onFailure":[],"name":"getSelectedCustomFieldsFromUi","type":"script","properties":{"body":"let check = {};\n\nlet subscriptionFields = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.modelbox_check1;\n\nlet customerFields = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.modelbox_check2;\n\nif (subscriptionFields !== \"\" && subscriptionFields !== undefined) {\n    subscriptionFields = JSON.parse(subscriptionFields);\n    subscriptionFields.search = JSON.parse(subscriptionFields.search);\n    check.subscriptionFields = subscriptionFields;\n}\n\nif (customerFields !== \"\" && customerFields !== undefined) {\n    customerFields = JSON.parse(customerFields);\n\n    customerFields.search2 = JSON.parse(customerFields.search2);\n\n    check.customerFields = customerFields;\n}\n\ndone({ check: check });"}},{"id":260555,"onSuccess":["subscriptionList"],"onFailure":[],"name":"getSubscription","type":"elementRequest","properties":{"elementInstanceId":"${config.chargebee}","query":"${steps.getSubscriptionParams.params.query}","method":"GET","api":"${steps.getSubscriptionParams.params.url}"}},{"id":260557,"onSuccess":["getSubscription"],"onFailure":[],"name":"getSubscriptionParams","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type =  steps.ConfigParams.getTpConfigParams.type;\n\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\nlet isListChanged=configuration.cloudElements.formula.mapping.isListChanged;\nlet customFiledsTobeCreated=Object.keys(steps.CreateCustomFieldsParam.customFields).length;\nlet customFiledsTobeDeleted=0;\n\nlet params = {\n  url: \"/subscriptions\",\n  query: {\n \t   limit: 100,\n \t   include_deleted: true,\n \t   sort_by_asc : \"updated_at\",\n \t   updated_at_after : steps.CBthirdPartyConfiguration.config_json.cloudElements.lastSyncTime,\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\nif(steps.setOffsetSubscription !== undefined){\n  params.query.offset = steps.setOffsetSubscription.offset;\n}\nelse{\n  params.query.offset = configuration.batch.change_subscription || undefined\n}\n\n\ndone({params:params});\n\n"}},{"id":260558,"onSuccess":["compareSubscripion-Status"],"onFailure":["UpdateSyncFailedParams"],"name":"getTheSubscriptionStatus","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","query":"${steps.getTheSubscriptionStatusParam.query}","method":"GET","api":"/contactsById"}},{"id":260559,"onSuccess":["getTheSubscriptionStatus"],"onFailure":[],"name":"getTheSubscriptionStatusParam","type":"script","properties":{"body":"let input = {\n  query:{\n  id: steps.getContactFromActivecampaign.response.body.contacts[0].id\n  }\n};\n\ndone(input);"}},{"id":260564,"onSuccess":["ChargebeeGetTpError"],"onFailure":[],"name":"GetTPErrorParams","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\n\nlet password = \"\";\nlet startTime;\nlet endTime;\nlet syncStaus = steps.ChargebeeGetLastSyncDetails.data;\n\nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/list_all\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: type,\n    \"status[is]\": \"update_failed\",\n    \"modified_at[after]\": syncStaus.context.syncData.previousSyncStart,\n    \"modified_at[before]\" : syncStaus.context.syncData.previousSyncEnd\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\ndone({params:params});\n"}},{"id":263290,"onSuccess":["loopOverCustomers"],"onFailure":["Error"],"name":"gotBulkData","type":"filter","properties":{"body":"if(steps.ChargebeeGetBulkData.cb_status === \"success\"){\n  if(steps.ChargebeeGetBulkData.data.status === \"failuare\" || steps.ChargebeeGetBulkData.data.status === \"failure\"){\n    done(false);\n  }\n  done(true);\n}\nelse\n  done(false);"}},{"id":260657,"onSuccess":["updateCustomFieldMap"],"onFailure":["Error"],"name":"gotCbFields","type":"filter","properties":{"body":"if(steps.ChargebeeGetCbFields.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260773,"onSuccess":["modifyConfig"],"onFailure":["Error"],"name":"gotConfig","type":"filter","properties":{"body":"if(steps.ChargebeeGetConfig.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260575,"onSuccess":["IsCustomerDeleted"],"onFailure":["UpdateSyncFailedParams"],"name":"gotContactData","type":"filter","properties":{"body":"// let id;\n// let thirdPartId;\n\n// if(steps.getContact.response.body.contacts !== undefined && steps.customerData.data.tpmapping !==undefined){\n//   thirdPartId = steps.customerData.data.tpmapping.third_party_entity_id;\n//   id = steps.getContact.response.body.contacts[0].id;\n\n//   if(thirdPartId === id ){\n//     done(true);\n//   }\n// }\n\n// done(false);\n\n\nif(steps.getContact.response.code !== 200){\n  done(false);\n}\n\nif(steps.getContact.response.body.contact !== undefined){\n  done(true);\n}else{\n  done(false);\n}"}},{"id":260706,"onSuccess":["FailedToSync"],"onFailure":["UpdateSyncFailedParams"],"name":"gotError","type":"filter","properties":{"body":"if(steps.ChargebeeGetError.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":262780,"onSuccess":["gotTpDetails"],"onFailure":["UpdateTPEntityForSubscription"],"name":"gotSubscriptionData","type":"filter","properties":{"body":"\n\n\n// if(steps.customerData.data.subscription !== undefined){\n//   done(true);\n// }else{\n//   done(false);\n// }\n\n\nif(steps.loopOverCustomers.entry.customer.deleted === false && steps.ChargebeeGetBulkData.data[steps.loopOverCustomers.entry.customer.id].subscription === undefined){\n    done(false);\n  }\nelse\n  done(true);"}},{"id":260895,"onSuccess":["fetchActiveCampaignInstanceDetails_params"],"onFailure":["isCustomerAlreadyDeleted"],"name":"gotTpDetails","type":"filter","properties":{"body":"if(steps.customerData.data.tpmapping !== undefined)\n  done(true);\nelse\n  done(false);"}},{"id":260768,"onSuccess":["TPData"],"onFailure":["Error"],"name":"gotTpEntityParams","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpEntityParams.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260704,"onSuccess":["CheckErrorRecords"],"onFailure":["Error"],"name":"gotTpError","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpError.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260565,"onSuccess":["TPEntityParams"],"onFailure":["UpdateOffsetParams"],"name":"hasBatchingFinished","type":"filter","properties":{"body":"let siteName = steps.ConfigParams.getTpConfigParams.siteName;\n\nlet batch_size = steps.CBthirdPartyConfiguration.config_json.batch.batch_size;\n\nif(steps.ConfigParams.initialSync || steps.CBList.list.length === 0){\n  done(true);\n}\n\nif((steps.getSubscription && steps.getSubscription.response.body.next_offset !== undefined ) || (steps.getCustomers && steps.getCustomers.response.body.next_offset !== undefined) || (steps.getCustomersDeleted && steps.getCustomersDeleted.response.body.next_offset !== undefined) || (steps.GetError && steps.GetError.response.body.next_offset !== undefined)){\ndone(false);\n}else if(steps.subscriptionList && steps.subscriptionList.customerList.list && steps.subscriptionList.customerList.list.length >= batch_size){\n  done(false);\n}else if(steps.customerList && steps.customerList.contactList && steps.customerList.contactList.length >= batch_size){\n  done(false);\n}else if(steps.deletedCustomersList && steps.deletedCustomersList.deletedList && steps.deletedCustomersList.deletedList.length >= batch_size){\n  done(false); \n}\nelse{\n  done(true);\n}\n\n\n\n\n\n\n"}},{"id":260566,"onSuccess":["setupUploadCsv"],"onFailure":["TPEntityParams"],"name":"HasNextOffset","type":"filter","properties":{"body":"done(steps.ChargebeeGetTpEntityParams.data.next_offset === undefined);"}},{"id":260567,"onSuccess":["includeDeletedCustomers"],"onFailure":["setOffset"],"name":"hasNextOffsetCustomer","type":"filter","properties":{"body":"let contactLength = steps.customerList.contactList !== undefined ? steps.customerList.contactList.length : 0;\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\nlet batch_size = configuration.batch.batch_size;\n\nconsole.log(contactLength);\nconsole.log(\"bs\"+batch_size);\n\nif(steps.ConfigParams.initialSync){\n  done(true);\n}\nelse {\n  if(steps.getCustomers !== undefined && steps.getCustomers.response.body.next_offset !== undefined){\n    if(contactLength >= batch_size || configuration.batch.get_customer === null){\n      done(true);\n    }\n    if(((steps.setOffset !== undefined) && (steps.setOffset.offset === steps.getCustomers.response.body.next_offset))){\n      done(true);\n    }\n    done(false);\n  }else{\n    done(true);\n  }\n}"}},{"id":260568,"onSuccess":["setOffsetDeleted"],"onFailure":["CustomerChangeList"],"name":"hasNextOffsetForDeletedCustomer","type":"filter","properties":{"body":"let deletedList = steps.deletedCustomersList.deletedList;\nlet batch_size = steps.CBthirdPartyConfiguration.config_json.batch.batch_size;\n\nif(steps.getCustomersDeleted.response.body.next_offset !== undefined){\n    if(((steps.setOffsetDeleted !== undefined) && (steps.setOffsetDeleted.offset === steps.getCustomersDeleted.response.body.next_offset)) || deletedList >= batch_size ){\n      done(false);\n    }\n    done(true);\n}else{\n  done(false);\n}\n"}},{"id":260569,"onSuccess":["setOffsetSubscription"],"onFailure":["ChargebeeDelayApi_2"],"name":"HasNextOffset_Subscription","type":"filter","properties":{"body":"let contactLength = steps.subscriptionList.customerList.list !== undefined ? steps.subscriptionList.customerList.list.length : 0;\nlet batch_size = steps.CBthirdPartyConfiguration.config_json.batch.batch_size;\n\nif(steps.getSubscription.response.body.next_offset !== undefined) {\n  if(((steps.setOffsetSubscription !== undefined) && (steps.setOffsetSubscription.offset === steps.getSubscription.response.body.next_offset)) || contactLength >= batch_size){\n    done(false);\n  }\n  done(true);\n}\nelse{\n  done(false);\n}\n\n"}},{"id":260572,"onSuccess":["getDeletedCustomersParam"],"onFailure":["CustomerChangeList"],"name":"includeDeletedCustomers","type":"filter","properties":{"body":"let configuration=steps.CBthirdPartyConfiguration.config_json;\nlet contactLength = steps.customerList.contactList !== undefined ? steps.customerList.contactList.length : 0;\n\nlet batch_size = steps.CBthirdPartyConfiguration.config_json.batch.batch_size;\n\nif(steps.ConfigParams.initialSync){\n  done(false);\n}\n\nif((configuration.cloudElements.formula.sync.firstFullSync === false || steps.CheckErrorRecords !== undefined) && configuration.batch.include_deleted !== null && contactLength < batch_size){\n  done(true);\n}\n\ndone(false);\n\n\n"}},{"id":260573,"onSuccess":["getContactFromActivecampaign"],"onFailure":[],"name":"isContactAlreadySyncedParam","type":"script","properties":{"body":"let body={\n  query:{\n    \"email\":steps.loopOverCustomers.entry.customer.email\n  }\n};\ndone(body);"}},{"id":260574,"onSuccess":["SetSubscription"],"onFailure":["confirmDelete"],"name":"isContactDeleted","type":"filter","properties":{"body":"let deleteops=steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.deleteops || null;\n\nlet delete_status = steps.loopOverCustomers.entry.customer.deleted || null;\n\n\nif((delete_status === true) && (deleteops === \"option2\")){ //Remove Contact\n  done(false);\n}else{\n  done(true); //Mark As Deleted\n}\n\n"}},{"id":260576,"onSuccess":["getTheSubscriptionStatusParam"],"onFailure":["SyncContact"],"name":"isContactPresentInActivecampaign","type":"filter","properties":{"body":" if(steps.getContactFromActivecampaign.response.body.contacts !== undefined){\n   done(true);\n }\n done(false);"}},{"id":269035,"onSuccess":["UpdateSyncFailedParams"],"onFailure":["loopOverCustomers"],"name":"isCustomerAlreadyDeleted","type":"filter","properties":{"body":"if(steps.loopOverCustomers.entry.customer.deleted === true){\n  done(false);\n}\ndone(true);"}},{"id":260578,"onSuccess":["getContactParam"],"onFailure":["IsSubscriptionDeletedFieldCreated"],"name":"IsCustomerDeleted","type":"filter","properties":{"body":"done(steps.loopOverCustomers.entry.customer.deleted === true);"}},{"id":261383,"onSuccess":["TriggerBatchExecution"],"onFailure":["Error"],"name":"isDelayApiSuccess","type":"filter","properties":{"body":"if(steps.ChargebeeDelayApi.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":261479,"onSuccess":["checkChangeCustomer"],"onFailure":["Error"],"name":"isDelayApiSuccess_2","type":"filter","properties":{"body":"if(steps.ChargebeeDelayApi_2.cb_status === \"success\"){\n  done(true);\n}else{\n  done(false);\n}"}},{"id":261481,"onSuccess":["hasNextOffsetCustomer"],"onFailure":["Error"],"name":"isDelayApiSuccess_3","type":"filter","properties":{"body":"if(steps.ChargebeeDelayApi_3.cb_status === \"success\"){\n  done(true);\n}\ndone(false);"}},{"id":261483,"onSuccess":["GetTPErrorParams"],"onFailure":["Error"],"name":"isDelayApiSuccess_4","type":"filter","properties":{"body":"if(steps.ChargebeeDelayApi_4.cb_status === \"success\"){\n  done(true);\n}\ndone(false);"}},{"id":261876,"onSuccess":[],"onFailure":["Error"],"name":"isDelayApiSuccess_5","type":"filter","properties":{"body":"if(steps.ChargebeeDelayApi_5.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260579,"onSuccess":["ChargebeeDelayApi_4"],"onFailure":["CBList"],"name":"IsGetTpError","type":"filter","properties":{"body":"let contactLength = (steps.CustomerChangeList !== undefined ) ? steps.CustomerChangeList.list.length : 0;\n\nlet configuration=steps.CBthirdPartyConfiguration.config_json;\nlet batch_size = configuration.batch.batch_size;\n\nif(steps.ConfigParams.initialSync){\n  done(false);\n}else if(contactLength >= batch_size || configuration.batch.get_error === null){\n  done(false);\n}\n\ndone(true);\n\n"}},{"id":260580,"onSuccess":["ActiveCampaignInput"],"onFailure":["loopOverCustomers"],"name":"isGiftedSubscriptions","type":"filter","properties":{"body":"let gift_id = steps.SetSubscription.data.subscription.gift_id;\nlet syncGiftFromTrigger = steps.ConfigParams.syncGift;\nlet syncGiftFromTPConfig = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.syncGift;\n\nif(syncGiftFromTrigger !==undefined){\n  if(syncGiftFromTrigger === \"true\"){\n    if(gift_id !== undefined){\n      done(false)\n     }\n}}else{\n   if(syncGiftFromTPConfig === \"true\"){\n    if(gift_id !== undefined){\n      done(false)\n     }\n}\n}\ndone(true);"}},{"id":260581,"onSuccess":["isTpEntityMappingPresent"],"onFailure":["UpdateTPEntityForSubscription"],"name":"isMarkAsDeleted","type":"filter","properties":{"body":"// if(steps.loopOverCustomers.entry.customer.deleted === true || steps.SetSubscription.data === null){\n//   done(true);\n// }\n// done(false);\n\nif(steps.loopOverCustomers.entry.customer.deleted === true){\n  done(true);\n}\ndone(false);"}},{"id":260582,"onSuccess":["LoopOverCustomFields"],"onFailure":["createFailedRelationshipParams"],"name":"isRelationshipMissing","type":"filter","properties":{"body":"//A case where failed to create relationship after creating a custom field is handled here\nlet configuration = steps.CBthirdPartyConfiguration.config_json;\nif(configuration.cloudElements.formula.sync.failedRelationships !== undefined){\n  done(false);\n}\ndone(true);\n\n"}},{"id":260689,"onSuccess":["LoopOverCustomFields"],"onFailure":["Error"],"name":"isRelationshipUpdateFailed","type":"filter","properties":{"body":"if(steps.ChargebeePostCreateFailedRelationship.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260583,"onSuccess":["setupUploadCsv"],"onFailure":["UpdateConfigParams"],"name":"isStopExecution","type":"filter","properties":{"body":"if(steps.fetchActiveCampaignInstance.response.code !== 200){\n  done(false);\n}\n\n\nlet tag = steps.fetchActiveCampaignInstance.response.body.tags || [];\n\nfor(var i=0;i < tag.length; i++){\n  if(tag[i] === \"stop\"){\n    done(true);\n  }\n}\n\ndone(false);\n"}},{"id":260584,"onSuccess":["SubscriptionDeletedParam"],"onFailure":["UpdateTPEntityForSubscription"],"name":"IsSubscriptionDeletedFieldCreated","type":"filter","properties":{"body":"done(steps.ListOfCustomFields.response.body.Cb_SubscriptionDeleted !== undefined);"}},{"id":264020,"onSuccess":["CustomFieldParams"],"onFailure":["UpdateSyncFailedParams"],"name":"isSubscriptionSuccess","type":"filter","properties":{"body":"if(steps.SubscribeToActiveCampaignList.response.code > 201){\n  done(false);\n}\n\ndone(true);"}},{"id":268023,"onSuccess":["getQueryParam"],"onFailure":["loopOverCustomers"],"name":"isTpEntityMappingPresent","type":"filter","properties":{"body":"if(steps.customerData.data.tpmapping.third_party_entity_id !== undefined){\n  done(true);\n}\n\ndone(false);"}},{"id":260897,"onSuccess":["loopOverCustomers"],"onFailure":["UpdateSyncFailedParams"],"name":"isTpEntityUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpEntity.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":261078,"onSuccess":["loopOverCustomers"],"onFailure":["UpdateSyncFailedParams"],"name":"isTpEntityUpdateSuccess_2","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpEntity_2.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260653,"onSuccess":["CBthirdPartyConfiguration"],"onFailure":["Error"],"name":"IsTpIntegConfFetched","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpIntegConf.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260655,"onSuccess":["getSelectedCustomFieldsFromUi"],"onFailure":["Error"],"name":"IsTpIntegSyncFetched","type":"filter","properties":{"body":"if(steps.ChargebeeGetLastSyncDetails.cb_status == \"success\"){\n  done(true); \n}\nelse{\n  done(false);\n}"}},{"id":261083,"onSuccess":["loopOverCustomers"],"onFailure":["Error"],"name":"isTpUpdateSubscriptionSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpEntitySubscription.cb_status == \"success\")\n  done(true);\nelse{\n  if(steps.ChargebeePostUpdateTpEntitySubscription.cb_code === 404){\n    done(true);\n  }\n  done(false);\n}"}},{"id":260776,"onSuccess":["ChargebeeDelayApi_5"],"onFailure":["Error"],"name":"isUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateSyncSuccess.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":261088,"onSuccess":["loopOverCustomers"],"onFailure":["UpdateSyncFailedParams"],"name":"isUpdateSuccess_3","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpEntity_3.cb_status == \"success\")\n  done(true);\nelse{\n  if(steps.ChargebeePostUpdateTpEntity_3.cb_code === 404){\n    done(true);\n  }\n  done(false);\n}"}},{"id":261390,"onSuccess":["ChargebeeGetLastSyncDetails"],"onFailure":["Failed"],"name":"isUpdateSuccess_4","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpConfig.cb_status == \"success\"){\n  done(true); \n}\nelse{\n  done(false);\n}"}},{"id":260893,"onSuccess":["Success"],"onFailure":["Error"],"name":"isUpdateSyncDetailsSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateSyncDetailsBatching.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":261081,"onSuccess":["loopOverCustomers"],"onFailure":["Error"],"name":"isUpdateSyncFailedSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateSyncFailed.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260770,"onSuccess":["ChargebeeParam"],"onFailure":["Error"],"name":"isUploadCsvDone","type":"filter","properties":{"body":"if(steps.ChargebeePostUploadCsv.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260586,"onSuccess":["checkChangeInSubscription"],"onFailure":["Error"],"name":"ListOfCustomFields","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","query":"${steps.ConfigParams.limitQuery}","method":"GET","api":"/fields"}},{"id":260587,"onSuccess":["customerData"],"onFailure":["hasBatchingFinished"],"name":"loopOverCustomers","type":"loop","properties":{"list":"${steps.CBList.list}"}},{"id":260588,"onSuccess":["CreateCustomField"],"onFailure":["ListOfCustomFields"],"name":"LoopOverCustomFields","type":"loop","properties":{"list":"${steps.CreateCustomFieldsParam.customFields}"}},{"id":260592,"onSuccess":["UpdateTPEntityMapping"],"onFailure":["UpdateSyncFailedParams"],"name":"MarkAsInactive","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","body":"${steps.getContactParam}","method":"POST","api":"/fieldValues"}},{"id":260593,"onSuccess":["UpdateTPEntityMapping"],"onFailure":["UpdateSyncFailedParams"],"name":"MarkAsTrue","type":"elementRequest","properties":{"elementInstanceId":"${config.activecampaign}","body":"${steps.SubscriptionDeletedParam}","method":"POST","api":"/fieldValues"}},{"id":260595,"onSuccess":["ChargebeePostUpdateTpIntegConf"],"onFailure":[],"name":"modifyConfig","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet configuration = steps.ChargebeeGetTpIntegConf.data.config_json;\n\nconfiguration.cloudElements.customFieldMap = steps.CBthirdPartyConfiguration.config_json.cloudElements.customFieldMap;\n\nconfiguration.cloudElements.lastSyncTime = Math.round((new Date().getTime()) / 1000);\n\n\n\n//to get Account Namespace\nlet accountName;\nlet configurations = steps.GetActiveCamapaignConfiguration.response.body;\nfor (var i = 0; i < configurations.length; ++i) {\n  if (configurations[i].name === \"account\") {\n    accountName = configurations[i].propertyValue;\n    break;\n  }\n}\n\nconfiguration.cloudElements.thirdParty.accountName = accountName;\nconfiguration.cloudElements.formula.sync.failedRelationships = undefined;\n//Clearing any failed relationship information which was stored in tpconfig for handling, handled at top of formula\n\nif (trigger.args['initialSync'] === true) {\n\n  configuration.cloudElements.formula.mapping.isListChanged = false;\n  configuration.cloudElements.formula.sync.firstFullSync = true;\n  configuration.batch = { \"batch_size\": 100};\n}\nelse {\n\n  configuration.cloudElements.formula.validate.logs = \"\";\n  configuration.cloudElements.formula.sync.ignoreIndexArray = [];\n  configuration.cloudElements.chargebee.s3linkforFullsyncError = steps.ChargebeePostUploadCsv.data.s3_link;//we have seprated the api call to update tp config\n  configuration.cloudElements.formula.sync.ignoreAll = \"false\";\n  configuration.cloudElements.formula.sync.authFailed = false;\n  configuration.cloudElements.formula.mapping.isListChanged = false;\n  configuration.cloudElements.formula.sync.firstFullSync = false;\n  configuration.cloudElements.formula.sync.totalRecordsSynced = steps.TPData.successCount;\n  configuration.cloudElements.formula.sync.totalFailedRecords = steps.TPData.errorList.length;\n  configuration.cloudElements.formula.sync.isFirstFullsyncFailed = undefined;\n  configuration.batch = { \"batch_size\": 100};\n  // configuration.batch.batch_no = 0;\n   configuration.batch.status = \"success\"\n}\n\nconfiguration.cloudElements.formula.sync.execution = {\n  \"result\": {\n    syncStatus: \"finished\"\n  }\n}\n\nif ((steps.isStopExecution !== undefined) && (steps.isStopExecution.continue === true)) {\n  configuration.cloudElements.formula.sync.execution.result.syncStatus = \"stopped\";\n}\n\nlet tpConfigUpdateParams = {\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n    integration_name: type,\n    site_name: siteName,\n    api_key: apiKey,\n    config_json: configuration\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});"}},{"id":260597,"onSuccess":[],"onFailure":[],"name":"noListFoundError","type":"script","properties":{"body":"let statusCode=steps.getListFromActiveCampaign.response.code;\n let error;\nif(statusCode===404){\n error = {\n  \"cardResult\" : {\n    text:\"Looks like ActiveCampaign list has been deleted. Resolve it and Sync Again\",\n    statusCode:statusCode\n  }\n  \n}\n}\nif(statusCode===403){\n error = {\n  \"cardResult\" : {\n    text:\"Looks like ActiveCampaign key has been expired\",\n    statusCode:statusCode\n  }\n  \n}\n}\n\ndone(error);"}},{"id":261384,"onSuccess":["ChargebeeGetLastSyncDetails"],"onFailure":["configUpdateParams"],"name":"notFirstCall","type":"filter","properties":{"body":"if(steps.ConfigParams.triggerParams.batching === undefined ){\n  done(false);\n}\n\ndone(true);"}},{"id":260891,"onSuccess":["BatchExecutionParams"],"onFailure":["Error"],"name":"offsetUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateOffset.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260600,"onSuccess":["getCustomersParam"],"onFailure":[],"name":"setOffset","type":"script","properties":{"body":"done({offset: steps.getCustomers.response.body.next_offset});"}},{"id":260601,"onSuccess":["getDeletedCustomersParam"],"onFailure":[],"name":"setOffsetDeleted","type":"script","properties":{"body":"done({\n  offset: steps.getCustomersDeleted.response.body.next_offset\n});"}},{"id":260602,"onSuccess":["getSubscriptionParams"],"onFailure":[],"name":"setOffsetSubscription","type":"script","properties":{"body":"done({\n  offset: steps.getSubscription.response.body.next_offset \n});"}},{"id":260603,"onSuccess":["ValidSubscription"],"onFailure":[],"name":"SetSubscription","type":"script","properties":{"body":"\nlet apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet integ_name=steps.ConfigParams.getTpConfigParams.type;\nlet customer = steps.loopOverCustomers.entry.customer;\nlet errorMessage;\n\n\n// if(steps.ChargebeeGetPrioritySubscription.data.status !== \"failuare\" && steps.ChargebeeGetPrioritySubscription.data.status !== \"failure\" ){\n//   let data = {};\n//   data.customer = steps.loopOverCustomers.entry.customer;\n//   data.subscription = steps.ChargebeeGetPrioritySubscription.data;\n//   done({\n//     data : data\n//   });\n     \n// }else {\n//   let chargebee_data_url = \"https://\"+siteName+\".\"+siteDomain+\"/admin-console/customers/\" + customer.id;\n//   let cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\"+customer.id+\"</a>\";\n  \n//   if(steps.loopOverCustomers.entry.customer.deleted === false){\n//     errorMessage = cb_link + \" Subscription not available\\n\";\n   \n//   }\n\nif(steps.customerData.data.subscription !== undefined){\n  let data = {};\n  data.customer = steps.loopOverCustomers.entry.customer;\n  data.subscription = steps.customerData.data.subscription;\n  done({\n    data : data\n  });\n}else {\n  let chargebee_data_url = \"https://\"+siteName+\".\"+siteDomain+\"/admin-console/customers/\" + customer.id;\n  let cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\"+customer.id+\"</a>\";\n  if(steps.loopOverCustomers.entry.customer.deleted === false){\n    errorMessage = cb_link + \" Subscription not available\\n\";\n  }\n  \n  done({\n    data:null,\n    errorMessage:errorMessage\n  });\n}\n"}},{"id":260604,"onSuccess":["ChargebeePostUploadCsv"],"onFailure":[],"name":"setupUploadCsv","type":"script","properties":{"body":"  let api_key = steps.ConfigParams.getTpConfigParams.apiKey;\n  let site_name = steps.ConfigParams.getTpConfigParams.siteName;\n  let siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\n  let integ_name = steps.ConfigParams.getTpConfigParams.type;\n\nlet file_content = \"\";\nlet file_type = \"csv\";\nlet password = \"\";\n\nlet errorCSV=steps.TPData.errorList || [];\n\nlet id;\nlet fullSyncErrCsv=\"Id\"+\",\"+\"Error Description\\n\";\nlet msg;\nif(errorCSV.length !== 0){\n  for(let i = 0; i < errorCSV.length; ++i){\n     msg = errorCSV[i].split('>').pop();\n     console.log(\"error:\"+msg);\n     id = errorCSV[i].split('>')[1].split('<')[0];\n   \n     fullSyncErrCsv = fullSyncErrCsv + id + \",\" + msg + \"\\n\";\n  }\n}\n\nlet body = {\n        \"url\":\"https://\"+site_name+\".integrations.\"+siteDomain+\"/integrations/api/file_upload\",\n        \"headers\":{\n         Authorization: \"Basic \" + CE.b64(api_key + \":\" + password)\n        },\n        query:{\n        \"api_key\":api_key,\n        \"site_name\":site_name,\n        \"integ_name\":integ_name,\n        \"file_type\":file_type,\n        \"log_type\" : \"Validation\"\n        \n      },\n      body:{\n            \"file_content\": fullSyncErrCsv,\n      },\n    apiKey: api_key,\n    siteName: site_name,\n    siteDomain: siteDomain,\n    type: integ_name,\n    password: password,\n    errcsv:errorCSV\n  \n};\ndone(body);\n\n"}},{"id":260607,"onSuccess":["isSubscriptionSuccess"],"onFailure":[],"name":"SubscribeToActiveCampaignList","type":"elementRequest","properties":{"acceptableStatusCodes":"200-600","elementInstanceId":"${config.activecampaign}","body":"${steps.ContactListBody.newList}","method":"POST","api":"/contactLists"}},{"id":260608,"onSuccess":["MarkAsTrue"],"onFailure":[],"name":"SubscriptionDeletedParam","type":"script","properties":{"body":"// let body = {\n//   \"fieldValue\": {\n//     \"contact\": steps.getContact.response.body.contacts[0].id,\n//     \"field\": steps.ListOfCustomFields.response.body.Cb_SubscriptionDeleted,\n//     \"value\": \"True\"\n//   }\n  \n// };\n\nlet body = {\n  \"fieldValue\": {\n    \"contact\": steps.getContact.response.body.contact.id,\n    \"field\": steps.ListOfCustomFields.response.body.Cb_SubscriptionDeleted,\n    \"value\": \"True\"\n  }\n  \n};\n\n\ndone(body);"}},{"id":260609,"onSuccess":["HasNextOffset_Subscription"],"onFailure":[],"name":"subscriptionList","type":"script","properties":{"body":"let subscriptions = [];\nlet temp;\nlet customerList = {\n  list: []\n};\n\nif(steps.subscriptionList !== undefined){\n  steps.subscriptionList.customerList = customerList;\n}\n\nif((steps.getSubscription.response.body.list !== undefined) && (steps.getSubscription.response.body.list.length > 0)){\n  subscriptions = steps.getSubscription.response.body.list;\n}\n\nfor(var i=0; i < subscriptions.length; i++){\n  temp = {\n          \"customer\":subscriptions[i].customer\n        };\n  customerList.list.push(temp);\n}\n\ndone({\n  customerList:customerList\n});\n\n"}},{"id":260611,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"done(true);"}},{"id":260612,"onSuccess":["ContactListBody"],"onFailure":["UpdateSyncFailedParams"],"name":"SyncContact","type":"elementRequest","properties":{"acceptableStatusCodes":"","elementInstanceId":"${config.activecampaign}","body":"${steps.ActiveCampaignInput.contact}","method":"POST","api":"/contact/sync"}},{"id":260616,"onSuccess":["HasNextOffset"],"onFailure":[],"name":"TPData","type":"script","properties":{"body":"let TpList = steps.ChargebeeGetTpEntityParams.data.list;\nlet successCount = 0;\nlet errorList = [];\n\nif( steps.TPData !== undefined){\n  successCount = steps.TPData.successCount;\n  errorList = steps.TPData.errorList;\n}\n\nTpList.map(item => item.third_party_entity_mapping).forEach(item => {\n  \n  if(item.status === \"synced\"){\n    successCount += 1;\n  }\n  else{\n    errorList.push(item.error_message);\n  }\n  \n});\n\ndone({\n  successCount: successCount,\n  errorList: errorList,\n});"}},{"id":260617,"onSuccess":["ChargebeeGetTpEntityParams"],"onFailure":[],"name":"TPEntityParams","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type =  steps.ConfigParams.getTpConfigParams.type;\n\nlet syncStatus = steps.ChargebeeGetLastSyncDetails.data;\nlet startTime = syncStatus.context.syncData.syncStart;\n  \nlet params = {\n  url: \"https://\" + siteName + \".\" + siteDomain + \"/api/v2/third_party_entity_mappings/list_all\",\n            headers: {\n                Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n            },\n            query: {\n                integration_name: type,\n                \"modified_at[after]\": startTime,\n                limit: 100\n            },\n            apiKey: apiKey,\n            siteName: siteName,\n            siteDomain: siteDomain,\n            type: type\n};\n\n\nif(steps.TPEntityParams !== undefined){\n  params.query.offset = steps.ChargebeeGetTpEntityParams.data.next_offset;\n}\n\ndone({ params: params });\n"}},{"id":260618,"onSuccess":["CustomFieldParamsForErrorRecords"],"onFailure":[],"name":"TransformCustomerIds","type":"script","properties":{"body":"let customerList = steps.CustomerChangeList.list;\nlet list;\nlet ids;\nlet errorList = steps.FailedToSync.customerIds;\n\nif(errorList.length > 0){\nfor(let i = 0; i < customerList.length; ++i){\n  if(errorList.indexOf(customerList[i].customer.id) > -1){\n     errorList.splice(errorList.indexOf(customerList[i].customer.id),1);\n  }\n} \n}\n\nif(errorList.length > 0){\n  ids = \"[\";\nfor( let i = 0; i < errorList.length; ++i){\n  ids += errorList[i];\n  if(i+1 !==  errorList.length){\n    ids += \",\";\n  }\n}\n ids += \"]\";\n}\n\ndone({errorList: errorList ,\n  ids : ids\n});\n\n\n"}},{"id":260619,"onSuccess":["UpdateSyncDetails"],"onFailure":[],"name":"TriggerBatchExecution","type":"request","properties":{"body":"${steps.BatchExecutionParams.body}","method":"POST","api":"/formulas/instances/${steps.UpdateOffsetParams.tpConfigUpdateParams.body.config_json.cloudElements.formula.sync.instance}/executions"}},{"id":260621,"onSuccess":["SubscribeToActiveCampaignList"],"onFailure":[],"name":"UpdateActiveCampaignInput","type":"script","properties":{"body":"let contactId = steps.SyncContact.response.body.contact.id;\nlet fieldValues = [];\n\nif(steps.ActiveCampaignInput.fieldValues !== undefined){\n  fieldValues = steps.ActiveCampaignInput.fieldValues;\n  for(var i = 0; i < fieldValues.length;i++) {\n    fieldValues[i][\"fieldValue\"][\"contact\"] = contactId;\n  }\n}\n\ndone({\n  fieldValues: fieldValues\n});"}},{"id":260622,"onSuccess":["checkEmailExist"],"onFailure":[],"name":"UpdateConfigParams","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet integ_name = steps.ConfigParams.getTpConfigParams.type;\n\n\nlet errorMessage;\nlet customer = steps.loopOverCustomers.entry.customer;\n\nlet emailFlag = true;\n\nlet chargebee_data_url = \"https://\" + siteName + \".\" + siteDomain + \"/admin-console/customers/\" + customer.id;\nlet cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\" + customer.id + \"</a>\"\n\n\nif (customer.email === undefined && customer.deleted === false) {\n\n   errorMessage = cb_link + \" Email Address Not Available\\n\";\n   emailFlag = false;\n}\n\n\n\ndone({\n   hasEmail: emailFlag,\n   errorMessage: errorMessage\n});"}},{"id":260623,"onSuccess":["CreateCustomFieldsParam"],"onFailure":[],"name":"updateCustomFieldMap","type":"script","properties":{"body":"let check = {};\n\nlet subscriptionFields = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.modelbox_check1;\n\nlet customerFields = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mapping.inputs.modelbox_check2;\n\nlet customFieldMap = steps.CBthirdPartyConfiguration.config_json.cloudElements.customFieldMap;\n\nlet chargebeeFields=JSON.parse(steps.ChargebeeGetCbFields.data.response);\nlet CbCustomerfieldsKeys=Object.keys(chargebeeFields.customer_custom_fields);\nlet CbSubscriptionfieldsKeys=Object.keys(chargebeeFields.subscription_custom_fields);\n\n\nlet activeCampaignExistingFields = steps.GetListOfCustomFields.response.body;\n\n\nif(activeCampaignExistingFields.Cb_chargebeeCustomerStatus !== undefined){\n  customFieldMap.Cb_chargebeeCustomerStatus = activeCampaignExistingFields.Cb_chargebeeCustomerStatus;\n}else{\n  customFieldMap.Cb_chargebeeCustomerStatus = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_orgName !== undefined) {\n  customFieldMap.Cb_orgName = activeCampaignExistingFields.Cb_orgName;\n}else{\n  customFieldMap.Cb_orgName = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionID !== undefined) {\n  customFieldMap.Cb_subscriptionID = activeCampaignExistingFields.Cb_subscriptionID;\n}else{\n  customFieldMap.Cb_subscriptionID = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionPlanName !== undefined) {\n  customFieldMap.Cb_subscriptionPlanName = activeCampaignExistingFields.Cb_subscriptionPlanName;\n}else{\n  customFieldMap.Cb_subscriptionPlanName = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionPlanValue !== undefined) {\n  customFieldMap.Cb_subscriptionPlanValue = activeCampaignExistingFields.Cb_subscriptionPlanValue;\n}else{\n  customFieldMap.Cb_subscriptionPlanValue = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionStatus !== undefined) {\n  customFieldMap.Cb_subscriptionStatus = activeCampaignExistingFields.Cb_subscriptionStatus;\n}else{\n  customFieldMap.Cb_subscriptionStatus = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionTrialStartDate !== undefined) {\n  customFieldMap.Cb_subscriptionTrialStartDate = activeCampaignExistingFields.Cb_subscriptionTrialStartDate;\n}else{\n  customFieldMap.Cb_subscriptionTrialStartDate = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionTrialEndDate !== undefined) {\n  customFieldMap.Cb_subscriptionTrialEndDate = activeCampaignExistingFields.Cb_subscriptionTrialEndDate;\n}else{\n  customFieldMap.Cb_subscriptionTrialEndDate = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionNextBillingDate !== undefined) {\n  customFieldMap.Cb_subscriptionNextBillingDate = activeCampaignExistingFields.Cb_subscriptionNextBillingDate;\n}else{\n  customFieldMap.Cb_subscriptionNextBillingDate = undefined;\n}\n\nif  (activeCampaignExistingFields.Cb_subscriptionCreatedOn !== undefined) {\n  customFieldMap.Cb_subscriptionCreatedOn = activeCampaignExistingFields.Cb_subscriptionCreatedOn;\n}else{\n  customFieldMap.Cb_subscriptionCreatedOn = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionStartsOn !== undefined) {\n  customFieldMap.Cb_subscriptionStartsOn = activeCampaignExistingFields.Cb_subscriptionStartsOn;\n}else{\n  customFieldMap.Cb_subscriptionStartsOn = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionCancelledOn !== undefined) {\n  customFieldMap.Cb_subscriptionCancelledOn = activeCampaignExistingFields.Cb_subscriptionCancelledOn;\n}else{\n  customFieldMap.Cb_subscriptionCancelledOn = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_currency !== undefined) {\n  customFieldMap.Cb_currency = activeCampaignExistingFields.Cb_currency;\n}else{\n  customFieldMap.Cb_currency = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionCancellationReason !== undefined) {\n  customFieldMap.Cb_subscriptionCancellationReason = activeCampaignExistingFields.Cb_subscriptionCancellationReason;\n}else{\n  customFieldMap.Cb_subscriptionCancellationReason = undefined;\n}\n\nif (activeCampaignExistingFields.Cb_subscriptionMRR !== undefined) {\n  customFieldMap.Cb_subscriptionMRR = activeCampaignExistingFields.Cb_subscriptionMRR;\n}else{\n  customFieldMap.Cb_subscriptionMRR = undefined;\n}\n\n\nfunction objectFlip(obj) {\n  const ret = {};\n  Object.keys(obj).forEach(key => {\n    ret[obj[key\n            ]\n        ] = key;\n    });\n  return ret;\n}\n\nlet reversedCustomerFieldMap  = objectFlip(customFieldMap);\nlet reversedExistingCustomFields = objectFlip(activeCampaignExistingFields);\n\nlet keysList = Object.keys(reversedCustomerFieldMap);\n\nfor(var item = 0; item < keysList.length; item++){\n  if(reversedExistingCustomFields[keysList[item\n        ]\n    ] === undefined){\n    reversedCustomerFieldMap[keysList[item\n            ]\n        ] = undefined;\n    }\n}\n\ncustomFieldMap = objectFlip(reversedCustomerFieldMap);\n\nif (subscriptionFields !== \"\" && subscriptionFields !== undefined) {\n   subscriptionFields = JSON.parse(subscriptionFields);\n   subscriptionFields.search = JSON.parse(subscriptionFields.search);\n   check.subscriptionFields = subscriptionFields;\n\n   if (subscriptionFields.search.auto_collection === undefined && customFieldMap.Cb_subscriptionAutoCollection !== undefined) {\n      customFieldMap.Cb_subscriptionAutoCollection = undefined;\n    }\n\n   if(subscriptionFields.search.auto_collection !== undefined && activeCampaignExistingFields.Cb_subscriptionAutoCollection !== undefined){\n        customFieldMap.Cb_subscriptionAutoCollection = activeCampaignExistingFields.Cb_subscriptionAutoCollection;\n    }\n   \n   if (subscriptionFields.search.billing_period === undefined && customFieldMap.Cb_billingPeriod !== undefined) {\n      customFieldMap.Cb_billingPeriod = undefined;\n    }\n\n   if(subscriptionFields.search.billing_period !== undefined && activeCampaignExistingFields.Cb_billingPeriod !== undefined){\n      customFieldMap.Cb_billingPeriod = activeCampaignExistingFields.Cb_billingPeriod;\n    }\n   \n   if (subscriptionFields.search.billing_period_unit === undefined && customFieldMap.Cb_billingPeriodUnit !== undefined) {\n      customFieldMap.Cb_billingPeriodUnit = undefined;\n    }\n\n   if(subscriptionFields.search.billing_period_unit !== undefined && activeCampaignExistingFields.Cb_billingPeriodUnit !== undefined){\n    customFieldMap.Cb_billingPeriodUnit = activeCampaignExistingFields.Cb_billingPeriodUnit;\n    }\n   \n   if (subscriptionFields.search.current_term_end === undefined && customFieldMap.Cb_currentTermEnd !== undefined) {\n      customFieldMap.Cb_currentTermEnd = undefined;\n    }\n\n   if(subscriptionFields.search.current_term_end !== undefined && activeCampaignExistingFields.Cb_currentTermEnd !== undefined){\n    customFieldMap.Cb_currentTermEnd = activeCampaignExistingFields.Cb_currentTermEnd;\n    }\n   \n   if (subscriptionFields.search.current_term_start === undefined && customFieldMap.Cb_currentTermStart !== undefined) {\n      customFieldMap.Cb_currentTermStart = undefined;\n    }\n\n   if(subscriptionFields.search.current_term_start !== undefined && activeCampaignExistingFields.Cb_currentTermStart !== undefined){\n    customFieldMap.Cb_currentTermStart = activeCampaignExistingFields.Cb_currentTermStart;\n    }\n   \n   if (subscriptionFields.search.customer_id === undefined && customFieldMap.Cb_customerId !== undefined) {\n      customFieldMap.Cb_customerId = undefined;\n    }\n\n   if(subscriptionFields.search.customer_id !== undefined && activeCampaignExistingFields.Cb_customerId !== undefined){\n    customFieldMap.Cb_customerId = activeCampaignExistingFields.Cb_customerId;\n    }\n   \n   if (subscriptionFields.search.plan_free_quantity === undefined && customFieldMap.Cb_planFreeQuantity !== undefined) {\n      customFieldMap.Cb_planFreeQuantity = undefined;\n    }\n\n   if(subscriptionFields.search.plan_free_quantity !== undefined && activeCampaignExistingFields.Cb_planFreeQuantity !== undefined){\n    customFieldMap.Cb_planFreeQuantity = activeCampaignExistingFields.Cb_planFreeQuantity;\n    }\n   \n   if (subscriptionFields.search.has_scheduled_changes === undefined && customFieldMap.Cb_hasScheduledChanges !== undefined) {\n      customFieldMap.Cb_hasScheduledChanges = undefined;\n    }\n\n   if(subscriptionFields.search.has_scheduled_changes !== undefined && activeCampaignExistingFields.Cb_hasScheduledChanges !== undefined){\n    customFieldMap.Cb_hasScheduledChanges = activeCampaignExistingFields.Cb_hasScheduledChanges;\n    }\n   \n   if (subscriptionFields.search.due_invoices_count === undefined && customFieldMap.Cb_dueInvoicesCount !== undefined) {\n      customFieldMap.Cb_dueInvoicesCount = undefined;\n    }\n\n   if(subscriptionFields.search.due_invoices_count !== undefined && activeCampaignExistingFields.Cb_dueInvoicesCount !== undefined){\n    customFieldMap.Cb_dueInvoicesCount = activeCampaignExistingFields.Cb_dueInvoicesCount;\n    }\n   \n   if (subscriptionFields.search.plan_quantity === undefined && customFieldMap.Cb_planQuantity !== undefined) {\n      customFieldMap.Cb_planQuantity = undefined;\n    }\n\n   if(subscriptionFields.search.plan_quantity !== undefined && activeCampaignExistingFields.Cb_planQuantity !== undefined){\n    customFieldMap.Cb_planQuantity = activeCampaignExistingFields.Cb_planQuantity;\n    }\n   \n   if (subscriptionFields.search.resource_version === undefined && customFieldMap.Cb_ResourceVersion !== undefined) {\n      customFieldMap.Cb_ResourceVersion = undefined;\n    }\n\n   if(subscriptionFields.search.resource_version !== undefined && activeCampaignExistingFields.Cb_ResourceVersion !== undefined){\n    customFieldMap.Cb_ResourceVersion = activeCampaignExistingFields.Cb_ResourceVersion;\n    }\n   \n   if (subscriptionFields.search.plan_unit_price === undefined && customFieldMap.Cb_planUnitPrice !== undefined) {\n      customFieldMap.Cb_planUnitPrice = undefined;\n    }\n   \n   if(subscriptionFields.search.plan_unit_price !== undefined && activeCampaignExistingFields.Cb_planUnitPrice !== undefined){\n    customFieldMap.Cb_planUnitPrice = activeCampaignExistingFields.Cb_planUnitPrice;\n    }\n   \n   if (subscriptionFields.search.updated_on === undefined && customFieldMap.Cb_updatedOn !== undefined) {\n      customFieldMap.Cb_updatedOn = undefined;\n    }\n\n   if(subscriptionFields.search.updated_on !== undefined && activeCampaignExistingFields.Cb_updatedOn !== undefined){\n    customFieldMap.Cb_updatedOn = activeCampaignExistingFields.Cb_updatedOn;\n    }\n   \n   if (subscriptionFields.search.deleted === undefined && customFieldMap.Cb_SubscriptionDeleted !== undefined) {\n      customFieldMap.Cb_SubscriptionDeleted = undefined;\n    }\n\n   if(subscriptionFields.search.deleted !== undefined && activeCampaignExistingFields.Cb_SubscriptionDeleted !== undefined){\n    customFieldMap.Cb_SubscriptionDeleted = activeCampaignExistingFields.Cb_SubscriptionDeleted;\n    }\n   \n   \n   if (subscriptionFields.search.object === undefined && customFieldMap.Cb_object !== undefined) {\n      customFieldMap.Cb_object = undefined;\n    }\n\n   if(subscriptionFields.search.object !== undefined && activeCampaignExistingFields.Cb_object !== undefined){\n    customFieldMap.Cb_object = activeCampaignExistingFields.Cb_object;\n    }\n   \n   if (subscriptionFields.search.total_dues === undefined && customFieldMap.Cb_totalDues !== undefined) {\n      customFieldMap.Cb_totalDues = undefined;\n    }\n\n   if(subscriptionFields.search.total_dues !== undefined && activeCampaignExistingFields.Cb_totalDues !== undefined){\n    customFieldMap.Cb_totalDues = activeCampaignExistingFields.Cb_totalDues;\n    }\n   \n   if (subscriptionFields.search.due_since === undefined && customFieldMap.Cb_dueSince !== undefined) {\n      customFieldMap.Cb_dueSince = undefined;\n    }\n\n   if(subscriptionFields.search.due_since !== undefined && activeCampaignExistingFields.Cb_dueSince !== undefined){\n    customFieldMap.Cb_dueSince = activeCampaignExistingFields.Cb_dueSince;\n    }\n   \n   for (var i = 0; i < CbSubscriptionfieldsKeys.length; ++i) {\n      if (subscriptionFields.search[CbSubscriptionfieldsKeys[i\n            ]\n        ] === undefined && customFieldMap[\n            \"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i\n                ]\n            ]\n        ] !== undefined) {\n         customFieldMap[\n                \"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i\n                    ]\n                ]\n            ] = undefined;\n        }\n\n      if(subscriptionFields.search[CbSubscriptionfieldsKeys[i\n            ]\n        ] !== undefined && activeCampaignExistingFields[\n            \"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i\n                ]\n            ]\n        ] !== undefined){\n        customFieldMap[\n                \"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i\n                    ]\n                ]\n            ] = activeCampaignExistingFields[\n                \"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i\n                    ]\n                ]\n            ];\n        }\n    }\n}else{\n    if (customFieldMap.Cb_subscriptionAutoCollection !== undefined) {\n      customFieldMap.Cb_subscriptionAutoCollection = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_billingPeriod !== undefined) {\n      customFieldMap.Cb_billingPeriod = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_billingPeriodUnit !== undefined) {\n      customFieldMap.Cb_billingPeriodUnit = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_currentTermEnd !== undefined) {\n      customFieldMap.Cb_currentTermEnd = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_currentTermStart !== undefined) {\n      customFieldMap.Cb_currentTermStart = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_customerId !== undefined) {\n      customFieldMap.Cb_customerId = undefined;\n    }\n    \n    if (customFieldMap.Cb_planFreeQuantity !== undefined) {\n      customFieldMap.Cb_planFreeQuantity = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_hasScheduledChanges !== undefined) {\n      customFieldMap.Cb_hasScheduledChanges = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_dueInvoicesCount !== undefined) {\n      customFieldMap.Cb_dueInvoicesCount = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_planQuantity !== undefined) {\n      customFieldMap.Cb_planQuantity = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_ResourceVersion !== undefined) {\n      customFieldMap.Cb_ResourceVersion = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_planUnitPrice !== undefined) {\n      customFieldMap.Cb_planUnitPrice = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_updatedOn !== undefined) {\n      customFieldMap.Cb_updatedOn = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_SubscriptionDeleted !== undefined) {\n      customFieldMap.Cb_SubscriptionDeleted = undefined;\n    }\n      \n    if (customFieldMap.Cb_object !== undefined) {\n      customFieldMap.Cb_object = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_totalDues !== undefined) {\n      customFieldMap.Cb_totalDues = undefined;\n    }\n    \n    \n    if (customFieldMap.Cb_dueSince !== undefined) {\n      customFieldMap.Cb_dueSince = undefined;\n    }\n    \n    \n    for (var i = 0; i < CbSubscriptionfieldsKeys.length; ++i) {\n      if (customFieldMap[\"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i]]] !== undefined) {\n         customFieldMap[\"Cb_\" + chargebeeFields.subscription_custom_fields[CbSubscriptionfieldsKeys[i]]] = undefined;\n      }\n    }\n}\n\nif (customerFields !== \"\" && customerFields !== undefined) {\n   customerFields = JSON.parse(customerFields);\n   customerFields.search2 = JSON.parse(customerFields.search2);\n   check.customerFields = customerFields;\n\n   if (customerFields.search2.allow_direct_debit === undefined && customFieldMap.Cb_allowDirectDebit !== undefined) {\n      customFieldMap.Cb_allowDirectDebit = undefined;\n    }\n\n   if(customerFields.search2.allow_direct_debit !== undefined && activeCampaignExistingFields.Cb_allowDirectDebit !== undefined){\n    customFieldMap.Cb_allowDirectDebit = activeCampaignExistingFields.Cb_allowDirectDebit;\n    }\n\n   if (customerFields.search2.auto_collection === undefined && customFieldMap.Cb_autoCollection !== undefined) {\n      customFieldMap.Cb_autoCollection = undefined;\n    }\n\n   if(customerFields.search2.auto_collection !== undefined && activeCampaignExistingFields.Cb_autoCollection !== undefined){\n    customFieldMap.Cb_autoCollection = activeCampaignExistingFields.Cb_autoCollection;\n    }\n\n   if (customerFields.search2.card_status === undefined && customFieldMap.Cb_cardStatus !== undefined) {\n      customFieldMap.Cb_cardStatus = undefined;\n    }\n\n   if(customerFields.search2.card_status !== undefined && activeCampaignExistingFields.Cb_cardStatus !== undefined){\n    customFieldMap.Cb_cardStatus = activeCampaignExistingFields.Cb_cardStatus;\n    }\n\n   if (customerFields.search2.created_on === undefined && customFieldMap.Cb_createdOn !== undefined) {\n      customFieldMap.Cb_createdOn = undefined;\n    }\n\n   if(customerFields.search2.created_on !== undefined && activeCampaignExistingFields.Cb_createdOn !== undefined){\n    customFieldMap.Cb_createdOn = activeCampaignExistingFields.Cb_createdOn;\n    }\n\n   if (customerFields.search2.email === undefined && customFieldMap.Cb_email !== undefined) {\n      customFieldMap.Cb_email = undefined;\n    }\n\n   if(customerFields.search2.email !== undefined && activeCampaignExistingFields.Cb_email !== undefined){\n    customFieldMap.Cb_email = activeCampaignExistingFields.Cb_email;\n    }\n   \n\n   if (customerFields.search2.excess_payments === undefined && customFieldMap.Cb_excessPayments !== undefined) {\n      customFieldMap.Cb_excessPayments = undefined;\n    }\n\n   if(customerFields.search2.excess_payments !== undefined && activeCampaignExistingFields.Cb_excessPayments !== undefined){\n    customFieldMap.Cb_excessPayments = activeCampaignExistingFields.Cb_excessPayments;\n    }\n\n   if (customerFields.search2.id === undefined && customFieldMap.Cb_id !== undefined) {\n      customFieldMap.Cb_id = undefined;\n    }\n\n   if(customerFields.search2.id !== undefined && activeCampaignExistingFields.Cb_id !== undefined){\n    customFieldMap.Cb_id = activeCampaignExistingFields.Cb_id;\n    }\n\n   if (customerFields.search2.net_term_days === undefined && customFieldMap.Cb_netTermDays !== undefined) {\n      customFieldMap.Cb_netTermDays = undefined;\n    }\n\n   if(customerFields.search2.net_term_days !== undefined && activeCampaignExistingFields.Cb_netTermDays !== undefined){\n    customFieldMap.Cb_netTermDays = activeCampaignExistingFields.Cb_netTermDays;\n    }\n\n   if (customerFields.search2.object === undefined && customFieldMap.Cb_customerObject !== undefined) {\n      customFieldMap.Cb_customerObject = undefined;\n    }\n\n   if(customerFields.search2.object !== undefined && activeCampaignExistingFields.Cb_customerObject !== undefined){\n    customFieldMap.Cb_customerObject = activeCampaignExistingFields.Cb_customerObject;\n    }\n\n   if (customerFields.search2.pii_cleared === undefined && customFieldMap.Cb_piiCleared !== undefined) {\n      customFieldMap.Cb_piiCleared = undefined;\n    }\n\n   if(customerFields.search2.pii_cleared !== undefined && activeCampaignExistingFields.Cb_piiCleared !== undefined){\n    customFieldMap.Cb_piiCleared = activeCampaignExistingFields.Cb_piiCleared;\n    }\n\n   if (customerFields.search2.preferred_currency_code === undefined && customFieldMap.Cb_preferredCurrencyCode !== undefined) {\n      customFieldMap.Cb_preferredCurrencyCode = undefined;\n    }\n\n   if(customerFields.search2.preferred_currency_code !== undefined && activeCampaignExistingFields.Cb_preferredCurrencyCode !== undefined){\n    customFieldMap.Cb_preferredCurrencyCode = activeCampaignExistingFields.Cb_preferredCurrencyCode;\n    }\n\n   if (customerFields.search2.promotional_credits === undefined && customFieldMap.Cb_promotionalCredits !== undefined) {\n      customFieldMap.Cb_promotionalCredits = undefined;\n    }\n\n   if(customerFields.search2.promotional_credits !== undefined && activeCampaignExistingFields.Cb_promotionalCredits !== undefined){\n    customFieldMap.Cb_promotionalCredits = activeCampaignExistingFields.Cb_promotionalCredits;\n    }\n\n   if (customerFields.search2.refundable_credits === undefined && customFieldMap.Cb_refundableCredits !== undefined) {\n      customFieldMap.Cb_refundableCredits = undefined;\n    }\n\n   if(customerFields.search2.refundable_credits !== undefined && activeCampaignExistingFields.Cb_refundableCredits !== undefined){\n    customFieldMap.Cb_refundableCredits = activeCampaignExistingFields.Cb_refundableCredits;\n    }\n\n   if (customerFields.search2.updated_at === undefined && customFieldMap.Cb_CustomerUpdatedOn !== undefined) {\n      customFieldMap.Cb_CustomerUpdatedOn = undefined;\n    }\n\n   if(customerFields.search2.updated_at !== undefined && activeCampaignExistingFields.Cb_CustomerUpdatedOn !== undefined){\n    customFieldMap.Cb_CustomerUpdatedOn = activeCampaignExistingFields.Cb_CustomerUpdatedOn;\n    }\n\n\n\n   if (customerFields.search2.taxability === undefined && customFieldMap.Cb_taxability !== undefined) {\n      customFieldMap.Cb_taxability = undefined;\n    }\n\n   if(customerFields.search2.taxability !== undefined && activeCampaignExistingFields.Cb_taxability !== undefined){\n    customFieldMap.Cb_taxability = activeCampaignExistingFields.Cb_taxability;\n    }\n\n   if (customerFields.search2.unbilled_charges === undefined && customFieldMap.Cb_unbilledCharges !== undefined) {\n      customFieldMap.Cb_unbilledCharges = undefined;\n    }\n\n   if(customerFields.search2.unbilled_charges !== undefined && activeCampaignExistingFields.Cb_unbilledCharges !== undefined){\n    customFieldMap.Cb_unbilledCharges = activeCampaignExistingFields.Cb_unbilledCharges;\n    }\n\n   if (customerFields.search2.billing_address_city === undefined && customFieldMap.Cb_billingAddressCity !== undefined) {\n      customFieldMap.Cb_billingAddressCity = undefined;\n    }\n\n   if(customerFields.search2.billing_address_city !== undefined && activeCampaignExistingFields.Cb_billingAddressCity !== undefined){\n    customFieldMap.Cb_billingAddressCity = activeCampaignExistingFields.Cb_billingAddressCity;\n    }\n\n   if (customerFields.search2.billing_address_country === undefined && customFieldMap.Cb_billingAddressCountry !== undefined) {\n      customFieldMap.Cb_billingAddressCountry = undefined;\n    }\n\n   if(customerFields.search2.billing_address_country !== undefined && activeCampaignExistingFields.Cb_billingAddressCountry !== undefined){\n    customFieldMap.Cb_billingAddressCountry = activeCampaignExistingFields.Cb_billingAddressCountry;\n    }\n\n   if (customerFields.search2.billing_address_first_name === undefined && customFieldMap.Cb_billingAddressFirstName !== undefined) {\n      customFieldMap.Cb_billingAddressFirstName = undefined;\n    }\n\n   if(customerFields.search2.billing_address_first_name !== undefined && activeCampaignExistingFields.Cb_billingAddressFirstName !== undefined){\n    customFieldMap.Cb_billingAddressFirstName = activeCampaignExistingFields.Cb_billingAddressFirstName;\n    }\n\n   if (customerFields.search2.billing_address_last_name === undefined && customFieldMap.Cb_billingAddressLastName !== undefined) {\n      customFieldMap.Cb_billingAddressLastName = undefined;\n    }\n\n   if(customerFields.search2.billing_address_last_name !== undefined && activeCampaignExistingFields.Cb_billingAddressLastName !== undefined){\n    customFieldMap.Cb_billingAddressLastName = activeCampaignExistingFields.Cb_billingAddressLastName;\n    }\n\n\n\n   if (customerFields.search2.billing_address_object === undefined && customFieldMap.Cb_billingAddressObject !== undefined) {\n      customFieldMap.Cb_billingAddressObject = undefined;\n    }\n\n   if(customerFields.search2.billing_address_object !== undefined && activeCampaignExistingFields.Cb_billingAddressObject !== undefined){\n    customFieldMap.Cb_billingAddressObject = activeCampaignExistingFields.Cb_billingAddressObject;\n    }\n\n   if (customerFields.search2.billing_address_state === undefined && customFieldMap.Cb_billingAddressState !== undefined) {\n      customFieldMap.Cb_billingAddressState = undefined;\n    }\n\n   if(customerFields.search2.billing_address_state !== undefined && activeCampaignExistingFields.Cb_billingAddressState !== undefined){\n    customFieldMap.Cb_billingAddressState = activeCampaignExistingFields.Cb_billingAddressState;\n    }\n\n   if (customerFields.search2.billing_address_state_code === undefined && customFieldMap.Cb_billingAddressStateCode !== undefined) {\n      customFieldMap.Cb_billingAddressStateCode = undefined;\n    }\n\n   if(customerFields.search2.billing_address_state_code !== undefined && activeCampaignExistingFields.Cb_billingAddressStateCode !== undefined){\n    customFieldMap.Cb_billingAddressStateCode = activeCampaignExistingFields.Cb_billingAddressStateCode;\n    }\n\n   if (customerFields.search2.billing_address_validation_status === undefined && customFieldMap.Cb_billingAddressValidationStatus !== undefined) {\n      customFieldMap.Cb_billingAddressValidationStatus = undefined;\n    }\n\n   if(customerFields.search2.billing_address_validation_status !== undefined && activeCampaignExistingFields.Cb_billingAddressValidationStatus !== undefined){\n    customFieldMap.Cb_billingAddressValidationStatus = activeCampaignExistingFields.Cb_billingAddressValidationStatus;\n    }\n\n   if (customerFields.search2.billing_address_zip === undefined && customFieldMap.Cb_billingAddressZip !== undefined) {\n      customFieldMap.Cb_billingAddressZip = undefined;\n    }\n\n   if(customerFields.search2.billing_address_zip !== undefined && activeCampaignExistingFields.Cb_billingAddressZip !== undefined){\n    customFieldMap.Cb_billingAddressZip = activeCampaignExistingFields.Cb_billingAddressZip;\n    }\n\n   if (customerFields.search2.locale === undefined && customFieldMap.Cb_locale !== undefined) {\n      customFieldMap.Cb_locale = undefined;\n    }\n\n   if(customerFields.search2.locale !== undefined && activeCampaignExistingFields.Cb_locale !== undefined){\n    customFieldMap.Cb_locale = activeCampaignExistingFields.Cb_locale;\n    }\n\n   for(var i=0;i<CbCustomerfieldsKeys.length;++i){\n      if(customerFields.search2[CbCustomerfieldsKeys[i\n            ]\n        ] === undefined && customFieldMap[\n            \"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i\n                ]\n            ]\n        ] !== undefined){\n         customFieldMap[\n                \"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i\n                    ]\n                ]\n            ] = undefined;\n        }\n\n      if(customerFields.search2[CbCustomerfieldsKeys[i\n            ]\n        ] !== undefined && activeCampaignExistingFields[\n            \"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i\n                ]\n            ]\n        ] !== undefined){\n        customFieldMap[\n                \"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i\n                    ]\n                ]\n            ] = activeCampaignExistingFields[\n                \"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i\n                    ]\n                ]\n            ];\n        }\n    }\n}else {\n    if (customFieldMap.Cb_allowDirectDebit !== undefined) {\n       customFieldMap.Cb_allowDirectDebit = undefined;\n    }\n  \n    if (customFieldMap.Cb_autoCollection !== undefined) {\n       customFieldMap.Cb_autoCollection = undefined;\n    }\n  \n    if (customFieldMap.Cb_cardStatus !== undefined) {\n       customFieldMap.Cb_cardStatus = undefined;\n    }\n  \n    \n  \n    if (customFieldMap.Cb_createdOn !== undefined) {\n       customFieldMap.Cb_createdOn = undefined;\n    }\n  \n    \n  \n    if (customFieldMap.Cb_email !== undefined) {\n       customFieldMap.Cb_email = undefined;\n    }\n  \n  \n  \n    if (customFieldMap.Cb_excessPayments !== undefined) {\n       customFieldMap.Cb_excessPayments = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_id !== undefined) {\n       customFieldMap.Cb_id = undefined;\n    }\n  \n    \n  \n    if (customFieldMap.Cb_netTermDays !== undefined) {\n       customFieldMap.Cb_netTermDays = undefined;\n    }\n  \n    \n  \n    if (customFieldMap.Cb_customerObject !== undefined) {\n       customFieldMap.Cb_customerObject = undefined;\n    }\n  \n  \n  \n    if (customFieldMap.Cb_piiCleared !== undefined) {\n       customFieldMap.Cb_piiCleared = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_preferredCurrencyCode !== undefined) {\n       customFieldMap.Cb_preferredCurrencyCode = undefined;\n    }\n  \n    if (customFieldMap.Cb_promotionalCredits !== undefined) {\n       customFieldMap.Cb_promotionalCredits = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_refundableCredits !== undefined) {\n       customFieldMap.Cb_refundableCredits = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_CustomerUpdatedOn !== undefined) {\n       customFieldMap.Cb_CustomerUpdatedOn = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_taxability !== undefined) {\n       customFieldMap.Cb_taxability = undefined;\n    }\n  \n    if (customFieldMap.Cb_unbilledCharges !== undefined) {\n       customFieldMap.Cb_unbilledCharges = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_billingAddressCity !== undefined) {\n       customFieldMap.Cb_billingAddressCity = undefined;\n    }\n  \n   \n    if (customFieldMap.Cb_billingAddressCountry !== undefined) {\n       customFieldMap.Cb_billingAddressCountry = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_billingAddressFirstName !== undefined) {\n       customFieldMap.Cb_billingAddressFirstName = undefined;\n    }\n  \n   \n    if (customFieldMap.Cb_billingAddressLastName !== undefined) {\n       customFieldMap.Cb_billingAddressLastName = undefined;\n    }\n  \n  \n  \n  \n    if (customFieldMap.Cb_billingAddressObject !== undefined) {\n       customFieldMap.Cb_billingAddressObject = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_billingAddressState !== undefined) {\n       customFieldMap.Cb_billingAddressState = undefined;\n    }\n  \n    \n  \n    if (customFieldMap.Cb_billingAddressStateCode !== undefined) {\n       customFieldMap.Cb_billingAddressStateCode = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_billingAddressValidationStatus !== undefined) {\n       customFieldMap.Cb_billingAddressValidationStatus = undefined;\n    }\n  \n    \n  \n    if (customFieldMap.Cb_billingAddressZip !== undefined) {\n       customFieldMap.Cb_billingAddressZip = undefined;\n    }\n  \n  \n    if (customFieldMap.Cb_locale !== undefined) {\n       customFieldMap.Cb_locale = undefined;\n    }\n  \n  \n    for(var i=0;i<CbCustomerfieldsKeys.length;++i){\n      if(customFieldMap[\"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i]]] !== undefined){\n          customFieldMap[\"Cb_\"+chargebeeFields.customer_custom_fields[CbCustomerfieldsKeys[i]]] = undefined;\n      }\n     }\n  }\n\nsteps.CBthirdPartyConfiguration.config_json.cloudElements.customFieldMap = customFieldMap;\n\ndone({\n   customFieldMap: customFieldMap\n});"}},{"id":260774,"onSuccess":["UpdateSyncParams"],"onFailure":["Error"],"name":"updatedTpIntegConf","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":260625,"onSuccess":["ChargebeePostUpdateFailedRelationship"],"onFailure":[],"name":"UpdateFailedRelationshipParams","type":"script","properties":{"body":"let apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet configuration = steps.CBthirdPartyConfiguration.config_json;\n\n\nconfiguration.cloudElements.formula.sync.failedRelationships = {\n  title: steps.LoopOverCustomFields.entry.field.title,\n  fieldId: steps.CreateCustomField.response.body.field.id,\n  descript: steps.LoopOverCustomFields.entry.field.descript,\n  defval: steps.LoopOverCustomFields.entry.field.defval\n};\n\n\nlet tpConfigUpdateParams = {\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n    integration_name: type,\n    site_name: siteName,\n    api_key: apiKey,\n    config_json: configuration\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n\n"}},{"id":260626,"onSuccess":["UpdateThirdPartyEntityParams"],"onFailure":["UpdateSyncFailedParams"],"name":"updateFields","type":"httpRequest","properties":{"acceptableStatusCodes":"502","headers":"${steps.CustomFieldParams.headers}","body":"${steps.CustomFieldParams.body}","url":"${steps.CustomFieldParams.url}","method":"POST"}},{"id":260628,"onSuccess":["ChargebeePostUpdateOffset"],"onFailure":[],"name":"UpdateOffsetParams","type":"script","properties":{"body":"let offset;\nlet apiKey = steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName = steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain = steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet configuration = steps.CBthirdPartyConfiguration.config_json;\nlet batch_size = configuration.batch.batch_size;\nlet isListChanged = configuration.cloudElements.formula.mapping.isListChanged;\n\n// if(steps.ChargebeeGetSubscription && steps.ChargebeeGetSubscription.data.next_offset !== undefined) {\n//   offset = steps.ChargebeeGetSubscription.data.next_offset;\n//   configuration.batch.change_subscription = offset;\n// }\n// else if(steps.ChargebeeGetDeletedCustomers && steps.ChargebeeGetDeletedCustomers.data.next_offset !== undefined){\n//   offset = steps.ChargebeeGetDeletedCustomers.data.next_offset;\n//   configuration.batch = {\n//     \"include_deleted\" : offset,\n//     \"change_subscription\" : null,\n//     \"batch_size\":batch_size\n//   };\n\nif(steps.getSubscription && steps.getSubscription.response.body.next_offset !== undefined) {\n  offset = steps.getSubscription.response.body.next_offset;\n   configuration.batch.change_subscription = offset;\n}\nelse if(steps.getCustomersDeleted && steps.getCustomersDeleted.response.body.next_offset !== undefined){\n  offset = steps.getCustomersDeleted.response.body.next_offset;\n   configuration.batch = {\n     \"include_deleted\" : offset,\n     \"change_subscription\" : null,\n     \"batch_size\":batch_size\n   };\n  \n}else if(steps.ChargebeeGetTpError && steps.ChargebeeGetTpError.data.next_offset !== undefined){\n  offset =  steps.ChargebeeGetTpError.data.next_offset;\n   configuration.batch={\n     \"get_error\" : offset,\n     \"change_subscription\" : null,\n     \"include_deleted\": null,\n      \"get_customer\" : null,\n     \"batch_size\":batch_size\n   }\n     ;\n}\n// else if(steps.ChargebeeGetCustomers && steps.ChargebeeGetCustomers.data.next_offset !== undefined && configuration.batch.get_customer !== null && configuration.cloudElements.formula.sync.firstFullSync === true){\n//   offset = steps.ChargebeeGetCustomers.data.next_offset;\n//   configuration.batch={\n//     \"get_customer\" : offset,\n//     \"get_error\" : null,\n//     \"change_subscription\" : null,\n//     \"include_deleted\": null,\n//     \"batch_size\":batch_size\n//   };\n// }else if(steps.ChargebeeGetCustomers && steps.ChargebeeGetCustomers.data.next_offset !== undefined && configuration.batch.get_customer !== null && isListChanged === true){\n//   offset = steps.ChargebeeGetCustomers.data.next_offset;\n//   configuration.batch={\n//     \"get_customer\" : offset,\n//     \"get_error\" : null,\n//     \"change_subscription\" : null,\n//     \"include_deleted\": null,\n//     \"batch_size\":batch_size\n//   };\n// }else if(steps.ChargebeeGetCustomers && steps.ChargebeeGetCustomers.data.next_offset !== undefined && configuration.batch.get_customer !== null){\n//   offset = steps.ChargebeeGetCustomers.data.next_offset;\n//   configuration.batch={\n//     \"get_customer\" : offset,\n//     \"change_subscription\" : null,\n//     \"batch_size\":batch_size\n//   };\n// }\nelse if(steps.getCustomers && steps.getCustomers.response.body.next_offset !== undefined && configuration.batch.get_customer !== null && configuration.cloudElements.formula.sync.firstFullSync === true){\n  offset = steps.getCustomers.response.body.next_offset;\n   configuration.batch={\n     \"get_customer\" : offset,\n     \"get_error\" : null,\n     \"change_subscription\" : null,\n     \"include_deleted\": null,\n     \"batch_size\":batch_size\n   };\n}else if(steps.getCustomers && steps.getCustomers.response.body.next_offset !== undefined && configuration.batch.get_customer !== null && isListChanged === true){\n  offset = steps.getCustomers.response.body.next_offset;\n   configuration.batch={\n     \"get_customer\" : offset,\n     \"get_error\" : null,\n     \"change_subscription\" : null,\n     \"include_deleted\": null,\n     \"batch_size\":batch_size\n   };\n}else if(steps.getCustomers && steps.getCustomers.response.body.next_offset !== undefined && configuration.batch.get_customer !== null){\n  offset = steps.getCustomers.response.body.next_offset;\n   configuration.batch={\n     \"get_customer\" : offset,\n     \"change_subscription\" : null,\n     \"batch_size\":batch_size\n   };\n}\nelse{\n  \n   if(steps.subscriptionList && steps.subscriptionList.customerList.list.length >= batch_size){\n  configuration.batch = {\n     \"change_subscription\" : null,\n     \"batch_size\":batch_size\n   };\n} if(steps.customerList && steps.customerList.contactList.length >= batch_size && steps.subscriptionList &&  steps.subscriptionList.customerList.list.length < steps.customerList.contactList.length){\n    configuration.batch = {\n     \"get_customer\" : null,\n     \"change_subscription\" : null,\n     \"batch_size\":batch_size\n   };\n}if(steps.customerList && steps.customerList.contactList.length >= batch_size && steps.subscriptionList === undefined){\n    configuration.batch = {\n     \"get_customer\" : null,\n     \"change_subscription\" : null,\n     \"batch_size\":batch_size\n   };\n} \nif(steps.deletedCustomersList && steps.deletedCustomersList.deletedList.length >= batch_size){\n      configuration.batch = {\n     \"include_deleted\" : null,\n      \"get_customer\" : null,\n      \"change_subscription\" : null,\n      \"batch_size\":batch_size\n   };\n  }\n}\n\nconfiguration.batch.status = \"running\";\n\nconfiguration.cloudElements.formula.sync.failedRelationships = undefined;\n//if any failed relationships information store, clearing it since sync is finished\n\n\nlet tpConfigUpdateParams = {\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n    integration_name: type,\n    site_name: siteName,\n    api_key: apiKey,\n    config_json: configuration\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\ndone({\n  tpConfigUpdateParams: tpConfigUpdateParams\n});\n\n\n\n"}},{"id":260632,"onSuccess":["ChargebeePostUpdateSyncDetailsBatching"],"onFailure":[],"name":"UpdateSyncDetails","type":"script","properties":{"body":"let input = steps.ConfigParams.getTpConfigParams;\n\nlet payload = {\n  error : false,\n  done: true,\n  url : \"https://\"+input.siteName+\".\"+input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.ChargebeeGetLastSyncDetails.data.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(input.apiKey + \":\" + \"\")\n  },\n  query: steps.ChargebeeGetLastSyncDetails.data,\n  apiKey: input.apiKey,\n  siteName: input.siteName,\n  siteDomain: input.siteDomain,\n  type: input.type\n};\n\n payload.query.context.excecutionId = steps.TriggerBatchExecution.response.body[0].id;\n payload.query.context = JSON.stringify(payload.query.context);\n \ndone({\n  payload: payload\n});\n\n"}},{"id":260635,"onSuccess":["ChargebeePostUpdateSyncFailed"],"onFailure":[],"name":"UpdateSyncFailedParams","type":"script","properties":{"body":"let apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet password = \"\";\nlet customer = steps.loopOverCustomers.entry.customer;\n\nlet thirdPartId = steps.ChargebeeGetBulkData.data[customer.id]['tpmapping'] ? steps.ChargebeeGetBulkData.data[customer.id]['tpmapping']['third_party_entity_id']  : undefined;\n   \nlet chargebee_data_url = \"https://\"+siteName+\".\"+siteDomain+\"/admin-console/customers/\" + customer.id;\nlet cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\"+customer.id+\"</a>\";\n  \nlet errorMessage = cb_link + \" Sync failed\\n\";\n\nif(steps.customerData.data.subscription === undefined){\n  errorMessage = cb_link + \" Subscription not available\\n\";\n}else if(steps.gotContactData !== undefined){\n  if(steps.gotContactData.continue === false)\n    errorMessage = cb_link + \" Failed to fetch the contact\\n\";\n}else if(steps.getContact !== undefined){\n  if(steps.getContact.response.code !== 200)\n    errorMessage = cb_link + \" Failed to fetch the contact\\n\";\n}else if(steps.loopOverCustomers.entry.customer.email === undefined){\n  errorMessage = cb_link + \" Email address not available\\n\";\n}else{\n  errorMessage = cb_link + \" Sync failed\\n\";\n}\n   \nlet params = {\n    config :{\n      url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n      headers:{\n        Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n      },\n      query:{\n        integration_name: type,\n        entity_id: steps.loopOverCustomers.entry.customer.id,\n        entity_type: \"customer\",\n        status: \"update_failed\",\n        error_message: errorMessage,\n        third_party_entity_id: thirdPartId \n      },\n      apiKey: apiKey,\n      siteName: siteName,\n      siteDomain: siteDomain,\n      type: type\n    }\n};\n\ndone(params)\n\n"}},{"id":260636,"onSuccess":["ChargebeePostUpdateSyncSuccess"],"onFailure":[],"name":"UpdateSyncParams","type":"script","properties":{"body":"let input = steps.ConfigParams.getTpConfigParams;\nlet successLength = steps.TPData.successCount;\nlet errorLength = steps.TPData.errorList.length;\n\nlet payload = {\n  apiKey: input.apiKey,\n  siteName: input.siteName,\n  siteDomain: input.siteDomain,\n  type: input.type,\n  error : false,\n  done: true,\n  url : \"https://\"+input.siteName+\".\"+input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.ChargebeeGetLastSyncDetails.data.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(input.apiKey + \":\" + \"\")\n  },\n  query: steps.ChargebeeGetLastSyncDetails.data,\n};\n\n payload.query.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\n payload.query.status = \"succeeded\";\n payload.query.context.syncData.total = successLength + errorLength;\n payload.query.context.syncData.success = successLength;\n payload.query.context.syncData.failed = errorLength;\n \n payload.query.context = JSON.stringify(payload.query.context);\n \ndone({\n  payload: payload\n});"}},{"id":260640,"onSuccess":["ChargebeePostUpdateTpEntity_2"],"onFailure":[],"name":"UpdateThirdPartyEntityParams","type":"script","properties":{"body":"let apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\n\nlet password = \"\";\n\nlet resource = steps.SetSubscription.data;\nlet errorMessage;\nlet syncStatus = \"update_failed\";\nlet tpEntityId = steps.SyncContact.response.body.contact ? steps.SyncContact.response.body.contact.id : '';\n\nlet chargebee_data_url = \"https://\" + siteName + \".\" + siteDomain + \"/admin-console/customers/\" +  steps.loopOverCustomers.entry.customer.id;\nlet cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\" + steps.loopOverCustomers.entry.customer.id + \"</a>\";\n\n// if(steps.SyncContact.response.code !== 200){\n//   syncStatus = \"update_failed\";\n// }\n\nif(steps.SyncContact.response.code === 200 && steps.SubscribeToActiveCampaignList.response.code === 200 && steps.updateFields.response.code === 200){\n  syncStatus = \"synced\";\n  errorMessage = undefined;\n}else{\n  syncStatus = \"update_failed\";\n  errorMessage = cb_link + \" Sync failed\\n\";\n}\n   \nlet params = {\n  input: {\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    type: type,\n    url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n    headers:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n    },\n    query:{\n      integration_name: type,\n      entity_id: resource.customer.id,\n      entity_type: \"customer\",\n      third_party_entity_id: tpEntityId,\n      status: syncStatus,\n      error_message: errorMessage,\n      old_resource: JSON.stringify(resource)\n    }\n  }\n};\n\ndone(params);"}},{"id":260642,"onSuccess":["ChargebeePostUpdateTpEntity"],"onFailure":[],"name":"UpdateTPEnityMapping","type":"script","properties":{"body":"let apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet password = \"\";\n\nlet thirdPartId = steps.customerData.data.tpmapping ? steps.customerData.data.tpmapping.third_party_entity_id  : undefined;\n\nlet chargebee_data_url = \"https://\" + siteName + \".\" + siteDomain + \"/admin-console/customers/\" +  steps.loopOverCustomers.entry.customer.id;\nlet cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\" + steps.loopOverCustomers.entry.customer.id + \"</a>\";\nlet errorMessage = cb_link + \" Email address not available\\n\";\n\nif(steps.UpdateConfigParams.errorMessage !== undefined){\n  errorMessage = steps.UpdateConfigParams.errorMessage;\n}\n\n   \nlet params = {\n  url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: type,\n    entity_id: steps.loopOverCustomers.entry.customer.id,\n    entity_type: \"customer\",\n    status: \"update_failed\",\n    error_message: errorMessage,\n    third_party_entity_id: thirdPartId \n  }\n};\n\ndone(params);\n\n"}},{"id":260644,"onSuccess":["ChargebeePostUpdateTpEntitySubscription"],"onFailure":[],"name":"UpdateTPEntityForSubscription","type":"script","properties":{"body":"let apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\nlet password = \"\";\nlet thirdPartId = steps.customerData.data.tpmapping ? steps.customerData.data.tpmapping.third_party_entity_id  : undefined;\n\n\nlet chargebee_data_url = \"https://\"+siteName+\".\"+siteDomain+\"/admin-console/customers/\" + steps.loopOverCustomers.entry.customer.id;\nlet cb_link = \"<a href='\" + chargebee_data_url + \"' target='blank'>\"+steps.loopOverCustomers.entry.customer.id+\"</a>\";\n\nlet errorMessage = cb_link + \" Sync failed\\n\";\n\nif(steps.loopOverCustomers.entry.customer.email === undefined){\n  errorMessage = cb_link + \" Email address not available\\n\";\n}\nelse if(steps.customerData.data.subscription === undefined){\n    errorMessage = cb_link + \" Subscription not available\\n\";\n}\n  \nlet params = {\n  input: {\n      url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n      headers:{\n        Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n      },\n      query:{\n        integration_name: type,\n        entity_id: steps.loopOverCustomers.entry.customer.id,\n        entity_type: \"customer\",\n        status: \"update_failed\",\n        error_message: errorMessage,\n        third_party_entity_id: thirdPartId \n      },\n      apiKey: apiKey,\n      siteName: siteName,\n      siteDomain: siteDomain,\n      type: type\n  }\n};\n\ndone(params);\n\n"}},{"id":260645,"onSuccess":["ChargebeePostUpdateTpEntity_3"],"onFailure":[],"name":"UpdateTPEntityMapping","type":"script","properties":{"body":"\nlet apiKey=steps.ConfigParams.getTpConfigParams.apiKey;\nlet siteName=steps.ConfigParams.getTpConfigParams.siteName;\nlet siteDomain=steps.ConfigParams.getTpConfigParams.siteDomain;\nlet type = steps.ConfigParams.getTpConfigParams.type;\n\nlet password = \"\";\n\n\nlet resource = steps.loopOverCustomers.entry;\nlet syncStatus = \"synced\";\n// let tpEntityId = steps.getContact.response.body.contacts ? steps.getContact.response.body.contacts[0].id : '';\nlet tpEntityId = steps.getContact.response.body.contact ? steps.getContact.response.body.contact.id : '';\n\n   \nlet params = {\n    config :{\n      url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_entity_mappings/update_entity\",\n      headers:{\n        Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n      },\n      query:{\n        integration_name: type,\n        entity_id: resource.customer.id,\n        entity_type: \"customer\",\n        third_party_entity_id: tpEntityId,\n        status: syncStatus,\n        old_resource: JSON.stringify(resource)\n      },\n      apiKey: apiKey,\n      siteName: siteName,\n      siteDomain: siteDomain,\n      type: type\n    }\n};\n\ndone(params);\n\n"}},{"id":260648,"onSuccess":["isGiftedSubscriptions"],"onFailure":["isMarkAsDeleted"],"name":"ValidSubscription","type":"filter","properties":{"body":"if(steps.SetSubscription.data ===null){\n  done(false);\n}else {\n  done(true);\n}"}}],"triggers":[{"id":28700,"onSuccess":["ConfigParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31257,"name":"ChargebeeGet","userId":27893,"accountId":24428,"createdDate":"2019-11-12T11:30:28Z","steps":[{"id":245638,"onSuccess":["ChargebeeGetCBDelay2"],"onFailure":["ChargebeeGetResult"],"name":"ChargebeeGetCallAgainCB","type":"filter","properties":{"body":"//done(false); //Since delay causing 30 second limit issues\n\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetCBData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245636,"onSuccess":["ChargebeeGetCBDelay"],"onFailure":["ChargebeeGetResult2"],"name":"ChargebeeGetCallAgainHttp","type":"filter","properties":{"body":"done(false); //Since delay causing 30 second limit issues\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetHttpData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245637,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":[],"name":"ChargebeeGetCBDelay","type":"httpRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.delay.headers}","query":"${steps.ChargebeeGetInputParams.delay.query}","url":"${steps.ChargebeeGetInputParams.delay.url}","method":"GET"}},{"id":245639,"onSuccess":["ChargebeeGetGetCBData"],"onFailure":[],"name":"ChargebeeGetCBDelay2","type":"httpRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.delay.headers}","query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":244768,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244769,"onSuccess":["ChargebeeGetCallAgainCB"],"onFailure":["ChargebeeGetCallAgainCB"],"name":"ChargebeeGetGetCBData","type":"elementRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.headers}","acceptableStatusCodes":"200-600","elementInstanceId":"${config.chargebee}","body":"","query":"${steps.ChargebeeGetInputParams.query}","method":"GET","api":"${steps.ChargebeeGetInputParams.url}"}},{"id":244774,"onSuccess":["ChargebeeGetCallAgainHttp"],"onFailure":["ChargebeeGetCallAgainHttp"],"name":"ChargebeeGetGetHttpData","type":"httpRequest","properties":{"acceptableStatusCodes":"200-600","headers":"${steps.ChargebeeGetInputParams.headers}","body":"","query":"${steps.ChargebeeGetInputParams.query}","url":"${steps.ChargebeeGetInputParams.url}","method":"GET"}},{"id":244764,"onSuccess":["ChargebeeGetIsValidUrl"],"onFailure":[],"name":"ChargebeeGetInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244771,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":["ChargebeeGetGetCBData"],"name":"ChargebeeGetIsHttp","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url.startsWith(\"https://\"));"}},{"id":244767,"onSuccess":["ChargebeeGetIsHttp"],"onFailure":["ChargebeeGetError"],"name":"ChargebeeGetIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url !== undefined && steps.ChargebeeGetInputParams.url!== \"\");"}},{"id":244770,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult","type":"script","properties":{"body":"if(steps.ChargebeeGetGetCBData.response.code < 300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetCBData.response.code,\n    data:steps.ChargebeeGetGetCBData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetCBData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetCBData.response!== undefined && steps.ChargebeeGetGetCBData.response.body!== undefined && steps.ChargebeeGetGetCBData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetCBData.response.body.error_code;\n    let cbcode = steps.ChargebeeGetGetCBData.response.code || 404;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_code: cbcode,\n    cb_exit:hardstop\n  });\n}\n\n"}},{"id":244775,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult2","type":"script","properties":{"body":"if(steps.ChargebeeGetGetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetHttpData.response.code,\n    data:steps.ChargebeeGetGetHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetHttpData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetHttpData.response.body!== undefined && steps.ChargebeeGetGetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_code: steps.ChargebeeGetGetHttpData.response.code\n  });\n}\n\n"}}],"triggers":[{"id":27722,"onSuccess":["ChargebeeGetInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59935,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]},{"id":32480,"name":"ChargebeeBulkApi","userId":27893,"accountId":24428,"createdDate":"2020-01-19T16:23:42Z","steps":[{"id":262754,"onSuccess":["bulkparamprocess"],"onFailure":[],"name":"bulkparam","type":"script","properties":{"body":"done(trigger.args);"}},{"id":262755,"onSuccess":["Executebulkbatch"],"onFailure":[],"name":"bulkparamprocess","type":"script","properties":{"body":"let kk = steps.bulkparam.customers;\nlet bulkbodyparam=[];\nfor(var i=0;i<kk.length;i++)\n{\n  if(steps.bulkparam.type === \"activecampaign\"){\n    bulkbodyparam.push(kk[i].customer.id);\n  }else{\n    bulkbodyparam.push(kk[i].id);\n  }\n}\n\nlet apiKey = steps.bulkparam.apiKey;\nlet bulkinputjson={\n  \"url\": \"https://\" + steps.bulkparam.siteName + \".integrations.\" + steps.bulkparam.siteDomain + \"/api/\"+steps.bulkparam.type+\"/subscriptiondetails\",\n  \"apiKey\":apiKey,\n  \"headers\": {\n    \"api_key\":apiKey\n  },\n  \"siteDomain\":steps.bulkparam.siteDomain,\n  \"siteName\":steps.bulkparam.siteName,\n  \"type\":steps.bulkparam.type,\n  \"body\": {\n    \"customerids\": bulkbodyparam\n  }\n};\ndone(bulkinputjson);\n"}},{"id":262756,"onSuccess":[],"onFailure":[],"name":"Executebulkbatch","type":"formula","properties":{"args":"${steps.bulkparamprocess}","formulaId":"31295"}}],"triggers":[{"id":28875,"onSuccess":["bulkparam"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31295,"name":"ChargebeeGet2","userId":27893,"accountId":24428,"createdDate":"2019-11-13T08:28:49Z","steps":[{"id":245386,"onSuccess":["CBDelay"],"onFailure":["Result2"],"name":"CallAgain","type":"filter","properties":{"body":"\nif(steps.InputParams.intervel.length > 0 && steps.InputParams.retryCode[steps.GetHttpData.response.code] !== undefined) {\n  steps.InputParams.delay.query.delay = steps.InputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245387,"onSuccess":["GetHttpData"],"onFailure":[],"name":"CBDelay","type":"httpRequest","properties":{"headers":"${steps.InputParams.delay.headers}","query":"${steps.InputParams.delay.query}","url":"${steps.InputParams.delay.url}","method":"GET"}},{"id":245375,"onSuccess":[],"onFailure":[],"name":"Error","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":245377,"onSuccess":["CallAgain"],"onFailure":[],"name":"GetHttpData","type":"httpRequest","properties":{"acceptableStatusCodes":"200-600","headers":"${steps.InputParams.headers}","body":"${steps.InputParams.body}","query":"${steps.InputParams.query}","method":"GET","url":"${steps.InputParams.url}"}},{"id":245511,"onSuccess":["GetHttpData"],"onFailure":[],"name":"gth","type":"script","properties":{"body":"done(Math.round((new Date().getTime())/1000));"}},{"id":245378,"onSuccess":["IsValidUrl"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    body: body,\n    start: Math.round((new Date().getTime()) / 1000),\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":245379,"onSuccess":["GetHttpData"],"onFailure":[],"name":"IsHttp","type":"filter","properties":{"body":"done(steps.InputParams.url.startsWith(\"https://\"));"}},{"id":245380,"onSuccess":["IsHttp"],"onFailure":["Error"],"name":"IsValidUrl","type":"filter","properties":{"body":"done(steps.InputParams.url !== undefined && steps.InputParams.url!== \"\");"}},{"id":245382,"onSuccess":[],"onFailure":[],"name":"Result2","type":"script","properties":{"body":"if(steps.GetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.GetHttpData.response.body,\n    cb_type: steps.InputParams.type,\n    cb_url: steps.InputParams.url\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.InputParams.hardStop[steps.GetHttpData.response.code] !== undefined;\n  if(steps.GetHttpData.response.body!== undefined && steps.GetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.GetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_status_code: steps.GetHttpData.response.code,\n    cb_request_payload: steps.GetHttpData.request,\n    cb_exit:hardstop\n  });\n}\n\n"}}],"triggers":[{"id":27759,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]},{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.delay.headers}","query":"${steps.ChargebeePostInputParams.delay.query}","url":"${steps.ChargebeePostInputParams.delay.url}","method":"GET"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.headers}","acceptableStatusCodes":"200-600","body":"${steps.ChargebeePostInputParams.body}","query":"${steps.ChargebeePostInputParams.query}","url":"${steps.ChargebeePostInputParams.url}","method":"POST"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59869,"key":"activecampaign","name":"activecampaign","type":"elementInstance","required":true},{"id":59870,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]}