{"id":29318,"name":"testing-ActiveCampaignValidate-Setup","userId":27893,"accountId":24428,"createdDate":"2019-09-03T05:34:30Z","steps":[{"id":214307,"onSuccess":["ConfigParams"],"onFailure":["SendErrorCard"],"name":"ChargebeeConfigParams","type":"httpRequest","properties":{"headers":"${steps.InputParams.input.config.auth}","query":"${steps.InputParams.input.config.query}","method":"GET","url":"${steps.InputParams.input.config.url}"}},{"id":264012,"onSuccess":["gotExecutionStatus"],"onFailure":[],"name":"ChargebeeGetIpaasExecutionStatus","type":"formula","properties":{"args":"${steps.ConfigParams.checkStatusParams}","formulaId":"31257"}},{"id":264008,"onSuccess":["gotTpConfig"],"onFailure":[],"name":"ChargebeeGetTpIntegConf","type":"formula","properties":{"args":"${steps.InputParams.getTpConfig}","formulaId":"31257"}},{"id":264014,"onSuccess":["gotTpConfig_2"],"onFailure":[],"name":"ChargebeeGetUpdatedTpIntegConf","type":"formula","properties":{"args":"${steps.InputParams.getTpConfig}","formulaId":"31257"}},{"id":264016,"onSuccess":["isUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateErrorStatus","type":"formula","properties":{"args":"${steps.UpdateErrorParams}","formulaId":"31258"}},{"id":264010,"onSuccess":["tpConfigUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateTpIntegConf","type":"formula","properties":{"args":"${steps.ThirdPartyConfig}","formulaId":"31258"}},{"id":214308,"onSuccess":["HasError"],"onFailure":[],"name":"CheckStatus","type":"script","properties":{"body":"let configJson = steps.ConfigParams.configJson.config_json;\nlet input = {\n  error : false,\n  done: false,\n  // url: steps.InputParams.input.config.url,\n  // auth: steps.InputParams.input.config.auth,\n  // body: {\n  //   integration_name: steps.InputParams.input.config.query.integration_name\n  // },\n};\n\nlet executionStatus = (steps.ChargebeeGetIpaasExecutionStatus.data.status !== undefined) ? steps.ChargebeeGetIpaasExecutionStatus.data.status : null;\n\ninput.error = true;\ninput.done = true;\n\nif(executionStatus === null) {\n  input.error = true;\n  input.done = true;\n}else if(executionStatus === \"failed\"){\n  input.error = true;\n  input.done = true;\n}else if(executionStatus === \"success\"){\n  input.error = false;\n  input.done = true;\n}else if(executionStatus === \"pending\"){\n  input.error = false;\n  input.done = false;\n}\n\n// if(steps.ExecutionStatus.response.body.status === undefined) {\n//   input.error = true;\n//   input.done = true;\n// }else if(steps.ExecutionStatus.response.body.status === \"failed\"){\n//   input.error = true;\n//   input.done = true;\n// }else if(steps.ExecutionStatus.response.body.status === \"success\"){\n//   input.error = false;\n//   input.done = true;\n  \n//   for(var i=0;i<steps.ExecutionStatus.response.body.stepExecutions.length;i++){\n//     if(steps.ExecutionStatus.response.body.stepExecutions[i][\"stepName\"] ===\"validation\") {\n//       input.result = steps.ExecutionStatus.response.body.stepExecutions[i];\n//       break;\n//     }\n//   }\n  \n// }else if(steps.ExecutionStatus.response.body.status === \"pending\"){\n//   input.error = false;\n//   input.done = false;\n// }\n\n// if(input.error) {\n//   configJson.cloudElements.formula.validate.execution.status = \"FAILED\";\n//   configJson.cloudElements.formula.validate.execution.result = { \n//     error:true,\n//     message:['Integration ERROR-- during data validation']\n//   };\n  \n// }else {\n//   if( input.done){\n//     configJson.cloudElements.formula.validate.execution.status = \"DONE\";\n//   }\n// }\n\ndone(input);"}},{"id":214309,"onSuccess":["HasNoExcecution"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let configJson = steps.ChargebeeGetTpIntegConf.data;\nconfigJson.body = {};\n\n  configJson.body.apiKey=steps.InputParams.input.apiKey;\n  configJson.body.siteName=steps.InputParams.input.siteName;\n  configJson.body.siteDomain=steps.InputParams.input.siteDomain;\n  configJson.body.type=steps.InputParams.input.type;\n  \nlet executionId = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.validate.execution !== undefined ? steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.validate.execution.id : null;\n\nlet checkStatusParams = {\n   headers:{\n      Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n    },\n    query:{\n      execution_id: executionId\n    },\n    url : \"https://\"+steps.InputParams.input.siteName+\".integrations.\"+steps.InputParams.input.siteDomain+\"/api/pipedrive/ipaasexecution\"\n   \n};\n\n\ndone({\n  configJson: configJson,\n  checkStatusParams: checkStatusParams\n});"}},{"id":214310,"onSuccess":["getUpdatedConfig"],"onFailure":[],"name":"delay2s","type":"script","properties":{"body":"let payload = {\n  url: \"https://api.cloud-elements.co.uk/elements/api-v2/createDelay\",\n  headers:{\n    \"authorization\": \"User 0d44SS3tYoGuwakQcpXX3pya/oy0k2duFVqQ6WJMZTg=, Organization 705f11c2b0c933ebde1cf6bc5b26bdf7\",\n    \"Elements-Formula-Instance-Id\": \"961\"\n  }\n};\n\ndone({\n  payload: payload\n});"}},{"id":214311,"onSuccess":["getUpdatedConfig"],"onFailure":[],"name":"delayExecution","type":"httpRequest","properties":{"headers":"${steps.delay2s.payload.headers}","query":"{}","method":"GET","url":"${steps.delay2s.payload.url}"}},{"id":214312,"onSuccess":["getIpaasExecutionStatus"],"onFailure":["getIpaasExecutionStatus"],"name":"ExecutionStatus","type":"request","properties":{"acceptableStatusCodes":"200,404","method":"GET","api":"/formulas/instances/executions/${steps.ConfigParams.config_json.cloudElements.formula.validate.execution.id}"}},{"id":240639,"onSuccess":["CheckStatus"],"onFailure":[],"name":"getIpaasExecutionStatus","type":"httpRequest","properties":{"headers":"${steps.ConfigParams.checkStatusParams.auth}","query":"${steps.ConfigParams.checkStatusParams.query}","url":"${steps.ConfigParams.checkStatusParams.url}","method":"GET"}},{"id":214313,"onSuccess":["getUpdatedConfig"],"onFailure":[],"name":"GetResult","type":"request","properties":{"method":"GET","retryDelay":"200","retryAttempts":"5","api":"/formulas/instances/executions/steps/${steps.CheckStatus.result.id}/values","retry":"true"}},{"id":214314,"onSuccess":["SendLastResult"],"onFailure":["SendErrorCard"],"name":"getUpdatedConfig","type":"httpRequest","properties":{"headers":"${steps.InputParams.input.config.auth}","query":"${steps.InputParams.input.config.query}","method":"GET","url":"${steps.InputParams.input.config.url}"}},{"id":264013,"onSuccess":["CheckStatus"],"onFailure":["SendErrorCard"],"name":"gotExecutionStatus","type":"filter","properties":{"body":"if(steps.ChargebeeGetIpaasExecutionStatus.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264009,"onSuccess":["ConfigParams"],"onFailure":["SendErrorCard"],"name":"gotTpConfig","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264015,"onSuccess":["SendLastResult"],"onFailure":["SendErrorCard"],"name":"gotTpConfig_2","type":"filter","properties":{"body":"if(steps.ChargebeeGetUpdatedTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":214315,"onSuccess":["ChargebeeGetUpdatedTpIntegConf"],"onFailure":["SendProcessCard"],"name":"HasDone","type":"filter","properties":{"body":"done(steps.CheckStatus.done);"}},{"id":214316,"onSuccess":["HasDone"],"onFailure":["UpdateErrorParams"],"name":"HasError","type":"filter","properties":{"body":"done(!steps.CheckStatus.error);"}},{"id":214317,"onSuccess":["isRetry"],"onFailure":["ChargebeeGetIpaasExecutionStatus"],"name":"HasNoExcecution","type":"filter","properties":{"body":"let flag = false;\nlet excecution = steps.ConfigParams.configJson.config_json.cloudElements.formula.validate.execution;\n\nif(excecution === undefined){\n  flag = true;\n}else {\n  if(excecution.status === \"DONE\" || excecution.status === \"FAILED\") {\n     flag = true;\n  }\n  else {\n     flag = false;\n  }\n}\n\ndone(flag);"}},{"id":214318,"onSuccess":["ChargebeeGetTpIntegConf"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'];\nlet siteName = trigger.args.request.query['cb-site-name'];\nlet type = trigger.args.request.query['type'];\nlet siteDomain = trigger.args.request.query['cb-domain'];\nlet retry = trigger.args.request.query['retry'];\nlet password = \"\";\n\nif(retry === undefined || retry ==='false') {\n  retry = false;\n}else{\n  retry = true;\n}\n\n\n  \n \nlet getTpConfig = {\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_configurations/tpmeta\",\n  headers: {\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password),\n    api_key: apiKey\n  },\n  query:{\n    integration_name: type\n  }\n};\n\nlet updateTpIntegConf = {\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n  url: 'https://' + siteName + \".integrations.\" + siteDomain +\"/integrations/update_tp_integ_conf\",\n  headers: {\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password),\n          \"Content-Type\": \"application/json\",\n          \"cache-control\": \"no-cache\"\n  },\n  body: {\n    integration_name: type,\n    site_name: siteName,\n    api_key: apiKey\n  }\n};\n\n\nlet params = {\n  getTpConfig: getTpConfig,\n  updateTpIntegConf: updateTpIntegConf,\n  input: {\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    retry : retry,\n    type: type\n  }\n};\n\ndone(params);"}},{"id":214319,"onSuccess":["StartExcecution"],"onFailure":["ChargebeeGetUpdatedTpIntegConf"],"name":"isRetry","type":"filter","properties":{"body":"if(steps.ConfigParams.configJson.config_json.cloudElements.formula.validate.execution === undefined){\n  done(true);\n}else{\n  done(steps.InputParams.input.retry);\n}"}},{"id":264017,"onSuccess":["SendErrorCard"],"onFailure":["SendErrorCard"],"name":"isUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateErrorStatus.cb_code === 200){\n  done(true);\n}\n\ndone(false);"}},{"id":214320,"onSuccess":[],"onFailure":[],"name":"MakeCard","type":"script","properties":{"body":"let formula=steps.ConfigParams.config_json.cloudElements.formula;\n\nlet resultcard = JSON.parse(steps.GetResult.response.body[0].value);\nlet s3loglink= steps.UpdatedThirdPartyConfig.response.body.third_party_configuration.config_json.cloudElements.formula.validate.logs;\n\nif(s3loglink===undefined){\ns3loglink=\"\";\n}\n\nlet cardJson = {\n    cards: [{\n        id: \"check2\"\n    }]\n};\n\nlet proceed = {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate/proceed\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":  formula.activeCampaignValidateProceedSetup.instance\n                }\n            }\n        }\n    };\n    \nlet retry = {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":formula.activeCampaignValidateSetup.instance\n                },\n                \"input\": {\n                    \"type\": \"activecampaign\",\n                    \"siteDomain\": \"predev3.in\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    };\n\nif (resultcard.cardStatus === \"VALIDATION-FAILED\") {\n    let card = resultcard.cardResult.card;\n    let csvButton =  {      \n        \"display\": \"Download CSV\",       \n        \"icon\": \"CLOUD_DOWNLOAD\",         \n        \"id\": \"download\",       \n        \"fileId\": s3loglink,           \n        \"type\": \"DOWNLOAD_FILE\"         \n             };\n   \n    let confirmationButton = {\n        id: \"confirmation\",\n        display: \"Ignore errors\",\n        icon: \"CLOSE\",\n        type: \"POP_UP\",\n        popUp: {\n            type: \"SIMPLE\",\n            title: \"Are you sure you want to ignore the errors?\",\n            submitButton: \"Yes, go ahead\",\n            cancelButton: \"Dismiss\",\n            usecase: \"DANGER\",\n            description: \"Some of your subscription data may not be synced with ActiveCampaign.\",\n            apiEndPoint: {\n                apiUrl: \"https://staging.cloud-elements.com/elements/api-v2/validate/final\",\n                type: \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":formula.activeCampaignValidateProceedFinal.instance\n                },\n                input:{\n                 apiKey: steps.InputParams.input.apiKey,\n                 siteName: steps.InputParams.input.siteName,\n                 siteDomain: steps.InputParams.input.siteDomain,\n                 type: steps.InputParams.input.type\n                 \n                }\n            }\n        }\n    };\n    card.buttons = [csvButton,confirmationButton];\n    cardJson.cards[0].card = card;\n\n} else {\n   cardJson= resultcard.cardResult;\n}\n\ncardJson.proceed = proceed ;\ncardJson.retry = retry ;\n\ndone({\n  statusCode: 200,\n  result: cardJson\n})\n"}},{"id":214321,"onSuccess":[],"onFailure":[],"name":"SendErrorCard","type":"script","properties":{"body":"let card = {\n    \"cards\": [{\n        \"id\": \"check2\",\n        \"card\": {\n                \"type\": \"ACTION\",\n                \"heading\": \"ERROR\",\n                \"icon\": \"ERROR\",\n                \"subHeading\": \"An issue was encountered due to which the validtion did not succeed. Please try after sometime.\"\n            }\n    }],\n    \"proceed\": {\n    \"buttonLook\": \"FILLED\",\n    \"display\": \"Proceed\",\n    \"icon\": \"ARROW\",\n    \"id\": \"proceed\",\n    \"request\": {\n      \"apiEndPoint\": {\n        \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate/proceed\",\n        \"headers\": {\n          \"Elements-Formula-Instance-Id\": \"376920\"\n        },\n        \"type\": \"GET\"\n      },\n      \"type\": \"ON_CLICK_SEND_INPUT\"\n    },\n    \"type\": \"DIRECT_LINK\"\n  },\n  \"retry\": {\n    \"buttonLook\": \"FILLED\",\n    \"display\": \"Retry Data Validation\",\n    \"icon\": \"ARROW\",\n    \"id\": \"retry\",\n    \"request\": {\n      \"apiEndPoint\": {\n        \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate\",\n        \"headers\": {\n          \"Elements-Formula-Instance-Id\": info.formulaInstanceId\n        },\n        \"input\": {\n          \"retry\": \"true\",\n          \"type\": \"activecampaign\"\n        },\n        \"type\": \"GET\"\n      },\n      \"type\": \"ON_CLICK_DEFAULT_ACTION\"\n    },\n    \"type\": \"DIRECT_LINK\"\n  }\n};\n\ndone({\n  statusCode: 200,\n  result: card\n})"}},{"id":214322,"onSuccess":["SendErrorCard"],"onFailure":[],"name":"sendErrorMailParams","type":"script","properties":{"body":"let payload = {\n  content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":214323,"onSuccess":[],"onFailure":[],"name":"SendLastResult","type":"script","properties":{"body":"let formula=steps.ChargebeeGetUpdatedTpIntegConf.data.config_json.cloudElements.formula;\n\nlet excecution = steps.ChargebeeGetUpdatedTpIntegConf.data.config_json.cloudElements.formula.validate.execution;\n\nif(excecution.status !== \"DONE\"){\n  let card = {\n      \"cards\": [{\n        \"id\": \"check2\",\n        \"card\": {\n                \"type\": \"ACTION\",\n                \"heading\": \"ERROR\",\n                \"icon\": \"ERROR\",\n                \"subHeading\": \"An issue was encountered due to which the validtion did not succeed. Please try after sometime.\"\n            }\n      }],\n      \"proceed\": {\n      \"buttonLook\": \"FILLED\",\n      \"display\": \"Proceed\",\n      \"icon\": \"ARROW\",\n      \"id\": \"proceed\",\n      \"request\": {\n        \"apiEndPoint\": {\n          \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate/proceed\",\n          \"headers\": {\n            \"Elements-Formula-Instance-Id\": \"399539\"\n          },\n          \"type\": \"GET\"\n        },\n        \"type\": \"ON_CLICK_SEND_INPUT\"\n      },\n      \"type\": \"DIRECT_LINK\"\n    },\n    \"retry\": {\n      \"buttonLook\": \"FILLED\",\n      \"display\": \"Retry Data Validation\",\n      \"icon\": \"ARROW\",\n      \"id\": \"retry\",\n      \"request\": {\n        \"apiEndPoint\": {\n          \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate\",\n          \"headers\": {\n            \"Elements-Formula-Instance-Id\": \"399538\"\n          },\n          \"input\": {\n            \"retry\": \"true\",\n            \"type\": \"activecampaign\"\n          },\n          \"type\": \"GET\"\n        },\n        \"type\": \"ON_CLICK_DEFAULT_ACTION\"\n      },\n      \"type\": \"DIRECT_LINK\"\n    }\n  };\n\n  done({\n    statusCode: 200,\n    result: card\n  });\n}\n\nlet s3loglink=steps.ChargebeeGetUpdatedTpIntegConf.data.config_json.cloudElements.formula.validate.logs;\n\nlet cardJson = {\n    cards: [{\n        id: \"check2\"\n    }]\n}\n\nif (excecution.result.error === true) {\n  \n    let card = {\n          \"type\": \"ACTION\",\n          \"heading\": \"We found the following errors during data validation\",\n          \"listContent\": excecution.result.message,\n          \"icon\": \"WARNING\",\n        };\n        \n    let csvButton =  {      \n        \"display\": \"Download CSV\",       \n        \"icon\": \"CLOUD_DOWNLOAD\",         \n        \"id\": \"download\",       \n        \"fileId\": s3loglink,           \n        \"type\": \"DOWNLOAD_FILE\"         \n             };\n    \n    let confirmationButton = {\n        id: \"confirmation\",\n        display: \"Ignore errors\",\n        icon: \"CLOSE\",\n        type: \"POP_UP\",\n        popUp: {\n            type: \"SIMPLE\",\n            title: \"Are you sure you want to ignore the errors?\",\n            submitButton: \"Yes, go ahead\",\n            cancelButton: \"Dismiss\",\n            usecase: \"DANGER\",\n            description: \"Some of your subscription data may not be synced with ActiveCampaign.\",\n            apiEndPoint: {\n                apiUrl: \"https://staging.cloud-elements.com/elements/api-v2/validate/final\",\n                type: \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\": formula.activeCampaignValidateProceedFinal.instance\n                },\n                \n                input:{\n                 apiKey: steps.InputParams.input.apiKey,\n                 siteName: steps.InputParams.input.siteName,\n                 siteDomain: steps.InputParams.input.siteDomain,\n                 type: steps.InputParams.input.type\n                 \n                }\n            }\n        }\n    };\n    card.buttons = [csvButton,confirmationButton];\n    cardJson.cards[0].card = card;\n\n} else {\n   cardJson= {\n      \"cards\": [\n        {\n         \"id\" : \"check2\",\n         \"card\": {\n            \"type\" : \"ACTION\",\n            \"heading\" : \"No Error found  during data validation\",\n            \"icon\" : \"SUCCESS\"\n          },\n         \"isCardDone\":\"true\"\n        }\n      ]\n    };\n}\ncardJson.proceed =  {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate/proceed\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":  formula.activeCampaignValidateProceedSetup.instance\n                }\n            }\n        }\n    };\n    cardJson.retry =  {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":formula.activeCampaignValidateSetup.instance\n                },\n                \"input\": {\n                    \"type\": \"activecampaign\",\n                    \"siteDomain\": \"chargebee-labs.com\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    };\n\ndone({\n  statusCode: 200,\n  result: cardJson\n})"}},{"id":214324,"onSuccess":[],"onFailure":[],"name":"SendProcessCard","type":"script","properties":{"body":"let formula=steps.ConfigParams.configJson.config_json.cloudElements.formula;\n\nlet card = {\n    \"cards\": [{\n        \"id\": \"check2\",\n        \"showRetry\":\"false\",\n        \"card\": {\n            \"type\": \"PROCESSING\",\n            \"processingText\": \"Validating your Chargebee data\",\n            \"listHeading\": \"We'll verify if:\",\n            \"listContent\": [\n                \"Email address exists for all customers in Chargebee\"\n            ],\n            \"request\": {\n                \"type\": \"DOC_READY_GET_CARD\",\n                \"apiEndPoint\": {\n                    \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate\",\n                    \"type\": \"GET\",\n                    \"headers\": {\n                        \"Elements-Formula-Instance-Id\": formula.activeCampaignValidateSetup.instance\n                    },\n                    \"input\": {\n                        \"type\": \"activecampaign\"\n                      \n                    }\n                }\n            }\n        }\n    }],\n    \"proceed\": {\n        \"id\": \"proceed\",\n        \"display\": \"Proceed\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_SEND_INPUT\",\n            \"apiEndPoint\": {\n                \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate/proceed\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":  formula.activeCampaignValidateProceedSetup.instance\n                }\n            }\n        }\n    },\n    \"retry\": {\n        \"id\": \"retry\",\n        \"display\": \"Retry Data Validation\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"DIRECT_LINK\",\n        \"request\": {\n            \"type\": \"ON_CLICK_DEFAULT_ACTION\",\n            \"apiEndPoint\": {\n                \"apiUrl\": \"https://staging.cloud-elements.com/elements/api-v2/validate\",\n                \"type\": \"GET\",\n                \"headers\": {\n                    \"Elements-Formula-Instance-Id\":formula.activeCampaignValidateSetup.instance\n                },\n                \"input\": {\n                    \"type\": \"activecampaign\",\n                    \"retry\": \"true\"\n                }\n            }\n        }\n    }\n};\n\ndone({\n statusCode: 200,\n result: card\n})"}},{"id":214325,"onSuccess":["ThirdPartyConfig"],"onFailure":[],"name":"StartExcecution","type":"request","properties":{"body":"${steps.ConfigParams.configJson.body}","method":"POST","retryAttempts":"2","api":"/formulas/instances/${steps.ConfigParams.configJson.config_json.cloudElements.formula.validate.instance}/executions"}},{"id":214326,"onSuccess":["ChargebeePostUpdateTpIntegConf"],"onFailure":[],"name":"ThirdPartyConfig","type":"script","properties":{"body":"let configJson = steps.ConfigParams.configJson.config_json;\nconfigJson.cloudElements.formula.validate.execution = {\n  status:\"STARTED\",\n  id:steps.StartExcecution.response.body[0].id\n};\n\n// let input = {\n//   url: steps.InputParams.input.config.url,\n//   auth: steps.InputParams.input.config.auth,\n//   body: {\n//     integration_name: steps.InputParams.input.config.query.integration_name,\n//     \"config_json\": JSON.stringify(configJson)\n//   },\n// };\n\n// done(input)\n\n\nlet input = steps.InputParams.updateTpIntegConf;\ninput.body.config_json = configJson;\n\ndone(input);"}},{"id":264011,"onSuccess":["SendProcessCard"],"onFailure":["SendErrorCard"],"name":"tpConfigUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":214327,"onSuccess":["SendProcessCard"],"onFailure":["sendErrorMailParams"],"name":"UpdateConfig","type":"httpRequest","properties":{"headers":"${steps.ThirdPartyConfig.auth}","body":"","query":"${steps.ThirdPartyConfig.body}","method":"POST","url":"${steps.ThirdPartyConfig.url}"}},{"id":214328,"onSuccess":["MakeCard"],"onFailure":["sendErrorMailParams"],"name":"UpdatedThirdPartyConfig","type":"httpRequest","properties":{"headers":"${steps.UpdateStatus.auth}","query":"${steps.UpdateStatus.body}","method":"POST","url":"${steps.UpdateStatus.url}"}},{"id":214329,"onSuccess":["ChargebeePostUpdateErrorStatus"],"onFailure":[],"name":"UpdateErrorParams","type":"script","properties":{"body":"let apiKey=steps.InputParams.input.apiKey;\nlet siteName=steps.InputParams.input.siteName;\nlet siteDomain=steps.InputParams.input.siteDomain;\nlet type=steps.InputParams.input.type;\n  \nlet configJson = steps.ConfigParams.configJson.config_json;\n\nconfigJson.cloudElements.formula.validate.execution.status = \"FAILED\";\n\n\nlet input = steps.InputParams.updateTpIntegConf;\ninput.body.config_json = configJson;\n\n// let body= {\n//   update:{\n//     integration_name: type,\n//     site_name : siteName,\n//     api_key : apiKey,\n//     config_json: configJson\n//   }\n  // };\n  \n  // done(body);\n  \n  \n  done(input);"}},{"id":214330,"onSuccess":["sendErrorMailParams"],"onFailure":[],"name":"UpdateErrorStatus","type":"httpRequest","properties":{"headers":"${steps.InputParams.input.config.headers}","body":"${steps.UpdateErrorParams.update}","method":"POST","url":"${steps.InputParams.input.config.updateUrl}"}},{"id":214331,"onSuccess":["UpdatedThirdPartyConfig"],"onFailure":["sendErrorMailParams"],"name":"UpdateStatus","type":"script","properties":{"body":"let resultcard = JSON.parse(steps.GetResult.response.body[0].value);\nlet input = steps.CheckStatus;\nlet configJson =JSON.parse(input.body.config_json);\nlet loglink=steps.getUpdatedConfig.response.body.third_party_configuration.config_json.cloudElements.formula.validate.logs;\n\nif (resultcard.cardStatus === \"VALIDATION-FAILED\") {\n  configJson.cloudElements.formula.validate.execution.result = {\n    error:true,\n    message: resultcard.cardResult.card.listContent\n  };\n  configJson.cloudElements.formula.validate.logs=loglink;\n  \n}else {\n  \n  configJson.cloudElements.formula.validate.execution.result = {\n    error:false,\n    message: ['No Error found  during data validation']\n  };\n   configJson.cloudElements.formula.validate.logs=loglink;\n}\n\ninput.body.config_json = JSON.stringify(configJson);\n\ndone(input);"}}],"triggers":[{"id":25953,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31257,"name":"ChargebeeGet","userId":27893,"accountId":24428,"createdDate":"2019-11-12T11:30:28Z","steps":[{"id":245638,"onSuccess":["ChargebeeGetCBDelay2"],"onFailure":["ChargebeeGetResult"],"name":"ChargebeeGetCallAgainCB","type":"filter","properties":{"body":"//done(false); //Since delay causing 30 second limit issues\n\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetCBData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245636,"onSuccess":["ChargebeeGetCBDelay"],"onFailure":["ChargebeeGetResult2"],"name":"ChargebeeGetCallAgainHttp","type":"filter","properties":{"body":"done(false); //Since delay causing 30 second limit issues\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetHttpData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245637,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":[],"name":"ChargebeeGetCBDelay","type":"httpRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.delay.headers}","query":"${steps.ChargebeeGetInputParams.delay.query}","url":"${steps.ChargebeeGetInputParams.delay.url}","method":"GET"}},{"id":245639,"onSuccess":["ChargebeeGetGetCBData"],"onFailure":[],"name":"ChargebeeGetCBDelay2","type":"httpRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.delay.headers}","query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":244768,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244769,"onSuccess":["ChargebeeGetCallAgainCB"],"onFailure":["ChargebeeGetCallAgainCB"],"name":"ChargebeeGetGetCBData","type":"elementRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.headers}","acceptableStatusCodes":"200-600","elementInstanceId":"${config.chargebee}","body":"","query":"${steps.ChargebeeGetInputParams.query}","method":"GET","api":"${steps.ChargebeeGetInputParams.url}"}},{"id":244774,"onSuccess":["ChargebeeGetCallAgainHttp"],"onFailure":["ChargebeeGetCallAgainHttp"],"name":"ChargebeeGetGetHttpData","type":"httpRequest","properties":{"acceptableStatusCodes":"200-600","headers":"${steps.ChargebeeGetInputParams.headers}","body":"","query":"${steps.ChargebeeGetInputParams.query}","url":"${steps.ChargebeeGetInputParams.url}","method":"GET"}},{"id":244764,"onSuccess":["ChargebeeGetIsValidUrl"],"onFailure":[],"name":"ChargebeeGetInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244771,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":["ChargebeeGetGetCBData"],"name":"ChargebeeGetIsHttp","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url.startsWith(\"https://\"));"}},{"id":244767,"onSuccess":["ChargebeeGetIsHttp"],"onFailure":["ChargebeeGetError"],"name":"ChargebeeGetIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url !== undefined && steps.ChargebeeGetInputParams.url!== \"\");"}},{"id":244770,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult","type":"script","properties":{"body":"if(steps.ChargebeeGetGetCBData.response.code < 300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetCBData.response.code,\n    data:steps.ChargebeeGetGetCBData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetCBData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetCBData.response!== undefined && steps.ChargebeeGetGetCBData.response.body!== undefined && steps.ChargebeeGetGetCBData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetCBData.response.body.error_code;\n    let cbcode = steps.ChargebeeGetGetCBData.response.code || 404;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_code: cbcode,\n    cb_exit:hardstop\n  });\n}\n\n"}},{"id":244775,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult2","type":"script","properties":{"body":"if(steps.ChargebeeGetGetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetHttpData.response.code,\n    data:steps.ChargebeeGetGetHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetHttpData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetHttpData.response.body!== undefined && steps.ChargebeeGetGetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_code: steps.ChargebeeGetGetHttpData.response.code\n  });\n}\n\n"}}],"triggers":[{"id":27722,"onSuccess":["ChargebeeGetInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59935,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]},{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.delay.headers}","query":"${steps.ChargebeePostInputParams.delay.query}","url":"${steps.ChargebeePostInputParams.delay.url}","method":"GET"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.headers}","acceptableStatusCodes":"200-600","body":"${steps.ChargebeePostInputParams.body}","query":"${steps.ChargebeePostInputParams.query}","url":"${steps.ChargebeePostInputParams.url}","method":"POST"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"method":"GET","uri":"/validate","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /validate","configuration":[]}