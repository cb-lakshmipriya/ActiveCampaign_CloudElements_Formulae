{"id":30919,"name":"testing-ActiveCampaignCreate-Setup","userId":27893,"accountId":24428,"createdDate":"2019-10-25T13:33:48Z","steps":[{"id":240116,"onSuccess":["constructConfig"],"onFailure":["errAuth"],"name":"AccountValidationCheck","type":"filter","properties":{"body":"let account=steps.InputParams.query.account;\n\ndone(account.split('//')[1] !==undefined && account.split('//')[1].split('.')[0] !==undefined);\n"}},{"id":240117,"onSuccess":["GetThirdPartyElement"],"onFailure":[],"name":"CharbeeElement","type":"script","properties":{"body":"done({\"id\":steps.GetChargebeeElement.response.body[0].id});"}},{"id":240118,"onSuccess":["GetThirdPartyElement"],"onFailure":[],"name":"CharbeeElementNew","type":"script","properties":{"body":"done({\"id\":steps.CreateChargebeeInstance.response.body.id});"}},{"id":264193,"onSuccess":["IsTpIntegConfFetched"],"onFailure":[],"name":"ChargebeeGetTpIntegConf","type":"formula","properties":{"args":"${steps.ChargebeeParams.getTpConfig}","formulaId":"31257"}},{"id":267007,"onSuccess":["CharbeeElement"],"onFailure":["CreateChargebeeInstance"],"name":"chargebeeInstanceFound","type":"filter","properties":{"body":"if(steps.GetChargebeeElement.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":240119,"onSuccess":["ChargebeeGetTpIntegConf"],"onFailure":[],"name":"ChargebeeParams","type":"script","properties":{"body":"let apiKey = steps.InputParams.query['cb-api-key'];\nlet siteName = steps.InputParams.query['cb-site-name'];\nlet siteDomain = steps.InputParams.query['cb-domain'];\nlet type = steps.InputParams.query.type;\nlet password = \"\";\n\n// let body ={\n//     config :{\n//       url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n//       Updateurl: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"cache-control\": \"no-cache\"\n//         },\n//       auth:{\n//         Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n//       },\n//       query:{\n//         integration_name: type\n//       }\n//     }\n// };\n\n\nlet getTpConfig = {\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_configurations/tpmeta\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    integration_name: type\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n  password: password\n};\n\nlet updateTpConfig = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n        \"Content-Type\": \"application/json\",\n        \"cache-control\": \"no-cache\"\n        },\n  body:{\n     integration_name :type,\n     site_name :siteName,\n     api_key :apiKey,\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type,\n  password: password\n};\n\ndone({\n  getTpConfig: getTpConfig,\n  updateTpConfig: updateTpConfig\n});\n\n"}},{"id":264195,"onSuccess":["isTpIntegConfUpdated"],"onFailure":[],"name":"ChargebeePostUpdateTpIntegConf","type":"formula","properties":{"args":"${steps.UpdateAuthFlagParams}","formulaId":"31258"}},{"id":264197,"onSuccess":["isTpConfigUpdated_2"],"onFailure":[],"name":"ChargebeePostUpdateTpIntegConf_2","type":"formula","properties":{"args":"${steps.ThirdPartyConfig}","formulaId":"31258"}},{"id":240120,"onSuccess":["updateApiKey"],"onFailure":[],"name":"constructConfig","type":"script","properties":{"body":"let config=steps.getConfiguration.response.body;\nlet account=steps.InputParams.query.account;\n\naccount=account.split('//')[1].split('.')[0];//to get the account name from the base url\n\nconfig.configuration['Api-Token']=steps.InputParams.query.apiToken;\nconfig.configuration.account=account;\n\n\nlet input={\n  body:config\n};\n\ndone(input);"}},{"id":240121,"onSuccess":["UpdateNewKey"],"onFailure":[],"name":"constructElementConfig","type":"script","properties":{"body":"let config=steps.getElementConfiguration.response.body;\nlet account=steps.InputParams.query.text;\n\naccount=account.split('//')[1].split('.')[0];//to get the account name from the base url\n\nconfig.configuration['Api-Token']=steps.InputParams.query.password;\nconfig.configuration.account=account;\n\n\nlet input={\n  body:config\n};\n\ndone(input);\n"}},{"id":240122,"onSuccess":["CharbeeElementNew"],"onFailure":["Error2"],"name":"CreateChargebeeInstance","type":"request","properties":{"body":"${steps.UpdateParams.chargebee.body}","method":"POST","api":"/elements/${steps.UpdateParams.chargebee.elementId}/instances"}},{"id":240123,"onSuccess":["LoopOverFormulaList"],"onFailure":["LoopOverFormulaList"],"name":"CreateFormulaInstances","type":"request","properties":{"body":"${steps.isInstancePresent.input.body}","method":"POST","api":"/formulas/${steps.LoopOverFormulaList.entry}/instances"}},{"id":240124,"onSuccess":["ThirdPartyElementNew"],"onFailure":["Error3"],"name":"CreateThirdPartyInstance","type":"request","properties":{"method":"POST","body":"${steps.UpdateParams.thirdParty.body}","api":"/elements/${steps.UpdateParams.thirdParty.elementId}/instances"}},{"id":240125,"onSuccess":["FormulaIdList"],"onFailure":[],"name":"Element","type":"script","properties":{"body":"let chargebeeInstanceId = 0;\nif (steps.CharbeeElement !== undefined) {\n  chargebeeInstanceId = steps.CharbeeElement.id;\n}\n\nif (steps.CharbeeElementNew !== undefined) {\n  chargebeeInstanceId = steps.CharbeeElementNew.id;\n}\nlet thirdPartyInstanceId = 0;\nif (steps.ThirdPartyElement !== undefined) {\n  thirdPartyInstanceId = steps.ThirdPartyElement.id;\n}\nif (steps.ThirdPartyElementNew !== undefined) {\n  thirdPartyInstanceId = steps.ThirdPartyElementNew.id;\n}\n\ndone({\n  chargebee:chargebeeInstanceId,\n  thirdParty:thirdPartyInstanceId,\n  formulaValidate : {\n     active: true,\n      configuration: {\n        chargebee: chargebeeInstanceId\n      },\n      name: steps.InputParams.input.siteName + \"-validate\"\n  },\n  formulaMapping : {\n     active: true,\n      configuration: {\n        activecampaign: thirdPartyInstanceId\n      },\n      name: steps.InputParams.input.siteName + \"-mapping\"\n  },\n  formulaMappingProceed : {\n     active: true,\n      configuration: {\n        activecampaign: thirdPartyInstanceId\n      },\n      name: steps.InputParams.input.siteName + \"-mappingProceed\"\n  },\n  formulaSyncSetup : {\n     active: true,\n      name: steps.InputParams.input.siteName + \"-syncSetup\"\n  },\n  formulaSync : {\n     active: true,\n      configuration: {\n        chargebee: chargebeeInstanceId,\n        activecampaign: thirdPartyInstanceId\n      },\n      name: steps.InputParams.input.siteName + \"-sync\"\n  }\n \n  \n});\n\n"}},{"id":240126,"onSuccess":[],"onFailure":[],"name":"errAuth","type":"script","properties":{"body":"let err = {\n  \"status\":\"error\",\n};\nerr[steps.GetThirdPartyConfig.response.body.errorInput] = 'Authentication Failed';\n\ndone({\n  statusCode: 200,\n  result: err\n});"}},{"id":240127,"onSuccess":[],"onFailure":[],"name":"Error1","type":"script","properties":{"body":"done({\n  statusCode: 200,\n  result: {\n    \"status\":\"error\",\n    \"checkbox1\":'Bad Request'\n  }\n});"}},{"id":240128,"onSuccess":[],"onFailure":[],"name":"Error2","type":"script","properties":{"body":"let err = {\n  \"status\":\"error\",\n};\nerr[steps.GetThirdPartyConfig.response.body.errorInput] = 'Authentication Failed';\n\ndone({\n  statusCode: 200,\n  result: err\n});"}},{"id":240129,"onSuccess":[],"onFailure":[],"name":"Error3","type":"script","properties":{"body":"let statusCode = steps.CreateThirdPartyInstance.response.code;\nlet err;\n\nif(statusCode === 403){\n\n  err = {\n  \"status\": \"error\",\n  \"apiToken\": \"Authentication Failed\"\n};\n}else{\n  \n    err = {\n  \"status\": \"error\",\n  \"account\": \"Authentication Failed\"\n};\n}\n\n\ndone({\n  statusCode: 200,\n  result: err\n});"}},{"id":240130,"onSuccess":[],"onFailure":[],"name":"Error4","type":"script","properties":{"body":"let err = {\n  \"status\":\"error\"\n}\nerr[steps.GetThirdPartyConfig.response.body.errorInput] = 'Config Update Failed';\n\ndone({\n  statusCode: 200,\n  result: err\n});"}},{"id":240131,"onSuccess":["LoopOverFormulaList"],"onFailure":[],"name":"FormulaIdList","type":"script","properties":{"body":"let formulaValidate=steps.InputParams.input.formulaValidate;\nlet formulaMapping=steps.InputParams.input.formulaMapping;\nlet formulaMappingProceed=steps.InputParams.input.formulaMappingProceed;\nlet formulaSync=steps.InputParams.input.formulaSync;\n\nlet formulaList=[formulaValidate,formulaMapping,formulaMappingProceed,formulaSync];\n\ndone({formulaList:formulaList});\n"}},{"id":240132,"onSuccess":["chargebeeInstanceFound"],"onFailure":["chargebeeInstanceFound"],"name":"GetChargebeeElement","type":"request","properties":{"query":"${steps.UpdateParams.chargebee.searchParam}","method":"GET","acceptableStatusCodes":"200,404","api":"/instances"}},{"id":240133,"onSuccess":["getElementInstance"],"onFailure":[],"name":"getConfig","type":"httpRequest","properties":{"query":"${steps.ChargebeeParams.config.query}","method":"GET","headers":"${steps.ChargebeeParams.config.auth}","url":"${steps.ChargebeeParams.config.url}"}},{"id":240134,"onSuccess":["AccountValidationCheck"],"onFailure":[],"name":"getConfiguration","type":"request","properties":{"method":"GET","api":"/instances/${steps.ThirdPartyElement.id}"}},{"id":240135,"onSuccess":["ValidateAccount"],"onFailure":[],"name":"getElementConfiguration","type":"request","properties":{"method":"GET","api":"/instances/${steps.getElementInstance.instance}"}},{"id":240136,"onSuccess":["getElementConfiguration"],"onFailure":[],"name":"getElementInstance","type":"script","properties":{"body":"let instance = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.thirdParty.instance;\n\ndone({instance : instance});\n\n"}},{"id":240137,"onSuccess":["isInstancePresent"],"onFailure":[],"name":"getInstances","type":"request","properties":{"method":"GET","api":"/formulas/${steps.LoopOverFormulaList.entry}/instances"}},{"id":240138,"onSuccess":["isReauthenticate"],"onFailure":["Error1"],"name":"GetThirdPartyConfig","type":"request","properties":{"query":"${steps.InputParams.query}","method":"GET","headers":"${steps.InputParams.createHeaders}","api":"${steps.InputParams.createURL}"}},{"id":240139,"onSuccess":["thirdPartyInstanceFound"],"onFailure":["thirdPartyInstanceFound"],"name":"GetThirdPartyElement","type":"request","properties":{"query":"${steps.UpdateParams.thirdParty.searchParam}","method":"GET","acceptableStatusCodes":"200,404","api":"/instances"}},{"id":240140,"onSuccess":["SendError"],"onFailure":["HasInput"],"name":"HasError","type":"filter","properties":{"body":"if(steps.GetThirdPartyConfig.response.body.cardStatus ===\"CREATE-INSTANCE-FAILED\"){\n  done(true);\n}else {\n  done(false);\n}"}},{"id":240141,"onSuccess":["UpdateParams"],"onFailure":["Error1"],"name":"HasInput","type":"filter","properties":{"body":"if(steps.GetThirdPartyConfig.response.body.cardStatus ===\"CREATE-INSTANCE-SUCCESS\"){\n  done(true);\n}else {\n  done(false);\n}"}},{"id":240142,"onSuccess":["GetThirdPartyConfig"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['apiKey'];\nlet siteName = trigger.args.request.query['siteName'];\nlet type = trigger.args.request.query['type'];\nlet chargebeeElement = trigger.args.request.query['chargebeeElement'];\nlet thirdPartyElement = trigger.args.request.query['thirdPartyElement'];\nlet formulaConnect = trigger.args.request.query['formulaConnect'];\nlet formulaCreate = trigger.args.request.query['formulaCreate'];\nlet siteDomain = trigger.args.request.query['siteDomain'];\nlet formulaValidate = trigger.args.request.query['formulaValidate'];\nlet formulaMapping =  trigger.args.request.query['formulaMapping'];\nlet formulaMappingProceed =  trigger.args.request.query['formulaMappingProceed'];\nlet formulaSync =  trigger.args.request.query['formulaSync'];\n\nlet activeCampaignCreateSetup = trigger.args.request.query['activeCampaignCreateSetup'];\nlet activeCampaignValidateSetup =  trigger.args.request.query['activeCampaignValidateSetup'];\nlet activeCampaignValidateProceedSetup =  trigger.args.request.query['activeCampaignValidateProceedSetup'];\nlet activeCampaignValidateProceedFinal =  trigger.args.request.query['activeCampaignValidateProceedFinal'];\nlet activeCampaignMappingSetup =  trigger.args.request.query['activeCampaignMappingSetup'];\nlet activeCampaignMappingProceedSetup =  trigger.args.request.query['activeCampaignMappingProceedSetup'];\nlet activeCampaignInitialSyncRunSetup =  trigger.args.request.query['activeCampaignInitialSyncRunSetup'];\nlet ActiveCampaignProcessingCardSetup =  trigger.args.request.query['ActiveCampaignProcessingCardSetup'];\nlet ActiveCampaignSyncRunSetup =  trigger.args.request.query['ActiveCampaignSyncRunSetup'];\nlet ActiveCampaignUnlinkSetup =  trigger.args.request.query['ActiveCampaignUnlinkSetup'];\n\n\nlet params = {\n  input: {\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    type: type,\n    chargebeeElement: chargebeeElement,\n    thirdPartyElement: thirdPartyElement,\n    formulaConnect: formulaConnect,\n    formulaCreate:formulaCreate,\n    formulaValidate:formulaValidate,\n    formulaMapping:formulaMapping,\n    formulaMappingProceed:formulaMappingProceed,\n    formulaSync:formulaSync,\n    activeCampaignCreateSetup:activeCampaignCreateSetup,\n    activeCampaignValidateSetup:activeCampaignValidateSetup,\n    activeCampaignValidateProceedSetup:activeCampaignValidateProceedSetup,\n    activeCampaignValidateProceedFinal:activeCampaignValidateProceedFinal,\n    activeCampaignMappingSetup:activeCampaignMappingSetup,\n    activeCampaignMappingProceedSetup:activeCampaignMappingProceedSetup,\n    activeCampaignInitialSyncRunSetup:activeCampaignInitialSyncRunSetup,\n    ActiveCampaignProcessingCardSetup:ActiveCampaignProcessingCardSetup,\n    ActiveCampaignSyncRunSetup:ActiveCampaignSyncRunSetup,\n    ActiveCampaignUnlinkSetup:ActiveCampaignUnlinkSetup\n  }\n};\n\nparams.createURL = \"/\" + params.input.type + \"/instance\";\nparams.createHeaders = {\n  \"Elements-Formula-Instance-Id\": params.input.formulaCreate\n};\nparams.query =  trigger.args.request.query;\n\n\ndone(params);"}},{"id":240143,"onSuccess":["CreateFormulaInstances"],"onFailure":["LoopOverFormulaList"],"name":"InstanceCreatedOrNot","type":"filter","properties":{"body":"done(steps.isInstancePresent.isCreated);"}},{"id":240144,"onSuccess":["InstanceCreatedOrNot"],"onFailure":[],"name":"isInstancePresent","type":"script","properties":{"body":"let instances=steps.getInstances.response.body;\nlet siteName=steps.InputParams.input.siteName;\nlet instanceNames=[siteName+\"-validate\",siteName+\"-mapping\",siteName+\"-mappingProceed\",siteName+\"-sync\",siteName+\"-syncSetup\",siteName+\"-listExist\"];\n\nlet bodyParam=steps.Element;\nlet param=[bodyParam.formulaValidate,bodyParam.formulaMapping,bodyParam.formulaMappingProceed,bodyParam.formulaSync,bodyParam.formulaSyncSetup,bodyParam.ActiveCampaignCheckListExist];\n\nlet createdInstances;\n\nfor(var i=0;i<instances.length;++i){\n  if(instances[i].name === instanceNames[steps.LoopOverFormulaList.index]){\n    break;\n  }\n}\n\nif(steps.isInstancePresent===undefined){\n  createdInstances=[];\n}\nelse{\n  createdInstances=steps.isInstancePresent.createdInstances;\n}\nif(steps.CreateFormulaInstances !==undefined && steps.CreateFormulaInstances.response.body.id !==undefined){\nif(steps.CreateFormulaInstances.response.body.name===instanceNames[steps.LoopOverFormulaList.index - 1]){\n  createdInstances.push(steps.CreateFormulaInstances.response.body.id);\n}\n}\n\n\nif(i===instances.length){\n  done({\n    isCreated: true,\n    input:{\n     body: param[steps.LoopOverFormulaList.index]\n    },\n     createdInstances:createdInstances\n  });\n}\nelse{\n  createdInstances.push(instances[i].id);\n  done({ isCreated: false,\n    createdInstances:createdInstances\n  });\n}\n\n"}},{"id":240145,"onSuccess":["HasError"],"onFailure":["ChargebeeParams"],"name":"isReauthenticate","type":"filter","properties":{"body":"let isReauthenticate = trigger.args.request.query['isReauthenticate'];\ndone(!isReauthenticate);"}},{"id":264198,"onSuccess":["Success"],"onFailure":["Error4"],"name":"isTpConfigUpdated_2","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf_2.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264194,"onSuccess":["getElementInstance"],"onFailure":["ReAuthFailed"],"name":"IsTpIntegConfFetched","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264196,"onSuccess":["UpdateSuccess"],"onFailure":["ReAuthFailed"],"name":"isTpIntegConfUpdated","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":240146,"onSuccess":["getInstances"],"onFailure":["ThirdPartyConfig"],"name":"LoopOverFormulaList","type":"loop","properties":{"list":"${steps.FormulaIdList.formulaList}"}},{"id":240147,"onSuccess":[],"onFailure":[],"name":"ReAuthFailed","type":"script","properties":{"body":"\nlet err = {\n  \"status\": \"error\",\n  \"text\": \"Authentication Failed\"\n};\n\ndone({\n   statusCode: 200,\n   result: err\n});"}},{"id":240148,"onSuccess":[],"onFailure":[],"name":"SendError","type":"script","properties":{"body":"let err = {\n  \"status\":\"error\"\n}\nerr[steps.GetThirdPartyConfig.response.body.errorInput] = 'Bad request';\n\ndone({\n  statusCode: 200,\n  result: err\n});"}},{"id":240149,"onSuccess":["Error4"],"onFailure":[],"name":"sendErrorMail4","type":"httpRequest","properties":{"query":"${steps.sendErrorMail4Params4.params}","method":"POST","headers":"${steps.InputParams.input.authHeader}","url":"${steps.InputParams.input.errorEmailEndpoint}"}},{"id":240150,"onSuccess":["Error1"],"onFailure":[],"name":"sendErrorMailParams1","type":"script","properties":{"body":"let payload = {\n  content : \"Bad Request, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":240151,"onSuccess":["Error2"],"onFailure":[],"name":"sendErrorMailParams2","type":"script","properties":{"body":"let payload = {\n  content : \"Chargebee instance creation failed, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":240152,"onSuccess":["Error3"],"onFailure":[],"name":"sendErrorMailParams3","type":"script","properties":{"body":"let payload = {\n  content : \"Authentication Failed, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":240153,"onSuccess":["sendErrorMail4"],"onFailure":[],"name":"sendErrorMailParams4","type":"script","properties":{"body":"let payload = {\n  content : \"Config Update Failed, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":240154,"onSuccess":["errAuth"],"onFailure":[],"name":"sendErrorMailParamsAuth","type":"script","properties":{"body":"let payload = {\n  content : \"Authentication Failed, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":240155,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"done(steps.ThirdPartyConfig.sucess);"}},{"id":240156,"onSuccess":["ChargebeePostUpdateTpIntegConf_2"],"onFailure":[],"name":"ThirdPartyConfig","type":"script","properties":{"body":"let instances=steps.isInstancePresent.createdInstances;\nif(instances.length===steps.FormulaIdList.formulaList.length - 1){// push last instance \n  instances.push(steps.CreateFormulaInstances.response.body.id);\n}\n\nlet accountName = steps.InputParams.query.account.split(\"//\")[1].split(\".\")[0];\n\nlet configJson = {\n  batch : \n  { \n    \"batch_size\": 100\n  },\n  cloudElements: {\n    chargebee: {\n      element: steps.InputParams.input.chargebeeElement,\n      instance: steps.Element.chargebee\n    },\n    thirdParty: {\n      element: steps.InputParams.input.thirdPartyElement,\n      instance: steps.Element.thirdParty,\n      account_url: steps.InputParams.query.account,\n      api_token: steps.InputParams.query.apiToken,\n      accountName: accountName\n    },\n    formula: {\n      connect: {\n        instance: steps.InputParams.input.formulaConnect\n      },\n      create: {\n        instance: steps.InputParams.input.formulaCreate\n      },\n      validate:{\n        id:steps.InputParams.input.formulaValidate,\n        instance: instances[0]\n      },\n      mapping:{\n        id:steps.InputParams.input.formulaMapping,\n        instance: instances[1]\n      },\n      mappingProceed:{\n        id:steps.InputParams.input.formulaMappingProceed,\n        instance: instances[2]\n      },\n      syncSetup:{\n       \n        syncSetupStatus: \"NOT_CONFIGURED\"\n      },\n      sync:{\n        id:steps.InputParams.input.formulaSync,\n        instance:instances[3]\n       \n      },\n      activeCampaignCreateSetup:{\n        instance : steps.InputParams.input.activeCampaignCreateSetup\n      },\n      activeCampaignValidateSetup:{\n        instance: steps.InputParams.input.activeCampaignValidateSetup\n      },\n      activeCampaignValidateProceedSetup:{\n        instance: steps.InputParams.input.activeCampaignValidateProceedSetup\n      },\n       activeCampaignValidateProceedFinal:{\n        instance: steps.InputParams.input.activeCampaignValidateProceedFinal\n      },\n      activeCampaignMappingSetup:{\n        instance: steps.InputParams.input.activeCampaignMappingSetup\n      },\n      activeCampaignMappingProceedSetup:{\n        instance: steps.InputParams.input.activeCampaignMappingProceedSetup\n      },\n       activeCampaignInitialSyncRunSetup:{\n        instance: steps.InputParams.input.activeCampaignInitialSyncRunSetup\n      },\n       ActiveCampaignProcessingCardSetup:{\n        instance: steps.InputParams.input.ActiveCampaignProcessingCardSetup\n      },\n      ActiveCampaignSyncRunSetup:{\n        instance: steps.InputParams.input.ActiveCampaignSyncRunSetup\n      },\n      ActiveCampaignUnlinkSetup:{\n        instance: steps.InputParams.input.ActiveCampaignUnlinkSetup\n      }\n    },\n    url: \"https://staging.cloud-elements.com/elements/api-v2\"\n  }\n  \n};\n\n\nlet input = {\n  url: 'https://' + steps.UpdateParams.siteName + \".integrations.\" + steps.UpdateParams.siteDomain +\"/integrations/update_tp_integ_conf\",\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.UpdateParams.chargebee.body.configuration.username + \":\" + steps.UpdateParams.chargebee.body.configuration.password)\n  },\n  headers: {\n   \"Content-Type\": \"application/json\",\n   \"cache-control\": \"no-cache\"\n },\n  body: {\n    integration_name: steps.UpdateParams.thirdParty.elementKey,\n     site_name :steps.UpdateParams.siteName,\n     api_key :steps.UpdateParams.chargebee.body.configuration.username,\n    \"config_json\": configJson\n  },\n  sucess: {\n    statusCode: 200,\n    result: {\n      \"chargebeeInstanceId\": steps.Element.chargebee,\n      \"thirdPartyInstanceId\": steps.Element.thirdParty,\n    }\n  },\n  apiKey: steps.UpdateParams.chargebee.body.configuration.username,\n  siteName: steps.InputParams.query['cb-site-name'],\n  siteDomain: steps.InputParams.query.siteDomain,\n  type: steps.InputParams.query.type\n};\n\n\ndone(input);"}},{"id":240157,"onSuccess":["getConfiguration"],"onFailure":[],"name":"ThirdPartyElement","type":"script","properties":{"body":"done({\"id\":steps.GetThirdPartyElement.response.body[0].id});"}},{"id":240158,"onSuccess":["Element"],"onFailure":[],"name":"ThirdPartyElementNew","type":"script","properties":{"body":"done({\"id\":steps.CreateThirdPartyInstance.response.body.id});"}},{"id":267006,"onSuccess":["ThirdPartyElement"],"onFailure":["CreateThirdPartyInstance"],"name":"thirdPartyInstanceFound","type":"filter","properties":{"body":"if(steps.GetThirdPartyElement.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":240159,"onSuccess":["updateFailed"],"onFailure":["updateFailed"],"name":"updateApiKey","type":"request","properties":{"body":"${steps.constructConfig.body}","method":"PUT","acceptableStatusCodes":"200,400,401","api":"/instances/${steps.ThirdPartyElement.id}"}},{"id":240160,"onSuccess":["UpdateSuccess"],"onFailure":[],"name":"UpdateAuthFlag","type":"httpRequest","properties":{"body":"${steps.UpdateAuthFlagParams.body}","method":"POST","headers":"${steps.ChargebeeParams.config.headers}","url":"${steps.ChargebeeParams.config.Updateurl}"}},{"id":240161,"onSuccess":["ChargebeePostUpdateTpIntegConf"],"onFailure":[],"name":"UpdateAuthFlagParams","type":"script","properties":{"body":"let apiKey = steps.InputParams.query['cb-api-key'];\nlet siteName = steps.InputParams.query['cb-site-name'];\nlet siteDomain = steps.InputParams.query.siteDomain;\nlet type = steps.InputParams.query.type;\n \nlet configuration = steps.ChargebeeGetTpIntegConf.data.config_json;\nconfiguration.cloudElements.formula.sync.authFailed = true;\nconfiguration.cloudElements.thirdParty.api_token = steps.InputParams.query.password;\n\nlet input = steps.ChargebeeParams.updateTpConfig;\ninput.body.config_json = configuration;\n\ndone(input);"}},{"id":240162,"onSuccess":["Success"],"onFailure":["Error4"],"name":"UpdateConfig","type":"httpRequest","properties":{"query":"","method":"POST","body":"${steps.ThirdPartyConfig.update}","headers":"${steps.ThirdPartyConfig.headers}","url":"${steps.ThirdPartyConfig.url}"}},{"id":268687,"onSuccess":["Element"],"onFailure":["WrongApiToken"],"name":"updateFailed","type":"filter","properties":{"body":"if(steps.updateApiKey.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":268688,"onSuccess":["UpdateAuthFlagParams"],"onFailure":["WrongApiKey"],"name":"updateNewApiKeySuccess","type":"filter","properties":{"body":"if(steps.UpdateNewKey.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":240163,"onSuccess":["updateNewApiKeySuccess"],"onFailure":[],"name":"UpdateNewKey","type":"request","properties":{"body":"${steps.constructElementConfig.body}","method":"PUT","acceptableStatusCodes":"200,400,401,403","api":"/instances/${steps.getElementInstance.instance}"}},{"id":240164,"onSuccess":["GetChargebeeElement"],"onFailure":[],"name":"UpdateParams","type":"script","properties":{"body":"// let params = steps.InputParams.input;\n\nlet params = {\n  apiKey: steps.InputParams.input.apiKey,\n  siteName: steps.InputParams.input.siteName,\n  siteDomain: steps.InputParams.input.siteDomain,\n  type: steps.InputParams.input.type\n};\n\n\nlet thirdParty = steps.GetThirdPartyConfig.response.body.result;\nlet instanceName = steps.InputParams.input.siteName + \".\" + steps.InputParams.input.siteDomain + \"-chargebee\";\nparams.chargebee =  {\n    elementId: steps.InputParams.input.chargebeeElement,\n    searchParam: {\n      searchText: instanceName,\n      'tags[]': instanceName,\n      hydrate: false,\n      pageSize: 1\n    },\n    body: {\n      name: instanceName,\n      configuration: {\n        username: steps.InputParams.input.apiKey,\n        site: steps.InputParams.input.siteName +\".\"+ steps.InputParams.input.siteDomain,\n        password: \"\"\n      },\n      tags: [instanceName,steps.InputParams.input.siteName]\n    }\n  };\n  \nlet thirdPartyInstanceName = steps.InputParams.input.siteName + \".\" + steps.InputParams.input.siteDomain + \"-activecampaign\";\n  \n  params.thirdParty  =  {\n    elementId: steps.InputParams.input.thirdPartyElement,\n    elementKey:steps.InputParams.input.type,\n    searchParam: {\n      searchText: thirdPartyInstanceName,\n      'tags[]': thirdPartyInstanceName,\n      hydrate: false,\n      pageSize: 1\n    },\n    body: thirdParty\n  };\n  \n\n  done(params);"}},{"id":240165,"onSuccess":[],"onFailure":[],"name":"UpdateSuccess","type":"script","properties":{"body":"done({\n  statusCode : 200\n});"}},{"id":240166,"onSuccess":["constructElementConfig"],"onFailure":["ReAuthFailed"],"name":"ValidateAccount","type":"filter","properties":{"body":"let account=steps.InputParams.query.text;\n\ndone(account.split('//')[1] !==undefined && account.split('//')[1].split('.')[0] !==undefined);"}},{"id":240167,"onSuccess":[],"onFailure":[],"name":"WrongApiKey","type":"script","properties":{"body":"let statusCode = steps.UpdateNewKey.response.code;\nlet err;\n\nif(statusCode === 403){\n\n  err = {\n  \"status\": \"error\",\n  \"password\": \"Authentication Failed\"\n};\n}else{\n    err = {\n  \"status\": \"error\",\n  \"text\": \"Authentication Failed\"\n};\n}\n\ndone({\n   statusCode: 200,\n   result: err\n});"}},{"id":240168,"onSuccess":[],"onFailure":[],"name":"WrongApiToken","type":"script","properties":{"body":"let statusCode = steps.updateApiKey.response.code;\nlet err;\n\nif(statusCode === 403){\n\n  err = {\n  \"status\": \"error\",\n  \"apiToken\": \"Authentication Failed\"\n};\n}else{\n    err = {\n  \"status\": \"error\",\n  \"account\": \"Authentication Failed\"\n};\n}\n\ndone({\n   statusCode: 200,\n   result: err\n});"}}],"triggers":[{"id":27416,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31257,"name":"ChargebeeGet","userId":27893,"accountId":24428,"createdDate":"2019-11-12T11:30:28Z","steps":[{"id":245638,"onSuccess":["ChargebeeGetCBDelay2"],"onFailure":["ChargebeeGetResult"],"name":"ChargebeeGetCallAgainCB","type":"filter","properties":{"body":"//done(false); //Since delay causing 30 second limit issues\n\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetCBData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245636,"onSuccess":["ChargebeeGetCBDelay"],"onFailure":["ChargebeeGetResult2"],"name":"ChargebeeGetCallAgainHttp","type":"filter","properties":{"body":"done(false); //Since delay causing 30 second limit issues\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetHttpData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245637,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":[],"name":"ChargebeeGetCBDelay","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","headers":"${steps.ChargebeeGetInputParams.delay.headers}","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":245639,"onSuccess":["ChargebeeGetGetCBData"],"onFailure":[],"name":"ChargebeeGetCBDelay2","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","headers":"${steps.ChargebeeGetInputParams.delay.headers}","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":244768,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244769,"onSuccess":["ChargebeeGetCallAgainCB"],"onFailure":["ChargebeeGetCallAgainCB"],"name":"ChargebeeGetGetCBData","type":"elementRequest","properties":{"query":"${steps.ChargebeeGetInputParams.query}","body":"","elementInstanceId":"${config.chargebee}","method":"GET","headers":"${steps.ChargebeeGetInputParams.headers}","acceptableStatusCodes":"200-600","api":"${steps.ChargebeeGetInputParams.url}"}},{"id":244774,"onSuccess":["ChargebeeGetCallAgainHttp"],"onFailure":["ChargebeeGetCallAgainHttp"],"name":"ChargebeeGetGetHttpData","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.query}","body":"","method":"GET","headers":"${steps.ChargebeeGetInputParams.headers}","acceptableStatusCodes":"200-600","url":"${steps.ChargebeeGetInputParams.url}"}},{"id":244764,"onSuccess":["ChargebeeGetIsValidUrl"],"onFailure":[],"name":"ChargebeeGetInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244771,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":["ChargebeeGetGetCBData"],"name":"ChargebeeGetIsHttp","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url.startsWith(\"https://\"));"}},{"id":244767,"onSuccess":["ChargebeeGetIsHttp"],"onFailure":["ChargebeeGetError"],"name":"ChargebeeGetIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url !== undefined && steps.ChargebeeGetInputParams.url!== \"\");"}},{"id":244770,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult","type":"script","properties":{"body":"if(steps.ChargebeeGetGetCBData.response.code < 300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetCBData.response.code,\n    data:steps.ChargebeeGetGetCBData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetCBData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetCBData.response!== undefined && steps.ChargebeeGetGetCBData.response.body!== undefined && steps.ChargebeeGetGetCBData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetCBData.response.body.error_code;\n    let cbcode = steps.ChargebeeGetGetCBData.response.code || 404;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_code: cbcode,\n    cb_exit:hardstop\n  });\n}\n\n"}},{"id":244775,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult2","type":"script","properties":{"body":"if(steps.ChargebeeGetGetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetHttpData.response.code,\n    data:steps.ChargebeeGetGetHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetHttpData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetHttpData.response.body!== undefined && steps.ChargebeeGetGetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_code: steps.ChargebeeGetGetHttpData.response.code\n  });\n}\n\n"}}],"triggers":[{"id":27722,"onSuccess":["ChargebeeGetInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59935,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]},{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"query":"${steps.ChargebeePostInputParams.delay.query}","method":"GET","headers":"${steps.ChargebeePostInputParams.delay.headers}","url":"${steps.ChargebeePostInputParams.delay.url}"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"query":"${steps.ChargebeePostInputParams.query}","body":"${steps.ChargebeePostInputParams.body}","method":"POST","headers":"${steps.ChargebeePostInputParams.headers}","acceptableStatusCodes":"200-600","url":"${steps.ChargebeePostInputParams.url}"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"method":"GET","uri":"/create","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /create","configuration":[]}