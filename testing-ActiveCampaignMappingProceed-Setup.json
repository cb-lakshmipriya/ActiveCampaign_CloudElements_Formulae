{"id":29312,"name":"testing-ActiveCampaignMappingProceed-Setup","userId":27893,"accountId":24428,"createdDate":"2019-09-03T05:31:59Z","steps":[{"id":213960,"onSuccess":["ConfigParams"],"onFailure":[],"name":"ChargebeeConfigParams","type":"httpRequest","properties":{"headers":"${steps.InputParams.input.config.auth}","query":"${steps.InputParams.input.config.query}","method":"GET","url":"${steps.InputParams.input.config.url}"}},{"id":264168,"onSuccess":["gotTpConfig"],"onFailure":[],"name":"ChargebeeGetTpIntegConf","type":"formula","properties":{"args":"${steps.InputParams.input.config}","formulaId":"31257"}},{"id":264170,"onSuccess":["tpIntegConfUpdated"],"onFailure":[],"name":"ChargebeePostUpdateTpIntegConf","type":"formula","properties":{"args":"${steps.UpdateConfigParams}","formulaId":"31258"}},{"id":213961,"onSuccess":["GetMappingInput"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let config = {\n   mappingHeader :  {\n                        \"Elements-Formula-Instance-Id\": steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.mappingProceed.instance\n                    },\n    configJson : steps.ChargebeeGetTpIntegConf.data ,\n    mappingInput:steps.InputParams.input.mainTrigger.request.query\n};\ndone(config);"}},{"id":213962,"onSuccess":["HasError"],"onFailure":[],"name":"GetMappingInput","type":"request","properties":{"headers":"${steps.ConfigParams.mappingHeader}","query":"${steps.ConfigParams.mappingInput}","method":"GET","api":"/${steps.InputParams.input.type}/mapping/proceed"}},{"id":264169,"onSuccess":["ConfigParams"],"onFailure":["SendError"],"name":"gotTpConfig","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":213963,"onSuccess":["UpdateConfigParams"],"onFailure":["SendError"],"name":"HasError","type":"filter","properties":{"body":"if(steps.GetMappingInput.response.body.flag){\n  done(true);\n}else {\n  done(false);\n}"}},{"id":213964,"onSuccess":["ChargebeeGetTpIntegConf"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['apiKey'];\nlet siteName = trigger.args.request.query['siteName'];\nlet type = trigger.args.request.query['type'];\nlet siteDomain = trigger.args.request.query['siteDomain'];\nlet password = \"\";\n\nlet mainTrigger = trigger.args;\n\nlet params = {\n  input: {\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    type: type,\n    mainTrigger: mainTrigger,\n    config :{\n      // url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n      url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_configurations/tpmeta\",\n      headers:{\n        Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password),\n        api_key: apiKey\n      },\n      query:{\n        integration_name: type\n      },\n      apiKey: apiKey,\n      siteName: siteName,\n      siteDomain: siteDomain,\n      type: type\n    }\n  }\n};\n\ndone(params);"}},{"id":213965,"onSuccess":[],"onFailure":[],"name":"SendError","type":"script","properties":{"body":"done(steps.GetMappingInput.response.body.error);"}},{"id":213966,"onSuccess":[],"onFailure":[],"name":"sendErrorMail","type":"httpRequest","properties":{"headers":"${steps.InputParams.input.authHeader}","query":"${steps.sendErrorMailParams.params}","method":"POST","url":"${steps.InputParams.input.errorEmailEndpoint}"}},{"id":213967,"onSuccess":[],"onFailure":[],"name":"sendErrorMailParams","type":"script","properties":{"body":"let payload = {\n  content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":213968,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"done({\n  statusCode: 200,\n    result: {}\n})"}},{"id":264171,"onSuccess":["Success"],"onFailure":["SendError"],"name":"tpIntegConfUpdated","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":213969,"onSuccess":["Success"],"onFailure":[],"name":"UpdateConfig","type":"httpRequest","properties":{"headers":"${steps.UpdateConfigParams.headers}","query":"","method":"POST","url":"${steps.UpdateConfigParams.url}","body":"${steps.UpdateConfigParams.body}"}},{"id":213970,"onSuccess":["ChargebeePostUpdateTpIntegConf"],"onFailure":[],"name":"UpdateConfigParams","type":"script","properties":{"body":"let customFieldToggle = steps.InputParams.input.mainTrigger.request.query['toggle2'];\nlet configJson = steps.ConfigParams.configJson.config_json;\n\n//check any change in custom field configuration\n\nlet customFieldChange = false;\nlet presentCustomerKeys = [];\nlet presentSubscriptionKeys = [];\nlet newCustomerKeys;\nlet newSubscriptionKeys;\n\n\nif (configJson.cloudElements.formula.mapping.inputs !== undefined) {\nlet model_check1 = configJson.cloudElements.formula.mapping.inputs.modelbox_check1;\nlet model_check2 = configJson.cloudElements.formula.mapping.inputs.modelbox_check2;\n  \n    if ((customFieldToggle !== configJson.cloudElements.formula.mapping.inputs.customFieldToggle) && customFieldToggle === \"false\") {\n        customFieldChange = true;\n    }\n    if (model_check1 !== undefined && model_check1 !== \"\") {\n        presentCustomerKeys = Object.keys(JSON.parse((JSON.parse(configJson.cloudElements.formula.mapping.inputs.modelbox_check1).search)))\n    }\n\n    if (model_check2 !== undefined && model_check2 !== \"\") {\n        presentSubscriptionKeys = Object.keys(JSON.parse((JSON.parse(configJson.cloudElements.formula.mapping.inputs.modelbox_check2).search2)))\n    }\n\n    if (steps.InputParams.input.mainTrigger.request.query.modelbox_check1 !== undefined && steps.InputParams.input.mainTrigger.request.query.modelbox_check1 !== \"\") {\n        newCustomerKeys = Object.keys(JSON.parse((JSON.parse(steps.InputParams.input.mainTrigger.request.query.modelbox_check1).search)));\n\n        if (presentCustomerKeys.sort().join(',') === newCustomerKeys.sort().join(',')) {\n            customFieldChange = false;\n\n        } else {\n            customFieldChange = true;\n        }\n\n    }\n\n    if (steps.InputParams.input.mainTrigger.request.query.modelbox_check2 !== undefined && steps.InputParams.input.mainTrigger.request.query.modelbox_check2 !== \"\") {\n        newSubscriptionKeys = Object.keys(JSON.parse((JSON.parse(steps.InputParams.input.mainTrigger.request.query.modelbox_check2).search2)));\n\n        if (presentSubscriptionKeys.sort().join(',') === newSubscriptionKeys.sort().join(',')) {\n            customFieldChange = false;\n        } else {\n            customFieldChange = true;\n        }\n\n    }\n}\n\n\nif (configJson.cloudElements.formula.mapping.inputs === undefined) {\n    configJson.cloudElements.formula.mapping.inputs = {};\n}\n\n\nif (customFieldToggle === \"true\") {\n    if (steps.GetMappingInput.response.body.input.modelbox_check1 !== \"\") {\n        configJson.cloudElements.formula.mapping.inputs.modelbox_check1 = steps.GetMappingInput.response.body.input.modelbox_check1;\n    }\n    if (steps.GetMappingInput.response.body.input.modelbox_check2 !== \"\") {\n        configJson.cloudElements.formula.mapping.inputs.modelbox_check2 = steps.GetMappingInput.response.body.input.modelbox_check2;\n    }\n} else {\n    configJson.cloudElements.formula.mapping.inputs.modelbox_check1 = \"\";\n    configJson.cloudElements.formula.mapping.inputs.modelbox_check2 = \"\";\n}\n\n\n\nlet presentListId = configJson.cloudElements.formula.mapping.inputs.list;\nlet newListId = steps.GetMappingInput.response.body.input.list;\nlet presentSyncGift = configJson.cloudElements.formula.mapping.inputs.syncGift;\nlet newSyncGift = steps.GetMappingInput.response.body.input.syncGift;\nlet presentDeleteOps = configJson.cloudElements.formula.mapping.inputs.deleteops;\nlet newDeleteOps = steps.GetMappingInput.response.body.input.deleteops;\nconfigJson.cloudElements.formula.mapping.inputs.customFieldToggle = customFieldToggle;\n\nconfigJson.cloudElements.formula.mapping.inputs.syncGift = steps.GetMappingInput.response.body.input.syncGift;\nconfigJson.cloudElements.formula.mapping.inputs.deleteops = steps.GetMappingInput.response.body.input.deleteops;\nconfigJson.cloudElements.formula.mapping.inputs.customFieldToggle = customFieldToggle;\n\nif (presentListId !== newListId || presentSyncGift !== newSyncGift || presentDeleteOps !== newDeleteOps || customFieldChange === true) {//if the user selects the new list, all the contacts that are available in chargebee should also sync to  new list\n    configJson.cloudElements.formula.mapping.isListChanged = true;\n}\n\nconfigJson.cloudElements.formula.mapping.inputs.list = steps.GetMappingInput.response.body.input.list;\nconfigJson.cloudElements.url = \"https://staging.cloud-elements.com/elements/api-v2\";\n\n\nlet password = '';\nlet input = {\n    url: 'https://' + steps.InputParams.input.siteName + \".integrations.\" + steps.InputParams.input.siteDomain + \"/integrations/update_tp_integ_conf\",\n    headers: {\n      Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + password),\n        \"Content-Type\": \"application/json\",\n        \"cache-control\": \"no-cache\"\n    },\n    body: {\n        integration_name: steps.InputParams.input.type,\n        site_name: steps.InputParams.input.siteName,\n        api_key: steps.InputParams.input.apiKey,\n        \"config_json\": configJson\n    },\n    apiKey: steps.InputParams.input.apiKey,\n    siteName: steps.InputParams.input.siteName,\n    siteDomain: steps.InputParams.input.siteDomain,\n    type: steps.InputParams.input.type,\n    presentListId: presentListId,\n    newListId: newListId\n\n};\n\ndone(input);"}}],"triggers":[{"id":25947,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31257,"name":"ChargebeeGet","userId":27893,"accountId":24428,"createdDate":"2019-11-12T11:30:28Z","steps":[{"id":245638,"onSuccess":["ChargebeeGetCBDelay2"],"onFailure":["ChargebeeGetResult"],"name":"ChargebeeGetCallAgainCB","type":"filter","properties":{"body":"//done(false); //Since delay causing 30 second limit issues\n\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetCBData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245636,"onSuccess":["ChargebeeGetCBDelay"],"onFailure":["ChargebeeGetResult2"],"name":"ChargebeeGetCallAgainHttp","type":"filter","properties":{"body":"done(false); //Since delay causing 30 second limit issues\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetHttpData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245637,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":[],"name":"ChargebeeGetCBDelay","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.delay.query}","headers":"${steps.ChargebeeGetInputParams.delay.headers}","method":"GET","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":245639,"onSuccess":["ChargebeeGetGetCBData"],"onFailure":[],"name":"ChargebeeGetCBDelay2","type":"httpRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.delay.headers}","query":"${steps.ChargebeeGetInputParams.delay.query}","method":"GET","url":"${steps.ChargebeeGetInputParams.delay.url}"}},{"id":244768,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244769,"onSuccess":["ChargebeeGetCallAgainCB"],"onFailure":["ChargebeeGetCallAgainCB"],"name":"ChargebeeGetGetCBData","type":"elementRequest","properties":{"headers":"${steps.ChargebeeGetInputParams.headers}","query":"${steps.ChargebeeGetInputParams.query}","api":"${steps.ChargebeeGetInputParams.url}","method":"GET","acceptableStatusCodes":"200-600","body":"","elementInstanceId":"${config.chargebee}"}},{"id":244774,"onSuccess":["ChargebeeGetCallAgainHttp"],"onFailure":["ChargebeeGetCallAgainHttp"],"name":"ChargebeeGetGetHttpData","type":"httpRequest","properties":{"query":"${steps.ChargebeeGetInputParams.query}","headers":"${steps.ChargebeeGetInputParams.headers}","method":"GET","acceptableStatusCodes":"200-600","url":"${steps.ChargebeeGetInputParams.url}","body":""}},{"id":244764,"onSuccess":["ChargebeeGetIsValidUrl"],"onFailure":[],"name":"ChargebeeGetInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244771,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":["ChargebeeGetGetCBData"],"name":"ChargebeeGetIsHttp","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url.startsWith(\"https://\"));"}},{"id":244767,"onSuccess":["ChargebeeGetIsHttp"],"onFailure":["ChargebeeGetError"],"name":"ChargebeeGetIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url !== undefined && steps.ChargebeeGetInputParams.url!== \"\");"}},{"id":244770,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult","type":"script","properties":{"body":"if(steps.ChargebeeGetGetCBData.response.code < 300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetCBData.response.code,\n    data:steps.ChargebeeGetGetCBData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetCBData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetCBData.response!== undefined && steps.ChargebeeGetGetCBData.response.body!== undefined && steps.ChargebeeGetGetCBData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetCBData.response.body.error_code;\n    let cbcode = steps.ChargebeeGetGetCBData.response.code || 404;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_code: cbcode,\n    cb_exit:hardstop\n  });\n}\n\n"}},{"id":244775,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult2","type":"script","properties":{"body":"if(steps.ChargebeeGetGetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetHttpData.response.code,\n    data:steps.ChargebeeGetGetHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetHttpData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetHttpData.response.body!== undefined && steps.ChargebeeGetGetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_code: steps.ChargebeeGetGetHttpData.response.code\n  });\n}\n\n"}}],"triggers":[{"id":27722,"onSuccess":["ChargebeeGetInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59935,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]},{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"query":"${steps.ChargebeePostInputParams.delay.query}","headers":"${steps.ChargebeePostInputParams.delay.headers}","method":"GET","url":"${steps.ChargebeePostInputParams.delay.url}"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.headers}","query":"${steps.ChargebeePostInputParams.query}","method":"POST","acceptableStatusCodes":"200-600","url":"${steps.ChargebeePostInputParams.url}","body":"${steps.ChargebeePostInputParams.body}"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"method":"GET","uri":"/mapping/proceed","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /mapping/proceed","configuration":[]}