{"id":29302,"name":"testing-ActiveCampaignAutoSync","description":"Formula to perform Auto Sync for ActiveCampaign","userId":27893,"accountId":24428,"createdDate":"2019-09-03T05:19:17Z","steps":[{"id":267436,"onSuccess":["gotExecutionStatus"],"onFailure":[],"name":"ChargebeeGetExecutionStatus","type":"formula","properties":{"formulaId":"31257","args":"${steps.getExecutionStatus_params.data}"}},{"id":264174,"onSuccess":["isLastSyncDetailsApiSuccess"],"onFailure":[],"name":"ChargebeeGetLastSyncDetails","type":"formula","properties":{"formulaId":"31257","args":"${steps.InputParams.retrieveLatestSyncConfig}"}},{"id":264172,"onSuccess":["IsTpIntegConfFetched"],"onFailure":[],"name":"ChargebeeGetTpIntegConf","type":"formula","properties":{"formulaId":"31257","args":"${steps.InputParams.getTpConfigParams}"}},{"id":264182,"onSuccess":["isNewSyncCreated"],"onFailure":[],"name":"ChargebeePostCreateNewSyncDetails","type":"formula","properties":{"formulaId":"31258","args":"${steps.createNewSyncDetails_params.newSyncDetailsParams}"}},{"id":264177,"onSuccess":["isUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateSyncFailed","type":"formula","properties":{"formulaId":"31258","args":"${steps.FailedSyncParams.payload}"}},{"id":264188,"onSuccess":["isUpdateSyncFailed_2"],"onFailure":[],"name":"ChargebeePostUpdateSyncFailed_2","type":"formula","properties":{"formulaId":"31258","args":"${steps.failedSyncParams.payload}"}},{"id":264179,"onSuccess":["isTpUpdateSuccess"],"onFailure":[],"name":"ChargebeePostUpdateSyncSuccess","type":"formula","properties":{"formulaId":"31258","args":"${steps.UpdateSuccessParam.payload}"}},{"id":264186,"onSuccess":["Success_syncStart"],"onFailure":["Success_syncStart"],"name":"ChargebeePostUpdateTpIntegConf_2","type":"formula","properties":{"formulaId":"31258","args":"${steps.updateTpConfig2_params.payload}"}},{"id":264190,"onSuccess":["Success_syncStartFailed"],"onFailure":["Success_syncStartFailed"],"name":"ChargebeePostUpdateTpIntegConf_3","type":"formula","properties":{"formulaId":"31258","args":"${steps.updateTpConfig3_params.payload}"}},{"id":264184,"onSuccess":["isTpSyncUpdatedRunning"],"onFailure":[],"name":"ChargebeeUpdateSyncRunning","type":"formula","properties":{"formulaId":"31258","args":"${steps.runningSyncParams.payload}"}},{"id":267438,"onSuccess":["checkStatus"],"onFailure":[],"name":"checkExecutionStatus","type":"script","properties":{"body":"// if(steps.getExecutionStatus.response.body.status === \"pending\"){\n//   done(false);\n// }else{\n//   done(true);\n// }\n\nlet batch = steps.ChargebeeGetTpIntegConf.data.config_json.batch || undefined;\nlet input = {\n  apiKey: steps.InputParams.params.input.apiKey,\n  siteName: steps.InputParams.params.input.siteName,\n  siteDomain: steps.InputParams.params.input.siteDomain,\n  type: steps.InputParams.params.input.type,\n  error : false,\n  isStopSync: false,\n  done: false,\n  listError:false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.ChargebeeGetLastSyncDetails.data.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + steps.InputParams.params.input.password)\n  },\n  query: steps.ChargebeeGetLastSyncDetails.data,\n};\n\nif((steps.ChargebeeGetExecutionStatus.data.status === \"failed\" || steps.ChargebeeGetExecutionStatus.data.status === \"error\") && batch.status !== \"success\"){\n  input.error = true;\n  input.done = true;\n  input.query.status = \"failed\";\n}else if(steps.ChargebeeGetExecutionStatus.data.status === \"success\" && batch.status !== \"success\" && batch.status !== \"running\" ){\n  input.error = true;\n  input.done = true;\n  input.query.status = \"failed\";\n  \n}else if(steps.ChargebeeGetExecutionStatus.data.status === \"success\" && batch.status === \"running\" ){\n  input.error = false;\n  input.done = false;\n  input.query.status = \"running\";\n}else if((steps.ChargebeeGetExecutionStatus.data.status === \"failed\" || steps.ChargebeeGetExecutionStatus.data.status === \"error\") &&  batch.status === \"success\"){\n  input.error = false;\n  input.done = true;\n  input.query.status = \"succeeded\";\n}else if(steps.ChargebeeGetExecutionStatus.data.status === \"success\" && batch.status === \"success\" ){\n  input.error = false;\n  input.done = true;\n  input.query.status = \"succeeded\";\n  \n}else if(steps.ChargebeeGetExecutionStatus.data.status === \"pending\"){\n  input.error = false;\n  input.done = false;\n  input.query.status = \"running\";\n}\n\ndone(input);"}},{"id":213824,"onSuccess":["IsSyncSuccess"],"onFailure":[],"name":"checkFormulaFailedOrSucceeded","type":"script","properties":{"body":"let error_flag = false;\nlet stepInfo = null;\n\nif(steps.getExecutionStatus.response.body.status === \"success\"){\n  error_flag = false;\n}\n\nif(steps.getExecutionStatus.response.body.stepExecutions.length > 0){\n  \n  for(var i=0; i<steps.getExecutionStatus.response.body.stepExecutions.length; i++){\n    if(steps.getExecutionStatus.response.body.stepExecutions[i][\"stepName\"] === \"Success\") {\n      stepInfo = steps.getExecutionStatus.response.body.stepExecutions[i];\n      break;\n    }\n  }\n}\n\nif(steps.getExecutionStatus.response.body.status === \"failed\"){\n  error_flag = true;\n}\n\ndone({\n  flag: error_flag,\n  stepInfo: stepInfo\n});"}},{"id":213825,"onSuccess":["Success"],"onFailure":["Success_syncPending"],"name":"checkStatus","type":"filter","properties":{"body":"if(steps.checkExecutionStatus.query.status === \"running\"){\n  done(false);\n}\n// if(steps.getExecutionStatus.response.body.status === \"pending\"){\n//   done(false);\n// }else{\n//   done(true);\n// }\n\ndone(true);"}},{"id":213826,"onSuccess":["isSyncStarted"],"onFailure":["sendErrorMail"],"name":"createNewSyncDetails","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.createNewSyncDetails_params.newSyncDetailsParams.url}","retry":"true","query":"${steps.createNewSyncDetails_params.newSyncDetailsParams.query}","headers":"${steps.createNewSyncDetails_params.newSyncDetailsParams.headers}"}},{"id":213827,"onSuccess":["ChargebeePostCreateNewSyncDetails"],"onFailure":[],"name":"createNewSyncDetails_params","type":"script","properties":{"body":"let apiKey = steps.InputParams.params.input.apiKey;\n\nlet newSyncDetailsParams = {\n  url: \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query : {\n  'third_party_configuration[integration_name]': steps.InputParams.params.input.type,\n  \"context\": {\n      \"excecutionId\": steps.startExecution.response.body[0].id,\n      \"instance\": steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.sync.instance || \"undefined\",\n      \"formula\": steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.sync.id || \"undefined\",\n      \"initialSync\":false,\n      \"autoSync\": true,\n      \"syncData\":{\n        \"syncStart\" : Math.round((new Date().getTime())/1000)\n      }\n    }\n  },\n  apiKey: steps.InputParams.params.input.apiKey,\n  siteName: steps.InputParams.params.input.siteName,\n  siteDomain: steps.InputParams.params.input.siteDomain,\n  type: steps.InputParams.params.input.type\n};\n\ndone({\n  newSyncDetailsParams: newSyncDetailsParams\n});"}},{"id":213828,"onSuccess":["HasExecutions"],"onFailure":["RunningSync"],"name":"ExecutionNotRunniing","type":"filter","properties":{"body":"\nlet ExecutionStatus = steps.getStatus.response.body.status;\nlet executionId = steps.InputParams.params.input.executionId;\n\nif((ExecutionStatus === \"pending\" && executionId !== null) || ExecutionStatus === \"success\" ){\n  done(true);\n}\ndone(false);"}},{"id":213829,"onSuccess":["ExecutionNotRunniing"],"onFailure":["UpdateSuccessParam"],"name":"ExecutionNotSuccess","type":"filter","properties":{"body":"\nlet ExecutionStatus = steps.getStatus.response.body.status;\n\nif( ExecutionStatus === \"success\"){\n  done(false);\n}\ndone(true);"}},{"id":213830,"onSuccess":["getStatus"],"onFailure":[],"name":"ExecutionParams","type":"script","properties":{"body":"let execution_id = steps.ChargebeeGetLastSyncDetails.data.context.excecutionId;\n\nlet payload = {\n  url: \"/formulas/instances/executions/\" + execution_id\n};\n\ndone({\n  payload: payload,\n  execution_id: execution_id\n});\n\n"}},{"id":213831,"onSuccess":["HasExecutions"],"onFailure":[],"name":"ExecutionStatus","type":"request","properties":{"method":"GET","api":"${steps.ExecutionParams.payload.url}"}},{"id":213832,"onSuccess":["ChargebeePostUpdateSyncFailed_2"],"onFailure":[],"name":"failedSyncParams","type":"script","properties":{"body":"let payload = {\n  error : true,\n  done: false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.cChargebeePostCreateNewSyncDetails.data.third_party_sync_detail.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.ChargebeePostCreateNewSyncDetails.data.third_party_sync_detail,\n  apiKey: steps.InputParams.params.input.apiKey,\n  siteName: steps.InputParams.params.input.siteName,\n  siteDomain: steps.InputParams.params.input.siteDomain,\n  type: steps.InputParams.params.input.type\n};\n\npayload.body.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\npayload.body.status = \"failed\";\n\ndone({\n  payload: payload\n});"}},{"id":213833,"onSuccess":["ChargebeePostUpdateSyncFailed"],"onFailure":[],"name":"FailedSyncParams","type":"script","properties":{"body":"let payload = {\n  error : true,\n  done: true,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.ChargebeeGetLastSyncDetails.data.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.ChargebeeGetLastSyncDetails.data,\n  apiKey: steps.InputParams.params.input.apiKey,\n  siteName: steps.InputParams.params.input.siteName,\n  siteDomain: steps.InputParams.params.input.siteDomain,\n  type: steps.InputParams.params.input.type\n};\n\npayload.body.status = \"failed\";\n\ndone({\n  payload: payload\n});\n\n"}},{"id":213834,"onSuccess":[],"onFailure":[],"name":"FailedToFetch","type":"script","properties":{"body":"\nlet message = \"Sync Formula Succeeded but Failed to Fetch the Details\";\n\ndone({\n  statusCode: 200,\n  result: {\n    status : \"Success\",\n    message : message\n  }\n});"}},{"id":213835,"onSuccess":["checkStatus"],"onFailure":["sendErrorMail"],"name":"getExecutionStatus","type":"request","properties":{"method":"GET","api":"${steps.getExecutionStatus_params.payload.url}"}},{"id":213836,"onSuccess":["ChargebeeGetExecutionStatus"],"onFailure":[],"name":"getExecutionStatus_params","type":"script","properties":{"body":"let execution_id = steps.InputParams.params.input.executionId  || null;\n\n// let payload = {\n//   url: \"/formulas/instances/executions/\" + execution_id\n// };\n\n// done({\n//   payload: payload\n// });\n\n\nlet password = \"\";\n\nlet data = {\n   headers:{\n        Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + password)\n      },\n    query:{\n      execution_id: execution_id\n    },\n    url : \"https://\"+steps.InputParams.params.input.siteName+\".integrations.\"+steps.InputParams.params.input.siteDomain+\"/api/activecampaign/ipaasexecution\"\n};\n\ndone({\n  data: data\n});"}},{"id":213837,"onSuccess":["IsStatusFailed"],"onFailure":[],"name":"getStatus","type":"request","properties":{"method":"GET","api":"${steps.ExecutionParams.payload.url}"}},{"id":213838,"onSuccess":["Success_syncFinished"],"onFailure":["FailedToFetch"],"name":"getStepData","type":"request","properties":{"method":"GET","api":"${steps.getStepData_params.payload.url}","retryDelay":"200","retryAttempts":"5","retry":"true"}},{"id":213839,"onSuccess":["getStepData"],"onFailure":[],"name":"getStepData_params","type":"script","properties":{"body":"let stepId = steps.checkFormulaFailedOrSucceeded.stepInfo.id || null;\n\n\nlet payload = {\n  url : \"/formulas/instances/executions/steps/\"+ stepId +\"/values\"\n}\n\n\ndone({\n  payload: payload\n});"}},{"id":213840,"onSuccess":["LastSyncDetails"],"onFailure":["sendErrorCard"],"name":"getTpConfig","type":"httpRequest","properties":{"method":"GET","retryDelay":"200","retryAttempts":"5","retry":"true","url":"${steps.InputParams.getTpConfigParams.url}","query":"${steps.InputParams.getTpConfigParams.query}","headers":"${steps.InputParams.getTpConfigParams.auth}"}},{"id":267437,"onSuccess":["checkExecutionStatus"],"onFailure":["sendErrorMail"],"name":"gotExecutionStatus","type":"filter","properties":{"body":"if(steps.ChargebeeGetExecutionStatus.cb_status == \"success\")\n  done(true);\nelse\n  done(false);"}},{"id":213841,"onSuccess":["getExecutionStatus_params"],"onFailure":["startExecutionParams"],"name":"HasExecutions","type":"filter","properties":{"body":"if(steps.InputParams.params.input.executionId === null){ //Trigger a New Sync\n  done(false);\n}\n\ndone(true); //Check Status of Latest Sync"}},{"id":213842,"onSuccess":["HasExecutions"],"onFailure":["ExecutionParams"],"name":"HasNoExecution","type":"filter","properties":{"body":"let syncStatus = steps.ChargebeeGetLastSyncDetails.data.status;\n\nif( syncStatus === \"running\" ){\n  done(false);\n}\ndone(true);"}},{"id":213843,"onSuccess":["ChargebeeGetTpIntegConf"],"onFailure":["sendErrorCard"],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'] || null;\nlet siteName = trigger.args.request.query['cb-site-name'] || null;\nlet type = trigger.args.request.query['type'] || null;\nlet siteDomain = trigger.args.request.query['cb-domain'] || null;\nlet executionId =  trigger.args.request.query['execution_id'] || null;\n\nif((apiKey === null) || (siteName === null) || (type === null) || (siteDomain === null)){\n  done(false);\n}\n\nlet password = \"\";\n\n\nlet params = {\n  input:{\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    type: type,\n    password: \"\",\n    executionId: executionId\n  }\n};\n\nlet getTpConfigParams = {\n    // url: \"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_configurations\",\n    url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_configurations/tpmeta\",\n    headers:{\n      Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password),\n      api_key: apiKey\n    },\n    query:{\n      integration_name: type\n    },\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain: siteDomain,\n    type: type\n};\n\nlet updateTpConfigParams = {\n  url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    \"cache-control\": \"no-cache\"\n  },\n  body: {\n     site_name: siteName,\n     api_key: apiKey,\n     integration_name: type\n     //append config_json with this during request\n  },\n  apiKey: apiKey,\n    siteName: siteName,\n    siteDomain: siteDomain,\n    type: type\n};\n\n//let errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\nlet errorEmailAddress = \"test@gmail.com\";\n\nlet sendErrorMailParams = {\n  url: 'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send',\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + \"\")\n  },\n  query :{\n    content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n    subject : \"Error occurred during \" + type + \" Auto Sync\",\n    to_address : errorEmailAddress,\n    api_key : apiKey\n  }\n};\n\nlet retrieveLatestSyncConfig = {\n  // url:\"https://\"+siteName+\".\"+siteDomain+\"/api/v2/third_party_sync_details/retrieve_latest_sync\",\n  url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/third_party_sync_details/tpmeta?integration_name=activecampaign\",\n  headers:{\n    Authorization: \"Basic \" + CE.b64(apiKey + \":\" + password)\n  },\n  query:{\n    'third_party_configuration[integration_name]': type\n  },\n  apiKey: apiKey,\n    siteName: siteName,\n    siteDomain: siteDomain,\n    type: type\n};\n\n\ndone({\n  params: params,\n  retrieveLatestSyncConfig: retrieveLatestSyncConfig,\n  getTpConfigParams: getTpConfigParams,\n  updateTpConfigParams: updateTpConfigParams,\n  sendErrorMailParams: sendErrorMailParams\n});"}},{"id":264175,"onSuccess":["HasNoExecution"],"onFailure":["sendErrorCard"],"name":"isLastSyncDetailsApiSuccess","type":"filter","properties":{"body":"if(steps.ChargebeeGetLastSyncDetails.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264183,"onSuccess":["isSyncStarted"],"onFailure":["sendErrorCard"],"name":"isNewSyncCreated","type":"filter","properties":{"body":"if(steps.ChargebeePostCreateNewSyncDetails.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":213844,"onSuccess":["FailedSyncParams"],"onFailure":["ExecutionNotSuccess"],"name":"IsStatusFailed","type":"filter","properties":{"body":"done(steps.getStatus.response.body.status === \"failed\");\n"}},{"id":213845,"onSuccess":["runningSyncParams"],"onFailure":["failedSyncParams"],"name":"isSyncStarted","type":"filter","properties":{"body":"if(steps.startExecution.response.code !== 200){\n  done(false);\n}\n\ndone(true);"}},{"id":213846,"onSuccess":["getStepData_params"],"onFailure":["SyncFailed"],"name":"IsSyncSuccess","type":"filter","properties":{"body":"let flag = steps.checkFormulaFailedOrSucceeded.flag;\nlet id = steps.checkFormulaFailedOrSucceeded.stepInfo.id;\n\ndone(id !== undefined && !flag);"}},{"id":264173,"onSuccess":["ChargebeeGetLastSyncDetails"],"onFailure":["sendErrorCard"],"name":"IsTpIntegConfFetched","type":"filter","properties":{"body":"if(steps.ChargebeeGetTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264187,"onSuccess":["Success_syncStart"],"onFailure":["sendErrorCard"],"name":"isTpIntegConfUpdated","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf_2.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264185,"onSuccess":["updateTpConfig2_params"],"onFailure":["sendErrorCard"],"name":"isTpSyncUpdatedRunning","type":"filter","properties":{"body":"if(steps.ChargebeeUpdateSyncRunning.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264181,"onSuccess":["ExecutionNotRunniing"],"onFailure":["sendErrorCard"],"name":"isTpUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateSyncSuccess.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264178,"onSuccess":["HasExecutions"],"onFailure":["sendErrorCard"],"name":"isUpdateSuccess","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateSyncFailed.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":264189,"onSuccess":["updateTpConfig3_params"],"onFailure":["sendErrorCard"],"name":"isUpdateSyncFailed_2","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateSyncFailed_2.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":213847,"onSuccess":["HasNoExecution"],"onFailure":["sendErrorMail"],"name":"LastSyncDetails","type":"httpRequest","properties":{"method":"GET","retryDelay":"200","retryAttempts":"5","url":"${steps.InputParams.retrieveLatestSyncConfig.url}","retry":"true","query":"${steps.InputParams.retrieveLatestSyncConfig.query}","headers":"${steps.InputParams.retrieveLatestSyncConfig.auth}"}},{"id":213848,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"retrieveSyncDetails","type":"httpRequest","properties":{"method":"GET","retryDelay":"200","retryAttempts":"5","url":"${steps.retrieveSyncDetails_params.payload.url}","retry":"true","query":"${steps.retrieveSyncDetails_params.payload.query}","headers":"${steps.retrieveSyncDetails_params.payload.auth}"}},{"id":213849,"onSuccess":[],"onFailure":[],"name":"retrieveSyncDetails_params","type":"script","properties":{"body":"let tp_sync_details_id = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.autoSync.tp_sync_details_id || null;\n\nlet payload = {\n  url: \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\"+tp_sync_details_id,\n  auth:{\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + steps.InputParams.params.input.password)\n  },\n  query:{\n    'third_party_configuration[integration_name]': steps.InputParams.params.input.type\n  }\n};\n\n\ndone({\n  payload: payload\n});"}},{"id":213850,"onSuccess":[],"onFailure":[],"name":"RunningSync","type":"script","properties":{"body":"let execution_id = steps.LastSyncDetails.response.body.third_party_sync_detail.context.excecutionId;\n\nlet result =  {\n  message: \"Can not create new sync as a sync is already running.\" ,\n  execution_id: String(execution_id)\n};\n\ndone({\n  status: 200,\n  result: {result}\n});"}},{"id":213851,"onSuccess":["ChargebeeUpdateSyncRunning"],"onFailure":[],"name":"runningSyncParams","type":"script","properties":{"body":"let body = steps.ChargebeePostCreateNewSyncDetails.data.third_party_sync_detail;\nlet syncStatus = steps.ChargebeeGetLastSyncDetails.data;\n\nif(syncStatus.context.syncData !== undefined){\nif(syncStatus.status === \"failed\"){\n  body.context.syncData.previousSyncStart = syncStatus.context.syncData.previousSyncStart;\n  body.context.syncData.previousSyncEnd = syncStatus.context.syncData.previousSyncEnd;\n}\nelse{\n  body.context.syncData.previousSyncEnd = syncStatus.context.syncData.syncEnd || undefined;\n  body.context.syncData.previousSyncStart = syncStatus.context.syncData.syncStart || undefined;\n}\n}\n\nlet payload = {\n  error : false,\n  done: false,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.ChargebeePostCreateNewSyncDetails.data.third_party_sync_detail.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  query: body,\n  apiKey: steps.InputParams.params.input.apiKey,\n  siteName: steps.InputParams.params.input.siteName,\n  siteDomain: steps.InputParams.params.input.siteDomain,\n  type: steps.InputParams.params.input.type\n};\n\npayload.query.status = \"running\";\n\ndone({\n  payload: payload\n});"}},{"id":213852,"onSuccess":[],"onFailure":[],"name":"sendErrorCard","type":"script","properties":{"body":"let message = \"Auto Sync Trigger Failed. Invalid Parameters Specified.\";\n\nif((steps.getExecutionStatus !== undefined) && (steps.getExecutionStatus.response.code !== 200)){\n  message = \"Error : Failed to fetch execution status.\";\n}\n\nif((steps.retrieveSyncDetails !== undefined) && (steps.retrieveSyncDetails.response.code !== 200)){\n  message = \"Error : Failed to Retrieve Third Party Sync Details .\";\n}\n\nif((steps.updateSyncStatus !== undefined) && (steps.updateSyncStatus.response.code !== 200)){\n  message = \"Error : Failed to Update Third Party Sync Details .\";\n}\n\nif((steps.updateSyncStatus_Running !== undefined) && (steps.updateSyncStatus_Running.response.code !== 200)){\n  message = \"Error : Failed to Update Third Party Sync Details .\";\n}\n\nif((steps.updateSyncStatus_Failed !== undefined) && (steps.updateSyncStatus_Failed.response.code !== 200)){\n  message = \"Error : Failed to Update Third Party Sync Details .\";\n}\n\n\n\ndone({\n  statusCode: 400,\n  result: message\n});"}},{"id":213853,"onSuccess":["sendErrorCard"],"onFailure":["sendErrorCard"],"name":"sendErrorMail","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.InputParams.sendErrorMailParams.url}","retry":"true","query":"${steps.InputParams.sendErrorMailParams.query}","headers":"${steps.InputParams.sendErrorMailParams.headers}"}},{"id":213854,"onSuccess":["createNewSyncDetails_params"],"onFailure":[],"name":"startExecution","type":"request","properties":{"method":"POST","api":"${steps.startExecutionParams.syncFormula_trigger.url}","retryDelay":"200","body":"${steps.startExecutionParams.syncFormula_trigger.body}","retryAttempts":"5","retry":"true"}},{"id":213855,"onSuccess":["startExecution"],"onFailure":[],"name":"startExecutionParams","type":"script","properties":{"body":"let syncFormula_instance = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.sync.instance;\n\n\nlet syncFormula_trigger = {\n  url: \"/formulas/instances/\"+syncFormula_instance+\"/executions\",\n  body:{\n    apiKey: steps.InputParams.params.input.apiKey,\n    siteName: steps.InputParams.params.input.siteName,\n    siteDomain: steps.InputParams.params.input.siteDomain,\n    type: steps.InputParams.params.input.type,\n    initialSync: false,\n    autoSync : true,\n    debugLoggingEnabled: true\n  }\n};\n\ndone({\n  syncFormula_trigger: syncFormula_trigger\n});\n\n"}},{"id":267440,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"if(steps.checkExecutionStatus.query.status === \"succeeded\"){\n  done({\n    statusCode: 200,\n    status : \"succeeded\",\n    execution_id : steps.ChargebeeGetLastSyncDetails.data.context.excecutionId.toString(),\n    message : \"Sync Succeeded\"\n  });\n}else{\n  done({\n    statusCode: 200,\n    status : \"failed\",\n    execution_id : steps.ChargebeeGetLastSyncDetails.data.context.excecutionId.toString() || null,\n    message : \"Sync Failed\"\n  });\n}\n\n\n"}},{"id":213856,"onSuccess":[],"onFailure":[],"name":"Success_syncFinished","type":"script","properties":{"body":"let executionStatus;\nlet errorContent;\nlet successContent;\nlet successMessage;\nlet errorMessage;\n\nif(steps.checkFormulaFailedOrSucceeded.flag === true){\n  executionStatus = \"failed\";\n}else{\n  executionStatus = \"succeeded\";\n}\n\nlet card = JSON.parse(steps.getStepData.response.body[0].value);\n\nif(card[0] !== undefined){\n  if(card[0].card.icon === \"SUCCESS\"){\n    successContent = card[0].card.listContent;\n    successMessage =  card[0].card.heading;\n  }else{\n    errorContent = card[0].card.listContent;\n    errorMessage = card[0].card.heading;\n  }\n}\n\nif(card[1] !== undefined){\n  if(card[1].card.icon === \"SUCCESS\"){\n    successContent = card[1].card.listContent;\n    successMessage =  card[1].card.heading;\n  }else{\n    errorContent = card[1].card.listContent;\n    errorMessage = card[1].card.heading;\n  }\n}\n\n\n\nfor (let i in errorContent){\n    errorContent[i] = errorContent[i].split('>')[1].split('<')[0] + errorContent[i].split('</a>')[1];\n}\n\nfor (let i in successContent){\n    successContent[i] = successContent[i].split('>')[1].split('<')[0] + successContent[i].split('</a>')[1];\n}\n\n\nlet response = {\n  successMessage : successMessage,\n  successList : successContent,\n  errorMessage : errorMessage,\n  errorList : errorContent\n};\n\nlet message = (steps.getStepData.response.code === 200) ? response || \"Sync Succeeded. But Failed to Fetch Result\" :  steps.getStepData.response.body || \"Sync Formula Failed\";\n\n\ndone({\n  statusCode: 200,\n  result: {\n    status : executionStatus,\n    message : message\n  }\n});"}},{"id":213857,"onSuccess":[],"onFailure":[],"name":"Success_syncPending","type":"script","properties":{"body":"let execution_id = steps.ChargebeeGetLastSyncDetails.data.context.excecutionId;\ndone({\n  statusCode: 200,\n  result:{\n    status: \"pending\",\n  execution_id: String(execution_id),\n    message: \"Execution Pending.\"\n  }\n});"}},{"id":213858,"onSuccess":[],"onFailure":[],"name":"Success_syncStart","type":"script","properties":{"body":"let result = {\n    status: \"started\",\n    execution_id : String(steps.startExecution.response.body[0].id) || null\n  };\n  \nif(steps.ChargebeePostUpdateTpIntegConf_2.cb_status !== \"success\"){\n  result.message = \"Error: Third Party configuration update failed.\";\n}\n  \ndone({\n  status: 200,\n  result: result\n});"}},{"id":213859,"onSuccess":[],"onFailure":[],"name":"Success_syncStartFailed","type":"script","properties":{"body":"let message = \"Error on triggering Auto Sync. Platform API request failed.\";\n\nif(steps.ChargebeePostUpdateTpIntegConf_3.cb_status !== \"success\"){\n  message = message + \" \\nThird Party configuration update failed.\";\n}\n\n\ndone({\n  statusCode: 400,\n  result: {\n    status: \"failed\",\n    message : message\n  }\n});"}},{"id":213860,"onSuccess":[],"onFailure":[],"name":"SyncFailed","type":"script","properties":{"body":"\nlet message = \"Sync Formula Failed\";\n\ndone({\n  statusCode: 200,\n  result: {\n    status : \"Failed\",\n    message : message\n  }\n});"}},{"id":213861,"onSuccess":["HasExecutions"],"onFailure":[],"name":"UpdateFailedSync","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.FailedSyncParams.payload.url}","query":"${steps.FailedSyncParams.payload.body}","headers":"${steps.FailedSyncParams.payload.auth}"}},{"id":213862,"onSuccess":["ExecutionNotRunniing"],"onFailure":[],"name":"UpdateSuccess","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.UpdateSuccessParam.payload.url}","query":"${steps.UpdateSuccessParam.payload.body}","headers":"${steps.UpdateSuccessParam.payload.auth}"}},{"id":213863,"onSuccess":["ChargebeePostUpdateSyncSuccess"],"onFailure":[],"name":"UpdateSuccessParam","type":"script","properties":{"body":"let errorRecord = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.sync.totalFailedRecords || 0;\nlet successRecord = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.formula.sync.totalRecordsSynced || 0;\nlet lastSyncTime = steps.ChargebeeGetTpIntegConf.data.config_json.cloudElements.lastSyncTime;\n\nlet payload = {\n  error : false,\n  done: true,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +steps.ChargebeeGetLastSyncDetails.data.id,\n  headers: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.ChargebeeGetLastSyncDetails.data,\n  apiKey: steps.InputParams.params.input.apiKey,\n  siteName: steps.InputParams.params.input.siteName,\n  siteDomain: steps.InputParams.params.input.siteDomain,\n  type: steps.InputParams.params.input.type\n};\n\n payload.body.context.syncData.syncEnd = lastSyncTime;\n payload.body.status = \"succeeded\";\n payload.body.context.syncData.total = successRecord + errorRecord;\n payload.body.context.syncData.success = successRecord;\n payload.body.context.syncData.failed = errorRecord;\n \n payload.body.context = JSON.stringify(payload.body.context);\n\ndone({\n  payload: payload\n});\n\n\n \n"}},{"id":213864,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"updateSyncParams","type":"script","properties":{"body":"let tp_sync_details_id = steps.getTpConfig.response.body.third_party_configuration.config_json.cloudElements.autoSync.tp_sync_details_id || null;\n\n\nlet payload = {\n  error : false,\n  done: true,\n  url : \"https://\"+steps.InputParams.params.input.siteName+\".\"+steps.InputParams.params.input.siteDomain+\"/api/v2/third_party_sync_details/\" +tp_sync_details_id,\n  auth: {\n    Authorization: \"Basic \" + CE.b64(steps.InputParams.params.input.apiKey + \":\" + \"\")\n  },\n  body: steps.retrieveSyncDetails.response.body.third_party_sync_detail,\n};\n\npayload.body.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\npayload.body.status = \"succeeded\";\n// payload.body.context.syncData.total = total;\n// payload.body.context.syncData.success = successRecord;\n// payload.body.context.syncData.failed = errorRecord;\npayload.body.context.syncData.syncEnd = Math.round((new Date().getTime())/1000);\n\nif(steps.checkFormulaFailedOrSucceeded.flag === true){\n  payload.body.status = \"failed\";\n  payload.error = true;\n}\n\ndone({\n  payload: payload\n});"}},{"id":213865,"onSuccess":["updateTpConfig1_params"],"onFailure":[],"name":"updateSyncStatus","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.updateSyncParams.payload.url}","retry":"true","query":"${steps.updateSyncParams.payload.body}","headers":"${steps.updateSyncParams.payload.auth}"}},{"id":213866,"onSuccess":["updateTpConfig3_params"],"onFailure":["sendErrorMail"],"name":"updateSyncStatus_Failed","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.failedSyncParams.payload.url}","retry":"true","query":"${steps.failedSyncParams.payload.body}","headers":"${steps.failedSyncParams.payload.auth}"}},{"id":213867,"onSuccess":["updateTpConfig2_params"],"onFailure":["sendErrorMail"],"name":"updateSyncStatus_Running","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","retryAttempts":"5","url":"${steps.runningSyncParams.payload.url}","retry":"true","query":"${steps.runningSyncParams.payload.body}","headers":"${steps.runningSyncParams.payload.auth}"}},{"id":213868,"onSuccess":["Success_syncFinished"],"onFailure":["Success_syncFinished"],"name":"updateTpConfig1","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","body":"${steps.updateTpConfig1_params.payload.body}","retryAttempts":"5","url":"${steps.updateTpConfig1_params.payload.url}","retry":"true","query":"","headers":"${steps.updateTpConfig1_params.payload.headers}"}},{"id":213869,"onSuccess":["Success_syncFinished"],"onFailure":[],"name":"updateTpConfig1_params","type":"script","properties":{"body":"let configJson = steps.getTpConfig.response.body.third_party_configuration;\n\nconfigJson.config_json.cloudElements.lastSyncTime = Math.round((new Date().getTime())/1000);\n\nconfigJson.config_json.cloudElements.autoSync.status = \"succeeded\";\nconfigJson.config_json.cloudElements.autoSync.finish_time = Math.round((new Date().getTime())/1000);\nconfigJson.config_json.cloudElements.autoSync.result = (steps.getStepData.response.code === 200) ? steps.getStepData.response.body || \"Sync Succeeded. But Failed to Fetch Result\" :  steps.getStepData.response.body || \"Sync Formula Failed\";\n\n\nif(steps.checkFormulaFailedOrSucceeded.flag === true){\n  configJson.config_json.cloudElements.autoSync.status = \"failed\";\n  configJson.config_json.cloudElements.autoSync.result = \"Error: Sync Formula Failed\"\n}\n\n\nlet payload = steps.InputParams.updateTpConfigParams;\n\npayload.body.config_json = configJson.config_json;\n\ndone({\n  payload: payload\n});\n\n\n"}},{"id":213870,"onSuccess":["Success_syncStart"],"onFailure":["Success_syncStart"],"name":"updateTpConfig2","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","body":"${steps.updateTpConfig2_params.payload.body}","retryAttempts":"5","url":"${steps.updateTpConfig2_params.payload.url}","retry":"true","query":"","headers":"${steps.updateTpConfig2_params.payload.headers}"}},{"id":213871,"onSuccess":["ChargebeePostUpdateTpIntegConf_2"],"onFailure":[],"name":"updateTpConfig2_params","type":"script","properties":{"body":"let configJson = steps.ChargebeeGetTpIntegConf.data;\n\nconfigJson.config_json.cloudElements.autoSync = {\n  status : \"running\",\n  start_time : Math.round((new Date().getTime())/1000),\n  execution_id : steps.startExecution.response.body[0].id || null,\n  tp_sync_details_id : steps.ChargebeePostCreateNewSyncDetails.data.third_party_sync_detail.id || null,\n};\n\nlet payload = steps.InputParams.updateTpConfigParams;\n\npayload.body.config_json = configJson.config_json;\n\ndone({\n  payload: payload\n});\n\n\n"}},{"id":213872,"onSuccess":["Success_syncStartFailed"],"onFailure":["Success_syncStartFailed"],"name":"updateTpConfig3","type":"httpRequest","properties":{"method":"POST","retryDelay":"200","body":"${steps.updateTpConfig3_params.payload.body}","retryAttempts":"5","url":"${steps.updateTpConfig3_params.payload.url}","retry":"true","headers":"${steps.updateTpConfig3_params.payload.headers}"}},{"id":213873,"onSuccess":["ChargebeePostUpdateTpIntegConf_3"],"onFailure":[],"name":"updateTpConfig3_params","type":"script","properties":{"body":"let configJson = steps.ChargebeeGetTpIntegConf.data;\n\nconfigJson.config_json.cloudElements.autoSync = {\n  status : \"failed\",\n  start_time : Math.round((new Date().getTime())/1000),\n};\n\nlet payload = steps.InputParams.updateTpConfigParams;\n\npayload.body.config_json = configJson.config_json;\n\ndone({\n  payload: payload\n});"}}],"triggers":[{"id":25937,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31257,"name":"ChargebeeGet","userId":27893,"accountId":24428,"createdDate":"2019-11-12T11:30:28Z","steps":[{"id":245638,"onSuccess":["ChargebeeGetCBDelay2"],"onFailure":["ChargebeeGetResult"],"name":"ChargebeeGetCallAgainCB","type":"filter","properties":{"body":"//done(false); //Since delay causing 30 second limit issues\n\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetCBData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245636,"onSuccess":["ChargebeeGetCBDelay"],"onFailure":["ChargebeeGetResult2"],"name":"ChargebeeGetCallAgainHttp","type":"filter","properties":{"body":"done(false); //Since delay causing 30 second limit issues\n\nif(steps.ChargebeeGetInputParams.intervel.length > 0 && steps.ChargebeeGetInputParams.retryCode[steps.ChargebeeGetGetHttpData.response.code] !== undefined) {\n  steps.ChargebeeGetInputParams.delay.query.delay = steps.ChargebeeGetInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245637,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":[],"name":"ChargebeeGetCBDelay","type":"httpRequest","properties":{"method":"GET","url":"${steps.ChargebeeGetInputParams.delay.url}","query":"${steps.ChargebeeGetInputParams.delay.query}","headers":"${steps.ChargebeeGetInputParams.delay.headers}"}},{"id":245639,"onSuccess":["ChargebeeGetGetCBData"],"onFailure":[],"name":"ChargebeeGetCBDelay2","type":"httpRequest","properties":{"method":"GET","url":"${steps.ChargebeeGetInputParams.delay.url}","headers":"${steps.ChargebeeGetInputParams.delay.headers}","query":"${steps.ChargebeeGetInputParams.delay.query}"}},{"id":244768,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244769,"onSuccess":["ChargebeeGetCallAgainCB"],"onFailure":["ChargebeeGetCallAgainCB"],"name":"ChargebeeGetGetCBData","type":"elementRequest","properties":{"method":"GET","acceptableStatusCodes":"200-600","api":"${steps.ChargebeeGetInputParams.url}","elementInstanceId":"${config.chargebee}","body":"","headers":"${steps.ChargebeeGetInputParams.headers}","query":"${steps.ChargebeeGetInputParams.query}"}},{"id":244774,"onSuccess":["ChargebeeGetCallAgainHttp"],"onFailure":["ChargebeeGetCallAgainHttp"],"name":"ChargebeeGetGetHttpData","type":"httpRequest","properties":{"method":"GET","acceptableStatusCodes":"200-600","body":"","url":"${steps.ChargebeeGetInputParams.url}","query":"${steps.ChargebeeGetInputParams.query}","headers":"${steps.ChargebeeGetInputParams.headers}"}},{"id":244764,"onSuccess":["ChargebeeGetIsValidUrl"],"onFailure":[],"name":"ChargebeeGetInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\ndone({\n    url: url,\n    query: query,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244771,"onSuccess":["ChargebeeGetGetHttpData"],"onFailure":["ChargebeeGetGetCBData"],"name":"ChargebeeGetIsHttp","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url.startsWith(\"https://\"));"}},{"id":244767,"onSuccess":["ChargebeeGetIsHttp"],"onFailure":["ChargebeeGetError"],"name":"ChargebeeGetIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeeGetInputParams.url !== undefined && steps.ChargebeeGetInputParams.url!== \"\");"}},{"id":244770,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult","type":"script","properties":{"body":"if(steps.ChargebeeGetGetCBData.response.code < 300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetCBData.response.code,\n    data:steps.ChargebeeGetGetCBData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetCBData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetCBData.response!== undefined && steps.ChargebeeGetGetCBData.response.body!== undefined && steps.ChargebeeGetGetCBData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetCBData.response.body.error_code;\n    let cbcode = steps.ChargebeeGetGetCBData.response.code || 404;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_code: cbcode,\n    cb_exit:hardstop\n  });\n}\n\n"}},{"id":244775,"onSuccess":[],"onFailure":[],"name":"ChargebeeGetResult2","type":"script","properties":{"body":"if(steps.ChargebeeGetGetHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    cb_code: steps.ChargebeeGetGetHttpData.response.code,\n    data:steps.ChargebeeGetGetHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeeGetInputParams.hardStop[steps.ChargebeeGetGetHttpData.response.code] !== undefined;\n  if(steps.ChargebeeGetGetHttpData.response.body!== undefined && steps.ChargebeeGetGetHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeeGetGetHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_code: steps.ChargebeeGetGetHttpData.response.code\n  });\n}\n\n"}}],"triggers":[{"id":27722,"onSuccess":["ChargebeeGetInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[{"id":59935,"key":"chargebee","name":"chargebee","type":"elementInstance","required":true}]},{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"method":"GET","url":"${steps.ChargebeePostInputParams.delay.url}","query":"${steps.ChargebeePostInputParams.delay.query}","headers":"${steps.ChargebeePostInputParams.delay.headers}"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"method":"POST","acceptableStatusCodes":"200-600","body":"${steps.ChargebeePostInputParams.body}","url":"${steps.ChargebeePostInputParams.url}","headers":"${steps.ChargebeePostInputParams.headers}","query":"${steps.ChargebeePostInputParams.query}"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"method":"GET","uri":"/autoSync","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /autoSync","configuration":[]}