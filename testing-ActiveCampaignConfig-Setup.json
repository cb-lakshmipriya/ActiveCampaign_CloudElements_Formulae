{"id":29303,"name":"testing-ActiveCampaignConfig-Setup","userId":27893,"accountId":24428,"createdDate":"2019-09-03T05:24:30Z","steps":[{"id":264191,"onSuccess":["isTpIntegConfUpdated"],"onFailure":[],"name":"ChargebeePostUpdateTpIntegConf","type":"formula","properties":{"args":"${steps.ConfigParams}","formulaId":"31258"}},{"id":213874,"onSuccess":["ChargebeePostUpdateTpIntegConf"],"onFailure":[],"name":"ConfigParams","type":"script","properties":{"body":"let apiKey=steps.InputParams.input.apiKey;\nlet siteName=steps.InputParams.input.siteName;\nlet siteDomain=steps.InputParams.input.siteDomain;\nlet type=steps.InputParams.input.type;\n\nlet configuration = {\n  new_sub_step : \"connect\"\n};\n\nlet body = {\n url: \"https://\"+siteName+\".integrations.\"+siteDomain+\"/integrations/update_tp_integ_conf\",\n headers: {\n   \"Content-Type\": \"application/json\",\n   \"cache-control\": \"no-cache\"\n },\n body:{\n     integration_name :type,\n     site_name :siteName,\n     api_key :apiKey,\n     config_json : configuration\n  },\n  apiKey: apiKey,\n  siteName: siteName,\n  siteDomain: siteDomain,\n  type: type\n};\n\ndone(body);\n"}},{"id":213875,"onSuccess":["ValidateParams"],"onFailure":[],"name":"InputParams","type":"script","properties":{"body":"let apiKey = trigger.args.request.query['cb-api-key'];\nlet siteName = trigger.args.request.query['cb-site-name'];\nlet type = trigger.args.request.query['type'];\nlet chargebeeElement = trigger.args.request.query['chargebeeElement'];\nlet thirdPartyElement = trigger.args.request.query['thirdPartyElement'];\nlet formulaConnect = trigger.args.request.query['formulaConnect'];\nlet formulaCreate = trigger.args.request.query['formulaCreate'];\nlet formulaValidate = trigger.args.request.query['formulaValidate'];\nlet siteDomain = trigger.args.request.query['cb-domain'];\nlet formulaMapping = trigger.args.request.query['formulaMapping'];\nlet formulaMappingProceed = trigger.args.request.query['formulaMappingProceed'];\nlet formulaSync = trigger.args.request.query['formulaSync'];\nlet activeCampaignCreateSetup = trigger.args.request.query['activeCampaignCreateSetup'];\n\nlet activeCampaignValidateSetup = trigger.args.request.query['activeCampaignValidateSetup'];\nlet activeCampaignValidateProceedSetup = trigger.args.request.query['activeCampaignValidateProceedSetup'];\nlet activeCampaignValidateProceedFinal = trigger.args.request.query['activeCampaignValidateProceedFinal'];\nlet activeCampaignMappingSetup = trigger.args.request.query['activeCampaignMappingSetup'];\nlet activeCampaignMappingProceedSetup = trigger.args.request.query['activeCampaignMappingProceedSetup'];\nlet activeCampaignInitialSyncRunSetup = trigger.args.request.query['activeCampaignInitialSyncRunSetup'];\nlet ActiveCampaignProcessingCardSetup = trigger.args.request.query['ActiveCampaignProcessingCardSetup'];\nlet ActiveCampaignSyncRunSetup = trigger.args.request.query['ActiveCampaignSyncRunSetup'];\nlet ActiveCampaignUnlinkSetup = trigger.args.request.query['ActiveCampaignUnlinkSetup'];\nlet url = trigger.args.request.query['url'];\n\n\nlet errorEmailEndpoint =  'https://' + siteName + '.' + siteDomain + '/adhoc_checkout_email/api/send';\nlet errorEmailAddress = \"integrations-growth-internal@chargebee.com\";\n\n\n\n\n\nlet params = {\n  input: {\n    apiKey: apiKey,\n    siteName: siteName,\n    siteDomain:siteDomain,\n    type: type,\n    errorEmailEndpoint: errorEmailEndpoint,\n    errorEmailAddress: errorEmailAddress,\n    chargebeeElement: chargebeeElement,\n    thirdPartyElement: thirdPartyElement,\n    formulaConnect: formulaConnect,\n    formulaCreate: formulaCreate,\n    formulaValidate:formulaValidate,\n    formulaMapping:formulaMapping,\n    formulaMappingProceed:formulaMappingProceed,\n    formulaSync:formulaSync,\n    activeCampaignCreateSetup:activeCampaignCreateSetup,\n    activeCampaignValidateSetup:activeCampaignValidateSetup,\n    activeCampaignValidateProceedSetup:activeCampaignValidateProceedSetup,\n    activeCampaignValidateProceedFinal:activeCampaignValidateProceedFinal,\n    activeCampaignMappingSetup:activeCampaignMappingSetup,\n    activeCampaignMappingProceedSetup:activeCampaignMappingProceedSetup,\n    activeCampaignInitialSyncRunSetup:activeCampaignInitialSyncRunSetup,\n    ActiveCampaignProcessingCardSetup:ActiveCampaignProcessingCardSetup,\n    ActiveCampaignSyncRunSetup:ActiveCampaignSyncRunSetup,\n    ActiveCampaignUnlinkSetup:ActiveCampaignUnlinkSetup,\n    url:url\n    \n  }\n};\n\nparams.connectURL = \"/\" + params.input.type + \"/connect\";\nparams.connectHeaders = {\n  \"Elements-Formula-Instance-Id\": params.input.formulaConnect\n};\n\n\nconst isValid = function(obj,key){\n  if(obj[key] === undefined){\n    return key+\" undefined\";\n  }\n  if(obj[key] === ''){\n    return key+\" is empty\";\n  }\n  return '';\n}\n\nlet error = '';\n\nif(apiKey===undefined) {\n  error +=  \"apiKey  undefined,\";\n}\nif(siteName===undefined) {\n  error +=  \"siteName undefined,\";\n}\nif(type===undefined) {\n  error += \"type  undefined,\";\n}\nif(chargebeeElement===undefined) {\n  error += \"chargebeeElement undefined,\";\n}\nif(thirdPartyElement===undefined) {\n  error += \"thirdPartyElement undefined,\";\n}\nif(formulaConnect===undefined) {\n  error +=  \"formulaConnect  undefined,\";\n}\nif(formulaCreate===undefined) {\n  error +=  \"formulaCreate  undefined,\";\n}\nif(formulaValidate===undefined) {\n  error +=  \"formulaValidate  undefined,\";\n}\nif(formulaMapping===undefined) {\n  error +=  \"formulaMapping  undefined,\";\n}\nif(formulaMappingProceed===undefined) {\n  error +=  \"formulaMappingProceed  undefined,\";\n}\nif(formulaSync===undefined) {\n  error +=  \"formulaSync  undefined,\";\n}\n\nparams.error = error;\n\ndone(params);"}},{"id":264192,"onSuccess":["Success"],"onFailure":["SendError"],"name":"isTpIntegConfUpdated","type":"filter","properties":{"body":"if(steps.ChargebeePostUpdateTpIntegConf.cb_status === \"success\"){\n  done(true);\n}\n\ndone(false);"}},{"id":213876,"onSuccess":[],"onFailure":[],"name":"SendError","type":"script","properties":{"body":"done({\n  statusCode: 200,\n  result: \n  {\n    \"listContent\": [\n         \"Integeration Error\",\n        steps.InputParams.error\n\n    ],\n    \"docUrl\": \"\",\n    \"signupUrl\": \"\",\n    \"connect\": {\n        \"id\": \"credentials\",\n        \"display\": \"Connect\",\n        \"icon\": \"ARROW\",\n        \"buttonLook\": \"FILLED\",\n        \"type\": \"POP_UP\",\n        \"popUp\": {\n            \"title\": \"Integeration Error\",\n            \"submitButton\": \"Connect\",\n            \"cancelButton\": \"Dismiss\",\n            \"description\": steps.InputParams.error,\n            \"advance\": \"true\",\n            \"type\": \"INPUT\",\n            \"apiEndPoint\": {\n            }\n        }\n    }\n}\n})"}},{"id":213877,"onSuccess":["SendError"],"onFailure":["SendError"],"name":"sendErrorMail","type":"httpRequest","properties":{"headers":"${steps.InputParams.input.authHeader}","query":"${steps.sendErrorMailParams.params}","url":"${steps.InputParams.input.errorEmailEndpoint}","method":"POST"}},{"id":213878,"onSuccess":["SendError"],"onFailure":["SendError"],"name":"sendErrorMailParams","type":"script","properties":{"body":"let payload = {\n  content : \"Integration Error, Formula-Instance-ID : \" + trigger.args.request.headers['elements-formula-instance-id'],\n  subject : \"Fatal Error Occurred during \" + steps.InputParams.input.type + \" Integration\",\n  to_address : steps.InputParams.input.errorEmailAddress,\n  api_key : steps.InputParams.input.apiKey\n}\n\n\nlet authHeader = {\n  Authorization: \"Basic \" + CE.b64(steps.InputParams.input.apiKey + \":\" + \"\")\n};\n\ndone({\n  params: payload,\n  authHeader: authHeader\n});"}},{"id":213879,"onSuccess":[],"onFailure":[],"name":"Success","type":"script","properties":{"body":"let card = {\n        \"contents\": [\n            \"ActiveCampaign lets you send personalized messages, newsletters, automated follow-ups to customers. You can also customize messages, segment your contacts to automate emails, manage your pipelines, organize customer data, and more.\",\n            \"\",\n            \"By connecting Chargebee with ActiveCampaign, you can automatically synchronize your subscription data to ActiveCampaign. This will help you create customized campaigns targeting your customers.<a href='https://www.chargebee.com/docs/active-campaign.html' target='blank'> Learn More</a>\"\n        ],\n        \"docUrl\": \"https://activecampaign.com\",\n        \"signupUrl\": \"https://activecampaign.com\",\n        \"connect\": {\n            \"id\": \"credentials\",\n            \"display\": \"Connect\",\n            \"icon\": \"ARROW\",\n            \"buttonLook\": \"FILLED\",\n            \"type\": \"POP_UP\",\n            \"popUp\": {\n                \"inputFields\": [{\n                    \"dispName\": \"API Access URL\",\n                    \"req\": \"true\",\n                    \"type\": \"TEXT\",\n                    \"id\": \"account\",\n                    \"placeholder\": \"eg: https://abc.api-us1.com\"\n                },\n                {\n                    \"dispName\": \"API Access Key\",\n                    \"req\": \"true\",\n                    \"type\": \"PASSWORD\",\n                    \"id\": \"apiToken\",\n                    \"placeholder\": \"eg: 1233asfsdf23434343434\"\n                },\n                {\n                    \"req\": \"true\",\n                    \"type\": \"CHECKBOX\",\n                    \"id\": \"checkbox1\",\n                    \"desc\": \"I understand that, ActiveCampaign may store my customer and subscription data. (Please refer to ActiveCampaign's <a href='https://www.activecampaign.com/terms-of-service'>Terms of Service</a>, <a href='https://www.activecampaign.com/consent-policy'>Consent policy</a> and <a href='https://www.activecampaign.com/privacy-policy'>Privacy policy</a>).\"\n                }\n                ],\n                \"message\": {\n                    \"message\": \"You can find your API Access URL and API Access Key from ActiveCampaign by navigating to Settings > Developer section\"\n                },\n                \"title\": \"Connect to ActiveCampaign\",\n                \"submitButton\": \"Connect\",\n                \"cancelButton\": \"Dismiss\",\n                \"description\": \"Specify your ActiveCampaign Base URL and API secret\",\n                \"advance\": \"true\",\n                \"type\": \"INPUT\",\n                \"apiEndPoint\": {\n                    \"apiUrl\": steps.InputParams.input.url+\"/create\",\n                    \"type\":\"GET\",\n                       \"headers\":{\n                        \"Elements-Formula-Instance-Id\":steps.InputParams.input.activeCampaignCreateSetup\n                    },\n                       \"input\":steps.InputParams.input\n                   }\n            }\n        }\n};\n\n\ndone({\n  statusCode: 200,\n  result: card\n})\n\n"}},{"id":213880,"onSuccess":["Success"],"onFailure":[],"name":"updateConfig","type":"httpRequest","properties":{"headers":"${steps.ConfigParams.headers}","body":"${steps.ConfigParams.body}","url":"${steps.ConfigParams.url}","method":"POST"}},{"id":213881,"onSuccess":["ConfigParams"],"onFailure":["SendError"],"name":"ValidateParams","type":"filter","properties":{"body":"let params = steps.InputParams;\nif(params.error==='') {\n  done(true);\n}else {\n  done(false);\n}"}}],"triggers":[{"id":25938,"onSuccess":["InputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"subFormulas":[{"id":31258,"name":"ChargebeePost","userId":27893,"accountId":24428,"createdDate":"2019-11-12T12:17:49Z","steps":[{"id":245808,"onSuccess":["ChargebeePostCBDelay"],"onFailure":["ChargebeePostResult2"],"name":"ChargebeePostCallAgainHttp","type":"filter","properties":{"body":"done(false);\n//30 seconds limit issue \n\n\nif(steps.ChargebeePostInputParams.intervel.length > 0 && steps.ChargebeePostInputParams.retryCode[steps.ChargebeePostPostHttpData.response.code] !== undefined) {\n  steps.ChargebeePostInputParams.delay.query.delay = steps.ChargebeePostInputParams.intervel.pop();\n  done(true);\n}else {\n  done(false);\n}\n"}},{"id":245810,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":[],"name":"ChargebeePostCBDelay","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.delay.headers}","query":"${steps.ChargebeePostInputParams.delay.query}","url":"${steps.ChargebeePostInputParams.delay.url}","method":"GET"}},{"id":244779,"onSuccess":[],"onFailure":[],"name":"ChargebeePostError","type":"script","properties":{"body":"done({\n  cb_status:\"failure\",\n  cb_error_code:\"formula_invalid_url\"\n});"}},{"id":244782,"onSuccess":["ChargebeePostIsValidUrl"],"onFailure":[],"name":"ChargebeePostInputParams","type":"script","properties":{"body":"let url = trigger.args.url;\nlet query = trigger.args.query;\nlet body = trigger.args.body;\nlet apiKey = trigger.args.apiKey;\nlet headers = trigger.args.headers;\nlet siteDomain = trigger.args.siteDomain;\nlet siteName = trigger.args.siteName;\nlet type = trigger.args.type;\n\n\nlet intervel = [];\nintervel.push(5000);\nintervel.push(4000);\nintervel.push(3000);\nintervel.push(2000);\nintervel.push(1000);\n\nif (query === undefined) {\n    query = {};\n}\nif (headers === undefined) {\n    headers = {};\n}\nif(body === undefined) {\n  body = {};\n}\ndone({\n    url: url,\n    query: query,\n    body:body,\n    //intervel:[5000,10000,20000,40000,80000],\n    intervel: intervel,\n    retryCode: {\n        503: true,\n        429: true,\n        502: true,\n        501: true,\n        500: true\n        // 403: true,\n    },\n    hardStop: {\n        503: true,\n        429: true,\n        502: true,\n        403: true,\n        400: true,\n        500:true,\n        401:true,\n        409: true\n    },\n    headers: headers,\n    delay: {\n        url: \"https://\" + siteName + \".integrations.\" + siteDomain + \"/api/ipaasdelay\",\n        query: {\n            delay: 2000\n        },\n        headers: {\n            \"api_key\": apiKey\n        }\n    }\n});"}},{"id":244784,"onSuccess":["ChargebeePostPostHttpData"],"onFailure":["ChargebeePostError"],"name":"ChargebeePostIsValidUrl","type":"filter","properties":{"body":"done(steps.ChargebeePostInputParams.url !== undefined && steps.ChargebeePostInputParams.url!== \"\");"}},{"id":244781,"onSuccess":["ChargebeePostCallAgainHttp"],"onFailure":["ChargebeePostCallAgainHttp"],"name":"ChargebeePostPostHttpData","type":"httpRequest","properties":{"headers":"${steps.ChargebeePostInputParams.headers}","acceptableStatusCodes":"200-600","body":"${steps.ChargebeePostInputParams.body}","query":"${steps.ChargebeePostInputParams.query}","url":"${steps.ChargebeePostInputParams.url}","method":"POST"}},{"id":244786,"onSuccess":[],"onFailure":[],"name":"ChargebeePostResult2","type":"script","properties":{"body":"if(steps.ChargebeePostPostHttpData.response.code <300) {\n  done({\n    cb_status:\"success\",\n    data:steps.ChargebeePostPostHttpData.response.body\n  });\n}else {\n  let cb_error_code = \"formula_default_error\";\n\n  let hardstop = steps.ChargebeePostInputParams.hardStop[steps.ChargebeePostPostHttpData.response.code] !== undefined;\n  if(steps.ChargebeePostPostHttpData.response.body!== undefined && steps.ChargebeePostPostHttpData.response.body.error_code !== undefined) {\n    cb_error_code = steps.ChargebeePostPostHttpData.response.body.error_code;\n  }\n  done({\n    cb_status:\"failure\",\n    cb_error_code:cb_error_code,\n    cb_exit:hardstop,\n    cb_error_body: steps.ChargebeePostPostHttpData.response\n  });\n}\n\n"}}],"triggers":[{"id":27723,"onSuccess":["ChargebeePostInputParams"],"onFailure":[],"type":"manual","async":true,"name":"trigger","properties":{}}],"engine":"v3","active":true,"debugLoggingEnabled":false,"singleThreaded":false,"configuration":[]}],"method":"GET","uri":"/init","engine":"v1","active":true,"debugLoggingEnabled":true,"singleThreaded":false,"api":"GET /init","configuration":[]}